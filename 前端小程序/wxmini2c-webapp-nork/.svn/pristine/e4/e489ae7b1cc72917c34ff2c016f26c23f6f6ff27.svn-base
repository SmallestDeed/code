let WxParse = require('../../utils/wxParse/wxParse.js'),
    API = getApp().API,
    $App = getApp(),
    staticImageUrl = getApp().staticImageUrl,
    myForEach = getApp().myForEach
Page({

    /**
     * 页面的初始数据
     */
    data: {
        caseDetails: {},
        resourcePath: getApp().resourcePath,
        sevenUrl: getApp().sevenUrl,
        favoriteRequest: true,
        collectRequest: true,
        decoratePriceBox: false,
        caseListheight: '',
        caseListOverflow: 'none',
        decoratePriceList: [],
        isWholeHouse: 1, // 2表示全屋
        secondRender: false,
        staticImageUrl: staticImageUrl,
        inputFlag: false,
        inputFlag2: false,
        getPhone: false,
        message: '获取验证码',
        item: '',
        getObj: {
            phone: '',
            code: ''
        },
    },

    /**
     * 生命周期函数--监听页面加载
     */
    onLoad: function(options) {
        this.setData({
            isWholeHouse: options.type
        })
        this.getCaseDetails(options.id, options.type == 2 ? 1 : 0) // 获取方案详情
    },
    getCaseDetails(id, type) {
        API.getCaseDetails({
                id: id,
                type
            })
            .then(res => {
                res.status ? this.setData({
                    caseDetails: res.obj[0]
                }) : this.setData({
                    caseDetails: {}
                })
                res.status ? WxParse.wxParse('article', 'html', res.obj[0].desc || '', this, 5) : null
            })
    },
    toThreeD(e) {
        let item = e.currentTarget.dataset.item,
            routerQueryType = e.currentTarget.dataset.type,
            webUrl = null,
            sevenObj = {}
        if (routerQueryType === 'video') {
            API.getRecommendedVideoId({
                    planRecommendedId: item.designPlanRecommendId,
                    remark: routerQueryType
                })
                .then(res => {
                    if (res.success) {
                        return res.datalist[0].id
                    } else {
                        return false
                    }
                })
                .then(res => {
                    if (res) {
                        API.getRecommendedVideoMessage({
                                thumbId: res
                            })
                            .then(res => {
                                res.success ? this.toVideo(res.obj.url) : wx.showToast({
                                    title: '打开失败',
                                    icon: 'none'
                                })
                            })
                    }
                })
        } else {
            item.fullHousePlanUUID ? (webUrl = $App.wholeHouseUrl, sevenObj = {
                    uuid: item.fullHousePlanUUID,
                    embedded: 1
                }) :
                (webUrl = this.data.sevenUrl, sevenObj = {
                    token: wx.getStorageSync('token'),
                    platformCode: 'brand2c',
                    operationSource: 1,
                    planId: item.designPlanRecommendId,
                    routerQueryType: routerQueryType,
                    customReferer: $App.wxUrl,
                    platformNewCode: 'miniProgram'
                })
            for (let key in sevenObj) {
                webUrl += key + '=' + sevenObj[key] + '&'
            }
            getApp().data.webUrl = webUrl
            $App.myNavigateBack('pages/web-720/web-720')
            console.log(webUrl)
        }
    },
    toVideo(url) {
        wx.navigateTo({
            url: '/pages/video/video?url=' + url
        })
    },
    collectCase() { // 方案收藏
        this.collectOrLikeCase({
            title: '收藏',
            flag: 'collectRequest',
            num: 'collectNum',
            status: 'isFavorite',
            api: 'collectCase',
            param: 'recommendId',
            designPlanType: 'designPlanType'
        })
    },
    likeCase() { // 方案点赞
        this.collectOrLikeCase({
            title: '点赞',
            flag: 'favoriteRequest',
            num: 'likeNum',
            status: 'isLike',
            api: 'likeCase',
            param: 'designId',
            designPlanType: 'designPlanType'
        })
    },
    collectOrLikeCase(obj) {
        let that = this,
            status = null,
            title = null
        if (this.data[obj.flag] == true) {
            this.setData({
                [obj.flag]: false
            })
            this.data.caseDetails[obj.status] ? (status = 0, title = '取消' + obj.title) : (status = 1, title = obj.title)
            API[obj.api]({
                    status: status,
                    [obj.param]: this.data.caseDetails.designPlanRecommendId,
                    [obj.designPlanType]: this.data.caseDetails.planHouseType
                })
                .then(res => {
                    if (res.success) {
                        status == 0 ? this.data.caseDetails[obj.num] -= 1 : this.data.caseDetails[obj.num] += 1
                        this.data.caseDetails[obj.status] = status
                        this.setData({
                            caseDetails: this.data.caseDetails
                        })
                        wx.showToast({
                            title: title + '成功'
                        })
                    } else {
                        wx.showToast({
                            title: title + '失败',
                            icon: 'none'
                        })
                    }
                    setTimeout(function() {
                        that.setData({
                            [obj.flag]: true
                        })
                    }, 500)
                })
        }
    },
    putInMyhouse() { // 装进我家
        // this.renderTypeShow() // 显示组件  
        let _that = this
        if (wx.getStorageSync('bindingPhone')) {
           _that.toPutInMyhouse();
            return;
        }
        getApp().fetch(`/v2/user/center/checkUserSecondRender`, 'get', {},
            'user').then((res) => {
                if (res.success ? res.obj : false) {
                    _that.setData({ getPhone: true })
                } else {
                    _that.toPutInMyhouse();
                }
            })
    },
    toPutInMyhouse(){
        let item = this.data.caseDetails
        wx.setStorageSync('caseItem', item)
        wx.navigateTo({
            url: '/pages/case-house-type/case-house-type'
        })
    },
    closeFun() {
        this.setData({
            getPhone: !this.data.getPhone,
            click: true,
        })
        this.toPutInMyhouse()
    },
    changeInput(e) {
        let key = 'getObj.' + e.target.dataset.type
        this.setData({
            [key]: e.detail.value.trim(),
        })
        if (e.target.dataset.type == 'phone' && e.detail.value.length >= 11) {
            this.setData({
                inputFlag: true,
            })
        }
    },
    getCodeFun() {
        let phone = this.data.getObj.phone,
            that = this;
        if (!phone && !(/^1[3|4|5|8|9][0-9]\d{8}$/.test(phone))) {
            wx.showToast({
                title: '请正确填写电话!',
                icon: 'none'
            })
            return;
        }
        let url = `/v1/center/getSms`
        getApp().fetch(url, 'formData', { phoneNumber: phone, msgId: 12 }, 'user')
            .then((res) => {
                if (res.success) {
                    let num = 60
                    that.setData({
                        inputFlag2: true,
                        message: num + 's',
                    })
                    let setFunc = setInterval(function () {
                        num--;
                        that.setData({
                            message: num + 's',
                        })
                        if (num <= 0) {
                            clearInterval(setFunc);
                            that.setData({
                                message: '获取验证码',
                            })
                        }
                    }, 1000)
                }
            })
    },
    submitFun() {
        let that = this,
            code = this.data.getObj.code;
        if (!code) {
            wx.showToast({
                title: '请填写验证码',
                icon: 'none'
            })
            return
        }
        let url = `/v2/user/center/bindUserMobile`
        getApp().fetch(url, 'formData', {
            mobile: that.data.getObj.phone,
            authCode: code
        }, 'user').then((res) => {
            if (res.success) {
                wx.showToast({
                    title: '绑定成功'
                })
                wx.setStorage({
                    key: 'bindingPhone',
                    data: 1,
                })
                that.setData({
                    getPhone: false
                })
                that.toPutInMyhouse()
            } else {
                wx.showToast({
                    title: res.message,
                    icon: 'none'
                })
            }
        })
    },
    toShopDetail(e) {
        if (!this.data.caseDetails.shopId && this.data.caseDetails.shopId != 0) {
            wx.showToast({
                title: '暂无门店',
                icon: 'none'
            })
            return
        }
        wx.navigateTo({
            url: '/pages/companyDetail/companyDetail?id=' + this.data.caseDetails.shopId,
        })
    },
    showDecoratePriceBox(e) { // 显示装修报价弹框
        let item = e.currentTarget.dataset.item,
            height = wx.getSystemInfoSync().windowHeight
        if (item) {
            myForEach(item, (value) => {
                switch (value.decorateTypeName) {
                    case "半包":
                        value.text = '辅材+人工费+管理费';
                        break;
                    case "清水":
                        value.text = '人工费+管理费';
                        break;
                    case "全包":
                        value.text = '主材+辅材+人工费+管理费';
                        break;
                    case "包软装":
                        value.text = '主材+辅材+人工费+管理费+部分软装';
                        break;
                }
            })
            this.setData({
                decoratePriceList: item,
                decoratePriceBox: true,
                caseListheight: height + 'px',
                caseListOverflow: 'hidden'
            })
        } else {
            this.setData({
                decoratePriceBox: false,
                caseListheight: '',
                caseListOverflow: 'none'
            })
        }
    },
    onShow: function() {

    },
    onShareAppMessage: function() {

    }
})