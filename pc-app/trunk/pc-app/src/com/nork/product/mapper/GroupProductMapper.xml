<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nork.product.dao.GroupProductMapper">
	<!-- **插入定义** -->
	<insert id="insertSelective" parameterType="com.nork.product.model.GroupProduct"  useGeneratedKeys="true" keyProperty="id">
		insert into group_product
		<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="groupCode!= null">group_code, </if>
		<if test="groupName!= null">group_name, </if>
		<if test="type!= null">type, </if>
		<if test="state!= null">state, </if>
		<if test="sorting!= null">sorting, </if>
		<if test="picId!= null">pic_id, </if>
		<if test="styleValue!= null">style_value, </if>
		<if test="brandId!= null">brand_id, </if>
		<if test="code!= null">code, </if>
		<if test="location!= null">location, </if>
		<if test="sysCode!= null">sys_code, </if>
		<if test="creator!= null">creator, </if>
		<if test="gmtCreate!= null">gmt_create, </if>
		<if test="modifier!= null">modifier, </if>
		<if test="gmtModified!= null">gmt_modified, </if>
		<if test="isDeleted!= null">is_deleted, </if>
		<if test="att1!= null">att1, </if>
		<if test="att2!= null">att2, </if>
		<if test="numa1!= null">numa1, </if>
		<if test="numa2!= null">numa2, </if>
		<if test="remark!= null">remark, </if>
		<if test="groupPrice!= null">group_price, </if>
		<if test="designTempletId!= null">design_templet_id, </if>
		<if test="structureId!= null">structure_id, </if>
		<if test="spaceFunctionValue!= null">space_function_value, </if>
		<if test="spaceAreaValue!= null">space_area_value, </if>
		<if test="groupFlag!= null">group_flag, </if>
		
		<if test="groupWidth != null and   groupLength!='' ">group_width, </if>
		<if test="groupLength != null and  groupLength !='' ">group_length, </if>
		<if test="groupHigh != null and   groupHigh !='' ">group_high, </if>
		<if test="productType!= null">product_type, </if>
		<if test="groupType!= null">group_type, </if>
		<if test="userId != null">user_id,</if>
		<if test="compositeType != null">composite_type,</if>
		<if test="isDisplay != null">is_display,</if>
		<if test="companyId != null"> company_id,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="groupCode!= null">  #{groupCode,jdbcType=VARCHAR}, </if>
		<if test="groupName!= null">  #{groupName,jdbcType=VARCHAR}, </if>
		<if test="type!= null">  #{type,jdbcType=INTEGER}, </if>
		<if test="state!= null">  #{state,jdbcType=INTEGER}, </if>
		<if test="sorting!= null">  #{sorting,jdbcType=INTEGER}, </if>
		<if test="picId!= null">  #{picId,jdbcType=INTEGER}, </if>
		<if test="styleValue!= null">  #{styleValue,jdbcType=INTEGER}, </if>
		<if test="brandId!= null">  #{brandId,jdbcType=INTEGER}, </if>
		<if test="code!= null">  #{code,jdbcType=VARCHAR}, </if>
		<if test="location!= null">  #{location,jdbcType=VARCHAR}, </if>
		<if test="sysCode!= null">  #{sysCode,jdbcType=VARCHAR}, </if>
		<if test="creator!= null">  #{creator,jdbcType=VARCHAR}, </if>
		<if test="gmtCreate!= null">  #{gmtCreate,jdbcType=TIMESTAMP}, </if>
		<if test="modifier!= null">  #{modifier,jdbcType=VARCHAR}, </if>
		<if test="gmtModified!= null">  #{gmtModified,jdbcType=TIMESTAMP}, </if>
		<if test="isDeleted!= null">  #{isDeleted,jdbcType=INTEGER}, </if>
		<if test="att1!= null">  #{att1,jdbcType=VARCHAR}, </if>
		<if test="att2!= null">  #{att2,jdbcType=VARCHAR}, </if>
		<if test="numa1!= null">  #{numa1,jdbcType=INTEGER}, </if>
		<if test="numa2!= null">  #{numa2,jdbcType=INTEGER}, </if>
		<if test="remark!= null">  #{remark,jdbcType=VARCHAR}, </if>
		<if test="groupPrice!= null">  #{groupPrice,jdbcType=DOUBLE}, </if>
		<if test="designTempletId!= null">  #{designTempletId,jdbcType=INTEGER}, </if>	
		<if test="structureId!= null">  #{structureId,jdbcType=INTEGER}, </if>
		<if test="spaceFunctionValue!= null">  #{spaceFunctionValue,jdbcType=INTEGER}, </if>
		<if test="spaceAreaValue!= null">  #{spaceAreaValue,jdbcType=INTEGER}, </if>
		<if test="groupFlag!= null">  #{groupFlag,jdbcType=VARCHAR}, </if>	
		
		<if test="groupWidth != null and   groupLength!='' ">#{groupWidth,jdbcType=VARCHAR}, </if>
		<if test="groupLength != null and  groupLength !='' ">#{groupLength,jdbcType=VARCHAR}, </if>
		<if test="groupHigh != null and   groupHigh !='' ">#{groupHigh,jdbcType=VARCHAR}, </if>
		<if test="productType!= null">#{productType,jdbcType=VARCHAR}, </if>
		<if test="groupType!= null">#{groupType,jdbcType=INTEGER}, </if>
		<if test="userId != null">#{userId,jdbcType =INTEGER},</if>
		<if test="compositeType != null">#{compositeType,jdbcType=INTEGER},</if>
		<if test="isDisplay != null">#{isDisplay,jdbcType=INTEGER},</if>
		<if test="companyId != null"> #{companyId,jdbcType=INTEGER},</if>
		</trim>
	</insert>

	<!-- **更新定义** -->
	<update id="updateByPrimaryKeySelective" parameterType="com.nork.product.model.GroupProduct">
		update group_product
		<set>
		<if test="productType!= null">  product_type  = #{productType,jdbcType=VARCHAR}, </if>
		<if test="groupCode!= null">  group_code = #{groupCode,jdbcType=VARCHAR}, </if>
		<if test="groupName!= null">  group_name = #{groupName,jdbcType=VARCHAR}, </if>
		<if test="type!= null">  type = #{type,jdbcType=INTEGER}, </if>
		<if test="state!= null">  state = #{state,jdbcType=INTEGER}, </if>
		<if test="sorting!= null">  sorting = #{sorting,jdbcType=INTEGER}, </if>
		<if test="picId!= null">  pic_id = #{picId,jdbcType=INTEGER}, </if>
		<if test="styleValue!= null">  style_value = #{styleValue,jdbcType=INTEGER}, </if>
		<if test="brandId!= null">  brand_id = #{brandId,jdbcType=INTEGER}, </if>
		<if test="code!= null">  code = #{code,jdbcType=VARCHAR}, </if>
		<if test="location!= null">  location = #{location,jdbcType=VARCHAR}, </if>
		<if test="sysCode!= null">  sys_code = #{sysCode,jdbcType=VARCHAR}, </if>
		<if test="creator!= null">  creator = #{creator,jdbcType=VARCHAR}, </if>
		<if test="gmtCreate!= null">  gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}, </if>
		<if test="modifier!= null">  modifier = #{modifier,jdbcType=VARCHAR}, </if>
		<if test="gmtModified!= null">  gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}, </if>
		<if test="isDeleted!= null">  is_deleted = #{isDeleted,jdbcType=INTEGER}, </if>
		<if test="att1!= null">  att1 = #{att1,jdbcType=VARCHAR}, </if>
		<if test="att2!= null">  att2 = #{att2,jdbcType=VARCHAR}, </if>
		<if test="numa1!= null">  numa1 = #{numa1,jdbcType=INTEGER}, </if>
		<if test="numa2!= null">  numa2 = #{numa2,jdbcType=INTEGER}, </if>
		<if test="remark!= null">  remark = #{remark,jdbcType=VARCHAR}, </if>
		<if test="groupPrice!= null"> group_price= #{groupPrice,jdbcType=DOUBLE}, </if>
		<if test="designTempletId!= null"> design_templet_id= #{designTempletId,jdbcType=INTEGER}, </if>
		<if test="structureId!= null"> structure_id= #{structureId,jdbcType=INTEGER}, </if>
		<if test="spaceFunctionValue!= null"> space_function_value= #{spaceFunctionValue,jdbcType=INTEGER}, </if>
		<if test="spaceAreaValue!= null"> space_area_value= #{spaceAreaValue,jdbcType=INTEGER}, </if>
		<if test="groupFlag!= null">  group_flag = #{groupFlag,jdbcType=VARCHAR}, </if>
		<if test="groupType!= null">  group_type = #{groupType,jdbcType=INTEGER}, </if>
		<if test="userId != null">user_id = #{userId,jdbcType = INTEGER},</if>
		<if test="compositeType != null">composite_type = #{compositeType,jdbcType=INTEGER},</if>
		<if test="isDisplay != null"> is_display = #{isDisplay,jdbcType=INTEGER},</if>
		<if test="companyId != null"> company_id = #{companyId,jdbcType=INTEGER},</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- **删除定义** -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!--delete from group_product where id = #{id,jdbcType=INTEGER}-->
		UPDATE group_product SET is_deleted = 1,gmt_modified = NOW() WHERE id = #{id,jdbcType=INTEGER}
	</delete>
	
	<!-- **常量定义** -->
	<sql id="All_Column_List">
		id,brand_id,composite_type,style_value,group_flag,structure_id,space_function_value,space_area_value,group_code,group_name,type,state,sorting,pic_id,code,location,
		sys_code,creator,gmt_create,modifier,gmt_modified,is_deleted,att1,att2,numa1,numa2,remark,group_price,design_templet_id,product_style_id_info,product_type,group_type,user_id,is_display,company_id
	</sql>
	
	<!-- **结果定义** -->
	<resultMap id="AllResultMap" type="com.nork.product.model.GroupProduct">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result  column="group_code" property="groupCode" jdbcType="VARCHAR" />
		<result  column="group_name" property="groupName" jdbcType="VARCHAR" />
		<result  column="type" property="type" jdbcType="INTEGER" />
		<result  column="state" property="state" jdbcType="INTEGER" />
		<result  column="sorting" property="sorting" jdbcType="INTEGER" />
		<result  column="pic_id" property="picId" jdbcType="INTEGER" />
		<result  column="style_value" property="styleValue" jdbcType="INTEGER" />
		<result  column="brand_id" property="brandId" jdbcType="INTEGER" />
		<result  column="code" property="code" jdbcType="VARCHAR" />
		<result  column="location" property="location" jdbcType="VARCHAR" />
		<result  column="sys_code" property="sysCode" jdbcType="VARCHAR" />
		<result  column="creator" property="creator" jdbcType="VARCHAR" />
		<result  column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result  column="modifier" property="modifier" jdbcType="VARCHAR" />
		<result  column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
		<result  column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result  column="att1" property="att1" jdbcType="VARCHAR" />
		<result  column="att2" property="att2" jdbcType="VARCHAR" />
		<result  column="numa1" property="numa1" jdbcType="INTEGER" />
		<result  column="numa2" property="numa2" jdbcType="INTEGER" />
		<result  column="remark" property="remark" jdbcType="VARCHAR" />
		<result  column="group_price" property="groupPrice" jdbcType="DOUBLE" />
		<result  column="design_templet_id" property="designTempletId" jdbcType="INTEGER" />
		<result  column="brandName" property="brandName" jdbcType="VARCHAR" />
		<result  column="structure_id" property="structureId" jdbcType="INTEGER" />
		<result  column="space_function_value" property="spaceFunctionValue" jdbcType="INTEGER" />
		<result  column="space_area_value" property="spaceAreaValue" jdbcType="INTEGER" />
		<result  column="group_flag" property="groupFlag" jdbcType="VARCHAR" />
		<result  column="structure_code" property="structureCode" jdbcType="VARCHAR" />
		<result  column="structure_name" property="structureName" jdbcType="VARCHAR" />
		<result  column="structure_id" property="productStructureId" jdbcType="INTEGER" />
		<result  column="config_file_id" property="structureConfigFileId" jdbcType="INTEGER" />
 		<result  column="brand_name" property="brandName" jdbcType="VARCHAR" />
 		<result  column="style_name" property="styleName" jdbcType="VARCHAR" />
 		<result  column="pic_path" property="picPath" jdbcType="VARCHAR" />
 		<result  column="product_style_id_info" property="productStyleIdInfo" jdbcType="VARCHAR" />
 		<result  column="product_type" property="productType" jdbcType="VARCHAR" />
 		<result  column="group_type" property="groupType" jdbcType="INTEGER" />
 		<result  column="composite_type" property="compositeType" jdbcType="INTEGER" />
 		<result  column="user_id" property="userId" jdbcType ="INTEGER"/>
		<result  column="is_display" property="isDisplay" jdbcType="INTEGER"/>
		<result  column="company_id" property="companyId" jdbcType="INTEGER"/>
	</resultMap>
	
	<resultMap id="GroupResult" type="com.nork.product.model.GroupProductResult">
		<result column="file_name" property="fileName" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- **结果定义** -->
	<resultMap id="AllResultMapTwo" type="com.nork.product.model.GroupProductDetails">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result  column="group_id" property="groupId" jdbcType="INTEGER" />
		<result  column="product_id" property="productId" jdbcType="INTEGER" />
		<result  column="is_main" property="isMain" jdbcType="INTEGER" />
		<result  column="sys_code" property="sysCode" jdbcType="VARCHAR" />
		<result  column="creator" property="creator" jdbcType="VARCHAR" />
		<result  column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result  column="modifier" property="modifier" jdbcType="VARCHAR" />
		<result  column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
		<result  column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result  column="att1" property="att1" jdbcType="VARCHAR" />
		<result  column="att2" property="att2" jdbcType="VARCHAR" />
		<result  column="numa1" property="numa1" jdbcType="INTEGER" />
		<result  column="numa2" property="numa2" jdbcType="INTEGER" />
		<result  column="remark" property="remark" jdbcType="VARCHAR" />
		
		<result  column="brandName" property="brandName" jdbcType="VARCHAR" />
		<result  column="groupName" property="groupName" jdbcType="VARCHAR" />
		<result  column="groupCode" property="groupCode" jdbcType="VARCHAR" />
		<result  column="groupPicId" property="groupPicId" jdbcType="INTEGER" />
		<result  column="pic_path" property="groupPicPath" jdbcType="VARCHAR" />
		<result  column="collectState" property="collectState" jdbcType="INTEGER" />
<!-- 		<result  column="group_flag" property="groupFlag" jdbcType="VARCHAR" /> -->
	</resultMap>
	<!-- **查询定义** -->
	
	<!-- 按主键查询 -->
	<select id="selectByPrimaryKey" resultMap="AllResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="All_Column_List" />
		from group_product
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- 查询所有，可排序 -->
    <select id="selectList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.GroupProduct">
		select
		<include refid="All_Column_List" />
		from group_product
        where 1=1
		<if test="groupCode!= null">  and group_code = #{groupCode,jdbcType=VARCHAR} </if>
		<if test="groupName!= null">  and group_name = #{groupName,jdbcType=VARCHAR} </if>
		<if test="type!= null">  and type = #{type,jdbcType=INTEGER} </if>
		<if test="state!= null">  and state = #{state,jdbcType=INTEGER} </if>
		<if test="sorting!= null">  and sorting = #{sorting,jdbcType=INTEGER} </if>
		<if test="picId!= null">  and pic_id = #{picId,jdbcType=INTEGER} </if>
		<if test="styleValue!= null">  and style_value = #{styleValue,jdbcType=INTEGER} </if>
		<if test="brandId!= null">  and brand_id = #{brandId,jdbcType=INTEGER} </if>
		<if test="code!= null">  and code = #{code,jdbcType=VARCHAR} </if>
		<if test="location!= null">  and location = #{location,jdbcType=VARCHAR} </if>
		<if test="sysCode!= null">  and sys_code = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="creator!= null">  and creator = #{creator,jdbcType=VARCHAR} </if>
		<if test="gmtCreate!= null">  and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP} </if>
		<if test="modifier!= null">  and modifier = #{modifier,jdbcType=VARCHAR} </if>
		<if test="gmtModified!= null">  and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP} </if>
		<if test="isDeleted!= null">  and is_deleted = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="att1!= null">  and att1 = #{att1,jdbcType=VARCHAR} </if>
		<if test="att2!= null">  and att2 = #{att2,jdbcType=VARCHAR} </if>
		<if test="numa1!= null">  and numa1 = #{numa1,jdbcType=INTEGER} </if>
		<if test="numa2!= null">  and numa2 = #{numa2,jdbcType=INTEGER} </if>
		<if test="remark!= null">  and remark = #{remark,jdbcType=VARCHAR} </if>
		<if test="structureId!= null">  and structure_id = #{structureId,jdbcType=INTEGER} </if>
		<if test="groupFlag!= null and groupFlag!= '' ">  and group_flag = #{groupFlag,jdbcType=VARCHAR}</if>
		<if test="userId != null">and user_id = #{userId,jdbcType = INTEGER}</if>
		<if test="isDisplay != null"> and is_display = #{isDisplay,jdbcType=INTEGER}</if>
		<if test="companyId != null"> and company_id = #{companyId,jdbcType=INTEGER} </if>
		<if test="order != null and  order !=''  ">
			order by ${order}
			<if test="orderNum != null and  orderNum !='' ">
				${orderNum}
			</if>
		</if>
		<if test="orders != null and  orders !=''  ">
		   order by ${orders}
		</if>
	</select>
	
	<!-- 查询所有，可排序 -->
    <select id="selectCommonList" resultMap="GroupResult"
		parameterType="com.nork.product.model.GroupProduct">
		SELECT rf.file_name AS fileName 
		FROM group_product gp,res_pic rp,res_file rf WHERE 1=1 AND gp.`pic_id` = rp.`id` AND gp.`location`= rf.`id`
		<if test="groupCode!= null">  AND gp.group_code = #{groupCode,jdbcType=VARCHAR} </if>
		<if test="type!= null">  AND gp.type = #{type,jdbcType=INTEGER} </if>
		<if test="order != null and  order !=''  ">
			order by ${order}
			<if test="orderNum != null and  orderNum !='' ">
				${orderNum}
			</if>
		</if>
		<if test="orders != null and  orders !=''  ">
		   order by ${orders}
		</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>
	
	<!-- 分页汇总 -->
	<select id="selectCount" resultType="int"
		parameterType="com.nork.product.model.search.GroupProductSearch">
		select count(*)
		from group_product
		where 1=1
		<if test="groupCode !=  null and groupCode !=  ''   "> and group_code  = #{groupCode,jdbcType=VARCHAR} </if>
		<if test="sch_GroupCode_ !=  null and sch_GroupCode_ !=  ''   ">
			and group_code  like CONCAT(CONCAT('%',#{sch_GroupCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_GroupCode !=  null and sch_GroupCode !=  ''   ">
			and group_code  like CONCAT('%',#{sch_GroupCode,jdbcType=VARCHAR})
		 </if>
		<if test="schGroupCode_ !=  null and schGroupCode_ !=  ''   ">
			and group_code  like CONCAT(#{schGroupCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="groupCodeStart !=  null and groupCodeEnd!= null  ">
			and group_code between #{groupCodeStart,jdbcType=VARCHAR} and #{groupCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="groupName !=  null and groupName !=  ''   "> and group_name  = #{groupName,jdbcType=VARCHAR} </if>
		<if test="sch_GroupName_ !=  null and sch_GroupName_ !=  ''   ">
			and group_name  like CONCAT(CONCAT('%',#{sch_GroupName_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_GroupName !=  null and sch_GroupName !=  ''   ">
			and group_name  like CONCAT('%',#{sch_GroupName,jdbcType=VARCHAR})
		 </if>
		<if test="schGroupName_ !=  null and schGroupName_ !=  ''   ">
			and group_name  like CONCAT(#{schGroupName_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="groupNameStart !=  null and groupNameEnd!= null  ">
			and group_name between #{groupNameStart,jdbcType=VARCHAR} and #{groupNameEnd,jdbcType=VARCHAR}
		 </if>
		<if test="type !=  null  ">			and type  = #{type,jdbcType=INTEGER} </if>
		<if test="state !=  null  ">			and state  = #{state,jdbcType=INTEGER} </if>
		<if test="sorting !=  null  ">			and sorting  = #{sorting,jdbcType=INTEGER} </if>
		<if test="picId !=  null  ">			and pic_id  = #{picId,jdbcType=INTEGER} </if>
		<if test="styleValue !=  null  ">			and style_value  = #{styleValue,jdbcType=INTEGER} </if>
		<if test="brandId !=  null  ">			and brand_id  = #{brandId,jdbcType=INTEGER} </if>
		<if test="code !=  null and code !=  ''   "> and code  = #{code,jdbcType=VARCHAR} </if>
		<if test="location !=  null and location !=  ''   "> and location  = #{location,jdbcType=VARCHAR} </if>
		<if test="sch_Code_ !=  null and sch_Code_ !=  ''   ">
			and code  like CONCAT(CONCAT('%',#{sch_Code_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="structureId!= null">  and structure_id = #{structureId,jdbcType=INTEGER} </if>
		<if test="groupFlag!= null and groupFlag!= '' ">  and group_flag = #{groupFlag,jdbcType=VARCHAR}</if>
		<if test="sch_Code !=  null and sch_Code !=  ''   ">
			and code  like CONCAT('%',#{sch_Code,jdbcType=VARCHAR})
		 </if>
		<if test="schCode_ !=  null and schCode_ !=  ''   ">
			and code  like CONCAT(#{schCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="codeStart !=  null and codeEnd!= null  ">
			and code between #{codeStart,jdbcType=VARCHAR} and #{codeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code  = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code  like CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code  like CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		 </if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code  like CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and #{sysCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="creator !=  null and creator !=  ''   "> and creator  = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator  like CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator  like CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		 </if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator  like CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and #{creatorEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtCreate !=  null  ">
			and gmt_create  = #{gmtCreate,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between #{gmtCreateStart,jdbcType=TIMESTAMP} and #{gmtCreateEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier  = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier  like CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier  like CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		 </if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier  like CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and #{modifierEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtModified !=  null  ">
			and gmt_modified  = #{gmtModified,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between #{gmtModifiedStart,jdbcType=TIMESTAMP} and #{gmtModifiedEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="isDeleted !=  null  ">			and is_deleted  = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="att1 !=  null and att1 !=  ''   "> and att1  = #{att1,jdbcType=VARCHAR} </if>
		<if test="sch_Att1_ !=  null and sch_Att1_ !=  ''   ">
			and att1  like CONCAT(CONCAT('%',#{sch_Att1_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Att1 !=  null and sch_Att1 !=  ''   ">
			and att1  like CONCAT('%',#{sch_Att1,jdbcType=VARCHAR})
		 </if>
		<if test="schAtt1_ !=  null and schAtt1_ !=  ''   ">
			and att1  like CONCAT(#{schAtt1_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="att1Start !=  null and att1End!= null  ">
			and att1 between #{att1Start,jdbcType=VARCHAR} and #{att1End,jdbcType=VARCHAR}
		 </if>
		<if test="att2 !=  null and att2 !=  ''   "> and att2  = #{att2,jdbcType=VARCHAR} </if>
		<if test="sch_Att2_ !=  null and sch_Att2_ !=  ''   ">
			and att2  like CONCAT(CONCAT('%',#{sch_Att2_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Att2 !=  null and sch_Att2 !=  ''   ">
			and att2  like CONCAT('%',#{sch_Att2,jdbcType=VARCHAR})
		 </if>
		<if test="schAtt2_ !=  null and schAtt2_ !=  ''   ">
			and att2  like CONCAT(#{schAtt2_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="att2Start !=  null and att2End!= null  ">
			and att2 between #{att2Start,jdbcType=VARCHAR} and #{att2End,jdbcType=VARCHAR}
		 </if>
		<if test="numa1 !=  null  ">			and numa1  = #{numa1,jdbcType=INTEGER} </if>
		<if test="numa2 !=  null  ">			and numa2  = #{numa2,jdbcType=INTEGER} </if>
		<if test="remark !=  null and remark !=  ''   "> and remark  = #{remark,jdbcType=VARCHAR} </if>		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark  like CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		 </if>		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark  like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		 </if>		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark  like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		 </if>		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and #{remarkEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="groupPrice !=  null  and groupPrice !=  '' and groupPrice !=  0 ">			and group_price  = #{groupPrice,jdbcType=DOUBLE} </if>
		 <if test="userId != null">and user_id = #{userId,jdbcType = INTEGER}</if>
		 <if test="isDisplay != null"> and is_display = #{isDisplay,jdbcType=INTEGER}</if>
		 <if test="companyId != null"> and company_id = #{companyId,jdbcType=INTEGER} </if>
	</select>
	
	<!-- 分页查询 ,可在GroupProductSearch中自定义查询条件-->
	<select id="selectPaginatedList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.search.GroupProductSearch">
		select
		<include refid="All_Column_List" />
	    from group_product
		where 1=1	
		<if test="groupCode !=  null and groupCode !=  ''   "> and group_code  = #{groupCode,jdbcType=VARCHAR} </if>
		<if test="sch_GroupCode_ !=  null and sch_GroupCode_ !=  ''   ">
			and group_code  like CONCAT(CONCAT('%',#{sch_GroupCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_GroupCode !=  null and sch_GroupCode !=  ''   ">
			and group_code  like CONCAT('%',#{sch_GroupCode,jdbcType=VARCHAR})
		 </if>
		<if test="schGroupCode_ !=  null and schGroupCode_ !=  ''   ">
			and group_code  like CONCAT(#{schGroupCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="groupCodeStart !=  null and groupCodeEnd!= null  ">
			and group_code between #{groupCodeStart,jdbcType=VARCHAR} and #{groupCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="groupName !=  null and groupName !=  ''   "> and group_name  = #{groupName,jdbcType=VARCHAR} </if>
		<if test="sch_GroupName_ !=  null and sch_GroupName_ !=  ''   ">
			and group_name  like CONCAT(CONCAT('%',#{sch_GroupName_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_GroupName !=  null and sch_GroupName !=  ''   ">
			and group_name  like CONCAT('%',#{sch_GroupName,jdbcType=VARCHAR})
		 </if>
		<if test="schGroupName_ !=  null and schGroupName_ !=  ''   ">
			and group_name  like CONCAT(#{schGroupName_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="groupNameStart !=  null and groupNameEnd!= null  ">
			and group_name between #{groupNameStart,jdbcType=VARCHAR} and #{groupNameEnd,jdbcType=VARCHAR}
		 </if>
		<if test="structureId!= null">  and structure_id = #{structureId,jdbcType=INTEGER} </if>
		<if test="groupFlag!= null and groupFlag!= '' "> and group_flag = #{groupFlag,jdbcType=VARCHAR}</if>
		<if test="type !=  null  ">			and type  = #{type,jdbcType=INTEGER} </if>
		<if test="state !=  null  ">			and state  = #{state,jdbcType=INTEGER} </if>
		<if test="sorting !=  null  ">			and sorting  = #{sorting,jdbcType=INTEGER} </if>
		<if test="picId !=  null  ">			and pic_id  = #{picId,jdbcType=INTEGER} </if>
		<if test="styleValue !=  null  ">			and style_value  = #{styleValue,jdbcType=INTEGER} </if>
		<if test="brandId !=  null  ">			and brand_id  = #{brandId,jdbcType=INTEGER} </if>
		<if test="code !=  null and code !=  ''   "> and code  = #{code,jdbcType=VARCHAR} </if>
		<if test="location !=  null and location !=  ''   "> and location  = #{location,jdbcType=VARCHAR} </if>
		<if test="sch_Code_ !=  null and sch_Code_ !=  ''   ">
			and code  like CONCAT(CONCAT('%',#{sch_Code_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Code !=  null and sch_Code !=  ''   ">
			and code  like CONCAT('%',#{sch_Code,jdbcType=VARCHAR})
		 </if>
		<if test="schCode_ !=  null and schCode_ !=  ''   ">
			and code  like CONCAT(#{schCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="codeStart !=  null and codeEnd!= null  ">
			and code between #{codeStart,jdbcType=VARCHAR} and #{codeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code  = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code  like CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code  like CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		 </if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code  like CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and #{sysCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="creator !=  null and creator !=  ''   "> and creator  = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator  like CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator  like CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		 </if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator  like CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and #{creatorEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtCreate !=  null  ">
			and gmt_create  = #{gmtCreate,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between #{gmtCreateStart,jdbcType=TIMESTAMP} and #{gmtCreateEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier  = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier  like CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier  like CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		 </if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier  like CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and #{modifierEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtModified !=  null  ">
			and gmt_modified  = #{gmtModified,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between #{gmtModifiedStart,jdbcType=TIMESTAMP} and #{gmtModifiedEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="isDeleted !=  null  ">			and is_deleted  = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="att1 !=  null and att1 !=  ''   "> and att1  = #{att1,jdbcType=VARCHAR} </if>
		<if test="sch_Att1_ !=  null and sch_Att1_ !=  ''   ">
			and att1  like CONCAT(CONCAT('%',#{sch_Att1_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Att1 !=  null and sch_Att1 !=  ''   ">
			and att1  like CONCAT('%',#{sch_Att1,jdbcType=VARCHAR})
		 </if>
		<if test="schAtt1_ !=  null and schAtt1_ !=  ''   ">
			and att1  like CONCAT(#{schAtt1_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="att1Start !=  null and att1End!= null  ">
			and att1 between #{att1Start,jdbcType=VARCHAR} and #{att1End,jdbcType=VARCHAR}
		 </if>
		<if test="att2 !=  null and att2 !=  ''   "> and att2  = #{att2,jdbcType=VARCHAR} </if>
		<if test="sch_Att2_ !=  null and sch_Att2_ !=  ''   ">
			and att2  like CONCAT(CONCAT('%',#{sch_Att2_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Att2 !=  null and sch_Att2 !=  ''   ">
			and att2  like CONCAT('%',#{sch_Att2,jdbcType=VARCHAR})
		 </if>
		<if test="schAtt2_ !=  null and schAtt2_ !=  ''   ">
			and att2  like CONCAT(#{schAtt2_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="att2Start !=  null and att2End!= null  ">
			and att2 between #{att2Start,jdbcType=VARCHAR} and #{att2End,jdbcType=VARCHAR}
		 </if>
		<if test="numa1 !=  null  ">			and numa1  = #{numa1,jdbcType=INTEGER} </if>
		<if test="numa2 !=  null  ">			and numa2  = #{numa2,jdbcType=INTEGER} </if>
		<if test="remark !=  null and remark !=  ''   "> and remark  = #{remark,jdbcType=VARCHAR} </if>		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark  like CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		 </if>		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark  like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		 </if>		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark  like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		 </if>		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and #{remarkEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="groupPrice !=  null  and groupPrice !=  '' and groupPrice !=  0 ">			and group_price  = #{groupPrice,jdbcType=DOUBLE} </if>
		<if test="userId != null">and user_id = #{userId,jdbcType = INTEGER}</if>
		<if test="isDisplay != null"> and is_display = #{isDisplay,jdbcType=INTEGER}</if>
		<if test="companyId != null"> and company_id = #{companyId,jdbcType=INTEGER} </if>
		<if test="order != null and  order !=''  ">
			order by ${order} <if test="orderNum != null and  orderNum !='' ">${orderNum}</if>
		</if>
		<if test="orders != null and  orders !=''  ">  order by #{orders}</if>
		<if test="order == null and  orders == null ">  order by id desc</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>

    <!-- 其他Map等查询方式 -->
	<!-- 查询以某产品为主产品创建的产品组 -->
    <select id="getGroupListByProduct" resultMap="AllResultMap"
			parameterType="com.nork.product.model.search.GroupProductSearch">
<!-- 		SELECT gp.* FROM ( -->
<!-- 		SELECT * FROM group_product_details WHERE is_main = 1)gpd -->
<!-- 		LEFT JOIN base_product bp ON bp.id = gpd.product_id -->
<!-- 		LEFT JOIN group_product gp ON gp.id = gpd.group_id -->
<!-- 		WHERE bp.id IS NOT NULL  -->
		SELECT T.* FROM (
		select distinct gp.* from group_product as gp 
		LEFT JOIN group_product_details as gpd on(gp.id=gpd.group_id)
		LEFT JOIN base_product as bp on(gpd.product_id = bp.id)
		<if test="attributeConditionList !=  null and  attributeConditionList.size > 0 ">
			RIGHT JOIN (
				SELECT id AS product_id FROM (
				<foreach collection="attributeConditionList" index="index" item="item" open="" separator="UNION ALL" close="">
					select pa.product_id AS id from product_attribute pa
					LEFT JOIN product_props pp ON pp.id = pa.attribute_value_id
					WHERE 1=1
					and ${item}
				</foreach>
				) products group by products.id having count(products.id) &gt;= #{attributeConditionSize,jdbcType=INTEGER}
			) t4 ON (t4.product_id = bp.id)
		</if>
		where 1=1
		<if test="structureState == 2">
			and gpd.is_main = 1
			and gp.design_templet_id = 0
		</if>
		<if test="structureState == 1">
			and gp.design_templet_id = #{designTempletId,jdbcType=INTEGER}
			and gp.group_flag IS NOT NULL  
			and gp.group_flag !=''
		</if>
		<if test="productTypeValue != null and smallTypeValue != null ">
			and  bp.product_type_value =  #{productTypeValue,jdbcType=VARCHAR}
<!-- 			and  bp.product_small_type_value =  #{smallTypeValue,jdbcType=VARCHAR} -->
		</if>
		<if test="houseTypeList !=  null and  houseTypeList.size > 0  ">
				and (
				<foreach collection="houseTypeList" index="index" item="item">
					<choose>
						<when test="index== 0">
							CONCAT(',', bp.house_type_values, ',') like CONCAT('%,',#{item,jdbcType=VARCHAR},',%')
						</when>
						<otherwise>
							or CONCAT(',', bp.house_type_values, ',') like CONCAT('%,',#{item,jdbcType=VARCHAR},',%')
						</otherwise>
					</choose>
				</foreach>
				)
			</if>
		<if test="states != null and states.size > 0">
			and gp.state IN
			<foreach collection="states" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="structureId!= null">  and gp.structure_id = #{structureId,jdbcType=INTEGER} </if>
		<if test="groupFlag!= null and groupFlag!= '' ">  and gp.group_flag = #{groupFlag,jdbcType=VARCHAR}</if>
		<if test="state != null and state > 0">
			and gp.state = #{state,jdbcType=INTEGER}
		</if>
		GROUP BY gp.id
		) T where 1=1
		<if test="spaceCommonArea!= null and spaceCommonArea!=''">
		  and T.space_area_value &lt;= #{spaceCommonArea,jdbcType=INTEGER} or T.space_area_value is null
		</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>

	<select id="getGroupCountByProduct" resultType="int" parameterType="com.nork.product.model.search.GroupProductSearch">
<!-- 		SELECT COUNT(*) FROM ( -->
<!-- 		SELECT bp.id FROM ( -->
<!-- 		SELECT * FROM group_product_details WHERE is_main = 1)gpd -->
<!-- 		LEFT JOIN base_product bp ON bp.id = gpd.product_id -->
<!-- 		LEFT JOIN group_product gp ON gp.id = gpd.group_id -->
<!-- 		WHERE bp.id IS NOT NULL  -->
		select COUNT(T.id) from (
		select gp.id,
		gp.space_area_value,
		gpd.product_id,
		gp.brand_id,
		bp.product_type_value,
		bp.product_small_type_value
		from group_product as gp
		LEFT JOIN group_product_details as gpd on(gp.id=gpd.group_id)
		LEFT JOIN base_product as bp on(gpd.product_id = bp.id)
		<!-- 删除旧属性过滤代码,后面添加新属性过滤代码 -->
		<!-- <if test="attributeConditionList !=  null and  attributeConditionList.size > 0 ">
			RIGHT JOIN (
				SELECT id AS product_id FROM (
				<foreach collection="attributeConditionList" index="index" item="item" open="" separator="UNION ALL" close="">
					select pa.product_id AS id from product_attribute pa
					LEFT JOIN product_props pp ON pp.id = pa.attribute_value_id
					WHERE 1=1
					and ${item}
				</foreach>
				) products group by products.id having count(products.id) &gt;= #{attributeConditionSize,jdbcType=INTEGER}
			) t4 ON (t4.product_id = bp.id)
		</if> -->
		where 1=1
		
		<if test="structureState == 2">
			and gpd.is_main = 1
			and gp.design_templet_id = 0
		</if>
		<if test="structureState == 1">
			and gp.design_templet_id = #{designTempletId,jdbcType=INTEGER}
			and gp.group_flag IS NOT NULL
			and gp.group_flag !=''
		</if>
		
		<!-- groupType -->
		<if test="groupType != null">
			and gp.group_type = #{groupType}
		</if>
		<!-- 组合类型过滤 -->
		<if test="compositeType != null">
			and gp.composite_type = #{compositeType,jdbcType=INTEGER}
		</if>

		<if test="productTypeValue != null and smallTypeValue != null ">
			and  bp.product_type_value =  #{productTypeValue,jdbcType=VARCHAR}
<!-- 			and  bp.product_small_type_value =  #{smallTypeValue,jdbcType=VARCHAR} -->
		</if>
		<if test="brandIdList != null ">
			and  gp.brand_id in
			<foreach collection="brandIdList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="houseTypeList !=  null and  houseTypeList.size > 0  ">
				and (
				<foreach collection="houseTypeList" index="index" item="item">
					<choose>
						<when test="index== 0">
							CONCAT(',', bp.house_type_values, ',') like CONCAT('%,',#{item,jdbcType=VARCHAR},',%')
						</when>
						<otherwise>
							or CONCAT(',', bp.house_type_values, ',') like CONCAT('%,',#{item,jdbcType=VARCHAR},',%')
						</otherwise>
					</choose>
				</foreach>
				)
			</if>
		<if test="states != null and states.size > 0">
			and gp.state IN
			<foreach collection="states" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="structureId!= null">  and gp.structure_id = #{structureId,jdbcType=INTEGER} </if>
		<if test="groupFlag!= null and groupFlag!= '' ">  and group_flag = #{groupFlag,jdbcType=VARCHAR}</if>
		<if test="state != null and state > 0">
			and gp.state = #{state,jdbcType=INTEGER}
		</if>
		<!-- 添加新属性过滤代码 -->
		<if test="productFilterPropList != null and productFilterPropList.size > 0">
			<foreach collection="productFilterPropList" item="productFilterPropListItem">
				and (
				select count(pa.id) from product_attribute pa 
				left join product_props ppp on ppp.id = pa.attribute_id
				left join product_props ppc on ppc.id = pa.attribute_value_id
				where pa.product_id = bp.id
				and ppp.filter_order = "filter"
				and ppp.code = #{productFilterPropListItem.key}
				and ppc.prop_value = #{productFilterPropListItem.value}) >= 1
			</foreach>
		</if>
		) T where 1=1
		<if test="spaceCommonArea!= null and spaceCommonArea!= ''"  >
			and (T.space_area_value &lt;= #{spaceCommonArea,jdbcType=INTEGER} or T.space_area_value is null)
		</if>
		<if test="categoryCode != null and categoryCode != ''" >
			AND T.product_id IN (SELECT product_id FROM product_category_rel
			WHERE category_id IN (SELECT pc.id FROM pro_category pc WHERE
			pc.is_deleted = 0
			<if test="firstStageCode != null and firstStageCode != ''">
				and pc.first_stage_code = #{firstStageCode,jdbcType=VARCHAR}
			</if>
			<if test="secondStageCode != null and secondStageCode != ''">
				and pc.second_stage_code = #{secondStageCode,jdbcType=VARCHAR}
			</if>
			<if test="thirdStageCode != null and thirdStageCode != ''">
				and pc.third_stage_code = #{thirdStageCode,jdbcType=VARCHAR}
			</if>
			<if test="fourthStageCode != null and fourthStageCode != ''">
				and pc.fourth_stage_code = #{fourthStageCode,jdbcType=VARCHAR}
			</if>
			<if test="fifthStageCode != null and fifthStageCode != ''">
				and pc.fifth_stage_code = #{fifthStageCode,jdbcType=VARCHAR}
			</if>
			))
		</if>
		
		<!-- 授权码逻辑(品牌,大类,小类,产品idList) -->
		<if test="baseProductList !=  null and  baseProductList.size > 0  ">
			and
			<foreach collection="baseProductList" index="index" item="item" open="(" separator="or" close=")">
				<choose>
					<when test="item.productIdList!=null and item.productIdList.size>0">
						(T.product_id in
						<foreach collection="item.productIdList" index="indexProductId"
							item="itemProductId" open="(" separator="," close=")">
							#{itemProductId}
						</foreach>
						)
					</when>
					<otherwise>
						<!-- 品牌&&大小类 -->
						<choose>
							<when test=						
							"
							(item.brandId == null or item.brandId == 0)
							and (item.productTypeValue != null or item.productTypeValue != '' )
							and (item.productSmallTypeValue != null or item.productSmallTypeValue != '') 
							">
							(1 != 1)
							</when>
							<otherwise>
								(<!-- 1=1 -->
									<if test="item.brandId != null and item.brandId != 0 ">
										<!-- and -->
										T.brand_id=#{item.brandId}
									</if>
									<if test="item.productTypeValue != null and item.productTypeValue != '' ">
										and T.product_type_value=#{item.productTypeValue}
									</if>
									<if test="item.productSmallTypeValue != null and item.productSmallTypeValue != '' ">
										and T.product_small_type_value=#{item.productSmallTypeValue}
									</if>
								)
							</otherwise>
						</choose>
						<!-- 品牌||大小类 -->
						
						<!-- 20170425添加逻辑by huangsongbo ->start -->
						<!-- 比如授权码关联的东鹏公司是做墙面瓷砖的,则点击墙面搜索,瓷砖小类只显示东鹏的瓷砖+无品牌瓷砖,其他小类则显示全部 -->
						<if test="item.smallTypeValueListForShowAll != null and item.smallTypeValueListForShowAll.size > 0">
							or T.product_small_type_value not in 
							<foreach collection="item.smallTypeValueListForShowAll" item="item2" close=")" open="(" separator=",">
								${item2}
							</foreach>
						</if> 
						<if test="isShowWu == true">
							<if test="brandIdWuPinPai != null">
								or T.brand_id = #{brandIdWuPinPai}
							</if>
						</if>
						<!-- 20170425添加逻辑by huangsongbo ->end -->
						
					</otherwise>
				</choose>
			</foreach>
		</if>
		<!-- 授权码过滤逻辑(品牌,大类,小类,产品idList)->end -->
		
<!-- 		GROUP BY gp.id) t -->
	</select>
     <!-- end-->

     <!-- 根据品牌查询组合（组合中包括关联产品）-->
     	<select id="queryBrandGroupList" resultMap="AllResultMapTwo"
			parameterType="com.nork.product.model.search.BaseBrandSearch">
	select  *,bb.brand_name as 'brandName',gp.group_name as 'groupName', gp.group_code as 'groupCode' ,gp.pic_id  as 'groupPicId' from group_product_details  as gpd
				LEFT JOIN base_product as bp ON (gpd.product_id = bp.id)
				LEFT JOIN group_product AS gp  ON (gpd.group_id = gp.id)
				Left JOIN base_brand as bb ON (bp.brand_id = bb.id)
				where 1=1 and  gpd.is_main = 1  and gp.design_templet_id = 0
				
				<!-- 根据用户类型查询不同状态的数据(内部用户：测试，上架，发布    外部：发布) add by yanghz-->
			<if test="userType !=  null">
			   <if test="userType == 1 and versionType !=null and versionType!='' and versionType == 2 ">
					and  (gp.state = 1 or  gp.state = 2 or gp.state = 3)
			 	</if>
				<if test="userType ==null or userType != 1 or versionType == null or versionType !=2 ">
					and  gp.state = 3
				</if>
			</if>


		 		<if test="sch_BrandName_ !=  null and sch_BrandName_ !=  ''   ">
					 and bb.brand_name  like CONCAT(CONCAT('%',#{sch_BrandName_,jdbcType=VARCHAR}),'%')
				 </if>
<!-- 				 <if test="structureId!= null">  and gp.structure_id = #{structureId,jdbcType=INTEGER} </if> -->
 					and  gp.structure_id is null
<!-- 				 <if test="groupFlag!= null and groupFlag!= '' ">  and group_flag = #{groupFlag,jdbcType=VARCHAR}</if> -->
 				 <if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
		</select>

     	<select id="queryBrandGroupCount" resultType="int"
			parameterType="com.nork.product.model.search.BaseBrandSearch">
				select COUNT(gpd.id) from group_product_details  as gpd
				LEFT JOIN base_product as bp ON (gpd.product_id = bp.id)
				LEFT JOIN group_product AS gp  ON (gpd.group_id = gp.id)
				Left JOIN base_brand as bb ON (bp.brand_id = bb.id)
				
				where 1=1 and  gpd.is_main = 1  and gp.design_templet_id = 0
				<!-- 根据用户类型查询不同状态的数据(内部用户：测试，上架，发布    外部：发布) add by yanghz-->
			<if test="userType !=  null">
			  	<if test="userType == 1 and versionType !=null and versionType!='' and versionType == 2 ">
					and  (gp.state = 1 or  gp.state = 2 or gp.state = 3)
			 	</if>
				<if test="userType ==null or userType != 1 or versionType == null or versionType !=2 ">
					and  gp.state = 3
				</if>
			</if>
				
		 		<if test="sch_BrandName_ !=  null and sch_BrandName_ !=  ''   ">
					 and bb.brand_name  like CONCAT(CONCAT('%',#{sch_BrandName_,jdbcType=VARCHAR}),'%')
				 </if>
					and  gp.structure_id is null   
<!--  				<if test="structureId!= null">  and gp.structure_id = #{structureId,jdbcType=INTEGER} </if> -->
<!--  				<if test="groupFlag!= null and groupFlag!= '' ">  and group_flag = #{groupFlag,jdbcType=VARCHAR}</if> -->

		</select>
		
		<!-- getPriceFromDetails -->
		<select id="getPriceFromDetails" parameterType="java.lang.Integer" resultType="double">
			<!-- select sum(bp.sale_price) from base_product bp where bp.id in (select product_id from group_product_details gpd where gpd.group_id = #{groupId,jdbcType=INTEGER}) -->
			select sum(bp.sale_price) from group_product_details gpd,base_product bp where group_id = #{groupId,jdbcType=INTEGER} and gpd.product_id=bp.id
		</select>

		<!-- chenqiang 获取组合中产品售价/建议售价之和 -->
		<select id="getGroupProductSalePrice" resultType="com.nork.product.model.ProductPlatform">
			SELECT SUM(sale_price) AS salePriceSum ,sum(advice_price) AS advicePriceSum
			FROM platform2b_product_rel ppr,(SELECT id FROM base_platform WHERE platform_code = #{platformType}) bp,(SELECT product_id FROM group_product_details WHERE group_id = #{groupId}) gpd
			WHERE ppr.platform_id = bp.id
			  AND ppr.product_id = gpd.product_id
		</select>

		
		
<!-- 	<select id="getGroupCountByStructureId" resultType="int" parameterType="com.nork.product.model.search.GroupProductSearch"> -->
<!-- 		select count(*) from  structure_product  as sp  -->
<!-- 		LEFT JOIN  group_product as gp  on (gp.group_flag=sp.group_flag) -->
<!-- 		where  sp.id = #{structureId,jdbcType=INTEGER} -->
<!-- 		and  gp.design_templet_id = #{designTempletId,jdbcType=INTEGER} -->
<!-- 		and  gp.state = 1 -->
<!-- 	</select> -->
<!-- 	<select id="getGroupListByStructureId" resultMap="AllResultMap" parameterType="com.nork.product.model.search.GroupProductSearch"> -->
<!-- 		select gp.* from  structure_product  as sp  -->
<!-- 		LEFT JOIN  group_product as gp  on (gp.group_flag=sp.group_flag) -->
<!-- 		where  sp.id = #{structureId,jdbcType=INTEGER} -->
<!-- 		and  gp.design_templet_id = #{designTempletId,jdbcType=INTEGER} -->
<!-- 		and  gp.state = 1 -->
<!-- 	</select> -->

	<select id="getGroupCountByStructureId" resultType="int" parameterType="int">
		select count(*) from  structure_product  as sp
		LEFT JOIN  group_product as gp  on (gp.group_flag=sp.group_flag)
		where  sp.id = #{id,jdbcType=INTEGER}
		and  gp.state = 1
	</select>
	
	<select id="getGroupListByStructureId" resultMap="AllResultMap" parameterType="int">
		select gp.* from  structure_product  as sp 
		LEFT JOIN  group_product as gp  on (gp.group_flag=sp.group_flag)
		where  sp.id = #{id,jdbcType=INTEGER}
		and  gp.state = 1
	</select>
	
	<select id="getStructureByGroupId" resultMap="AllResultMap" parameterType="int">
		select gp.location,sp.config_file_id,sp.structure_code,sp.structure_name,sp.id as 'structure_id' from  structure_product as sp
		LEFT JOIN   group_product   as gp   on (gp.structure_id=sp.id)   
		where gp.id=  #{id,jdbcType=INTEGER}
	</select>
	
	<!-- getIsMainProductV2 -->
	<select id="getIsMainProductV2" resultType="int" parameterType="int">
		select id from group_product_details where is_main = 1 and product_id = #{productId,jdbcType=INTEGER} limit 0,1;
	</select>
	
	<!-- getGroupCountByStructureIdAndStatus -->
	<select id="getGroupCountByStructureIdAndStatus" resultType="int">
		select  count(gp.id) from group_product gp
		where
		gp.structure_id = #{structureId,jdbcType=INTEGER}
		<!-- 根据用户类型查询不同状态的数据(内部用户：测试，上架，发布    外部：发布) add by yanghz -->
		<if test="userType !=  null">
		  	<if test="userType == 1 and versionType !=null and versionType!='' and versionType == 2 ">
				and  (gp.state = 1 or  gp.state = 2 or gp.state = 3)
		 	</if>
			<if test="userType ==null or userType != 1 or versionType == null or versionType !=2 ">
				and  gp.state = 3
			</if>
		</if>
		<if test="brandIdList != null ">
			and  brand_id in
			<foreach collection="brandIdList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="groupType != null">
			and gp.group_type = #{groupType}
		</if>
	</select>
	
	<sql id="All_Column_ListV2">
		gp.id,gp.brand_id,gp.style_value,gp.group_flag,gp.structure_id,gp.space_function_value,gp.space_area_value,gp.group_code,gp.group_name,gp.type,gp.state,gp.sorting,gp.pic_id,gp.code,gp.location,gp.sys_code,gp.creator,gp.gmt_create,gp.modifier,gp.gmt_modified,gp.is_deleted,gp.att1,gp.att2,gp.numa1,gp.numa2,gp.remark,gp.group_price,gp.design_templet_id,gp.product_style_id_info,gp.product_type
	</sql>
	
	<!-- getMoreInfoById:通过id查找组合(关联查找更多信息,比如:品牌名,风格名) -->
	<select id="getMoreInfoById" resultMap="AllResultMap">
		select
		<include refid="All_Column_ListV2" />,
		bb.brand_name as brand_name,sd.name as style_name,rp.pic_path
		from group_product gp
		left join base_brand bb on gp.brand_id = bb.id
		left join sys_dictionary sd on sd.type = "productStyle" and gp.style_value = sd.value 
		left join res_pic rp on gp.pic_id = rp.id
		where gp.id = #{groupId,jdbcType=INTEGER}
	</select>
	
	 <!-- updateStatus -->
     <update id="updateStatus">
		update group_product set state = #{newStatus,jdbcType=INTEGER}
		where state = #{oldStatus,jdbcType=INTEGER}
	</update>
	
	
	<select id="productSelectGroupReplace" resultMap="AllResultMap">
				 	SELECT
			gp.id,
			gp.brand_id,
			gp.style_value,
			gp.group_flag,
			gp.structure_id,
			gp.space_function_value,
			gp.space_area_value,
			gp.group_code,
			gp.group_name,
			gp.type,
			gp.state,
			gp.sorting,
			gp.pic_id,
			gp. CODE,
			gp.location,
			gp.sys_code,
			gp.creator,
			gp.gmt_create,
			gp.modifier,
			gp.gmt_modified,
			gp.is_deleted,
			gp.att1,
			gp.att2,
			gp.numa1,
			gp.numa2,
			gp.remark,
			gp.group_price,
			gp.design_templet_id,
			gp.product_style_id_info,
			gp.product_type,
			sp.structure_code,
			sp.structure_name,
			sp.id AS 'structure_id'
		FROM
			group_product AS gp
		LEFT JOIN structure_product AS sp ON (gp.structure_id = sp.id)
		LEFT JOIN group_product_details AS spd ON (gp.id = spd.group_id)
		WHERE
			1 = 1
		AND gp.is_deleted = 0
		<if test="userType == null or userType !=1 ">
			AND gp.state = 3
		</if>
		 <if test="userType != null and userType==1 ">
		 </if>
		AND spd.is_deleted = 0
		AND spd.product_id = #{productId,jdbcType=INTEGER}
		AND sp.group_flag =  #{groupFlag,jdbcType=VARCHAR}
		AND spd.product_index = #{productIndex,jdbcType=INTEGER}
	</select>
	
	<!-- getMainProductIdByGroupId -->
	<select id="getMainProductIdByGroupId" resultType="java.lang.Integer">
		select product_id from group_product_details where group_id = #{groupId} and is_main = 1;
	</select>


	<!--建材家居组合搜索-->
	<select id="findBuildingHomeGroupList" resultMap="AllResultMapTwo"
			parameterType="com.nork.product.model.search.BaseBrandSearch">
		select  gp.id as group_id,bb.brand_name as 'brandName',gp.group_name as 'groupName',
		gp.group_code as 'groupCode' ,gp.pic_id  as 'groupPicId',rp.pic_path,
		CASE WHEN t.id IS NOT NULL THEN 1 ELSE 0 END collectState
		from group_product  as gp
		Left JOIN base_brand as bb ON gp.brand_id = bb.id AND bb.`is_deleted` = 0
		LEFT JOIN base_company bc ON bc.id = bb.`company_id`
		LEFT JOIN res_pic rp ON rp.id = gp.`pic_id` AND rp.is_deleted = 0
		LEFT JOIN
		(
			select gpc.id,gpc.group_id from group_product_collect gpc
			where gpc.user_id = #{userId,jdbcType=INTEGER} AND gpc.`is_deleted` = 0
		) t ON t.`group_id` = gp.`id`

		where  gp.design_templet_id = 0
		<!-- 根据用户类型查询不同状态的数据(内部用户：测试，上架，发布    外部：发布) add by xiaoxc-->
		<choose>
			<when test="versionType == 1 or userType != 1 ">
				and  gp.state = 3
			</when>
			<otherwise>
				and  (gp.state = 1 or  gp.state = 2 or gp.state = 3)
			</otherwise>
		</choose>
		<if test="brandIds != null and brandIds.size > 0">
			and gp.brand_id in
			<foreach collection="brandIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="sch_BrandName_ !=  null and sch_BrandName_ !=  ''   ">
			and bb.brand_name  like CONCAT(CONCAT('%',#{sch_BrandName_,jdbcType=VARCHAR}),'%')
		</if>
		<!--<if test="brandIndustryModelList != null and  brandIndustryModelList.size > 0 ">
			AND
			<foreach collection="brandIndustryModelList" index="index" item="item" open="(" separator="and" close=")">
				(
				<if test="item.industryValue != null and item.industryValue > 0 ">
					<choose>
						<when test="item.smallTypeValue != null and item.smallTypeValue > 0">
							(bc.industry = #{item.industryValue} AND bc.small_type != #{item.smallTypeValue})
							OR bc.industry != #{item.industryValue}
						</when>
						<otherwise>
							bc.industry != #{item.industryValue}
						</otherwise>
					</choose>
				</if>
				<if test="item.brandId != null and item.brandId > 0">
					OR bb.id = #{item.brandId}
				</if>
				)
			</foreach>
		</if>-->
		and  gp.structure_id is null
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>

	<select id="findBuildingHomeGroupCount" resultType="int"
			parameterType="com.nork.product.model.search.BaseBrandSearch">
		select COUNT(gp.id) from group_product  as gp
		Left JOIN base_brand as bb ON gp.brand_id = bb.id AND bb.`is_deleted` = 0
		LEFT JOIN base_company bc ON bc.id = bb.`company_id`
		where  gp.design_templet_id = 0
		<!-- 根据用户类型查询不同状态的数据(内部用户：测试，上架，发布    外部：发布) add by xiaoxc-->
		<choose>
			<when test="versionType == 1 or userType != 1 ">
				and  gp.state = 3
			</when>
			<otherwise>
				and  (gp.state = 1 or  gp.state = 2 or gp.state = 3)
			</otherwise>
		</choose>
		<if test="brandIds != null and brandIds.size > 0">
			and gp.brand_id in
			<foreach collection="brandIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="sch_BrandName_ !=  null and sch_BrandName_ !=  ''   ">
			and bb.brand_name  like CONCAT(CONCAT('%',#{sch_BrandName_,jdbcType=VARCHAR}),'%')
		</if>
		<!--<if test="brandIndustryModelList != null and  brandIndustryModelList.size > 0 ">
			AND
			<foreach collection="brandIndustryModelList" index="index" item="item" open="(" separator="and" close=")">
				(
				<if test="item.industryValue != null and item.industryValue > 0 ">
					<choose>
						<when test="item.smallTypeValue != null and item.smallTypeValue > 0">
							(bc.industry = #{item.industryValue} AND bc.small_type != #{item.smallTypeValue})
							OR bc.industry != #{item.industryValue}
						</when>
						<otherwise>
							bc.industry != #{item.industryValue}
						</otherwise>
					</choose>
				</if>
				<if test="item.brandId != null and item.brandId > 0">
					OR bb.id = #{item.brandId}
				</if>
				)
			</foreach>
		</if>-->
		and  gp.structure_id is null
	</select>

	<select id="getGroupConfigByGroupId" resultType="java.lang.String">
		select rf.file_path from  group_product as gp
		LEFT JOIN   res_file rf   on (rf.id = gp.location)
		where gp.id=  #{groupId,jdbcType=INTEGER}
	</select>

	<select id="getCountByGroupIdList" resultType="int">
		select
			count(id) from  group_product
		where 1=1
		<choose>
			<when test="groupIdList != null and groupIdList.size() > 0">
				and id IN
				<foreach item="item" collection="groupIdList" separator="," open="(" close=")" index="">
					#{item}
				</foreach>
			</when>
			<otherwise>
				and id = -1
			</otherwise>
		</choose>

	</select>
	
	<!-- 获得组合最大id -->
	<select id="getMaxGroupProductId" resultType="int">
		SELECT MAX(id) FROM group_product 
	</select>
</mapper>
