package com.sandu.service.springFestivalActivity.aspect;

import com.sandu.api.base.common.exception.BizException;
import com.sandu.api.springFestivalActivity.input.NonNullPropoties;
import lombok.extern.slf4j.Slf4j;
import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

import java.util.Arrays;

@Slf4j
@Aspect
@Component
public class SpringActivityAspect {
    private static final String CLASS_LOG_PREFIX = "[参数校验服务]";

    @Pointcut("@annotation(com.sandu.service.springFestivalActivity.aspect.CheckMethodArgs)")
    public void checkArgs(){}

    @Before("checkArgs()")
    public void interceptor(JoinPoint point){
        Object[] args = point.getArgs();
        if (args != null && args.length > 0) {
            for (int i = 0; i < args.length; i++) {
                Object arg = args[i];
                if (arg == null) {
                    log.warn(CLASS_LOG_PREFIX + point.getSignature().getDeclaringTypeName() + "." + point.getSignature().getName() + ":参数异常!\n" + Arrays.toString(point.getArgs()));
                    throw new BizException("参数异常");
                } else {
                    if (arg instanceof NonNullPropoties) {
                        if (!((NonNullPropoties) arg).nonNull()) {
                            log.warn(CLASS_LOG_PREFIX + point.getSignature().getDeclaringTypeName() + "." + point.getSignature().getName() + ":参数异常!\n" + Arrays.toString(point.getArgs()));
                            throw new BizException("参数异常");
                        }
                    }
                }
            }
        }
    }
}
