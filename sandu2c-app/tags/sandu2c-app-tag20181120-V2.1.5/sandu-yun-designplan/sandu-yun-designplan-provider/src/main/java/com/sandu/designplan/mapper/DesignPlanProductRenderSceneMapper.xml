<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sandu.designplan.dao.DesignPlanProductRenderSceneMapper">

	<sql id="All_Column_List">
		id,is_main_structure_product,is_group_replace_way,product_index,is_standard,center,region_mark,style_id,measure_code,
		describe_info,sys_code,split_textures_choose_info,plan_group_id,creator,gmt_create,modifier,gmt_modified,is_deleted,
		group_type,model_product_id,plan_id,is_dirty,product_id,init_product_id,location_file_id,product_sequence,material_pic_id,
		planProduct_id,display_status,remark,is_hide,pos_index_path,
		product_group_id,is_main_product,pos_name,bind_parent_productId,same_product_type_index,wall_orientation,wall_type
	</sql>

	<resultMap id="AllResultMap"
		type="com.sandu.designplan.model.DesignPlanProductRenderScene">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="sys_code" property="sysCode" jdbcType="VARCHAR" />
		<result column="split_textures_choose_info" property="splitTexturesChooseInfo"
			jdbcType="VARCHAR" />
		<result column="plan_group_id" property="planGroupId" jdbcType="VARCHAR" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result column="modifier" property="modifier" jdbcType="VARCHAR" />
		<result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
		<result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result column="group_type" property="groupType" jdbcType="INTEGER" />
		<result column="model_product_id" property="modelProductId"
			jdbcType="INTEGER" />
		<result column="plan_id" property="planId" jdbcType="INTEGER" />
		<result column="is_dirty" property="isDirty" jdbcType="INTEGER" />
		<result column="product_id" property="productId" jdbcType="INTEGER" />
		<result column="init_product_id" property="initProductId"
			jdbcType="INTEGER" />
		<result column="location_file_id" property="locationFileId"
			jdbcType="INTEGER" />
		<result column="product_sequence" property="productSequence"
			jdbcType="VARCHAR" />
		<result column="material_pic_id" property="materialPicId"
			jdbcType="VARCHAR" />
		<result column="planProduct_id" property="planProductId"
			jdbcType="INTEGER" />
		<result column="display_status" property="displayStatus"
			jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="is_hide" property="isHide" jdbcType="INTEGER" />
		<result column="pos_index_path" property="posIndexPath"
			jdbcType="VARCHAR" />
		<result column="product_group_id" property="productGroupId"
			jdbcType="INTEGER" />
		<result column="is_main_product" property="isMainProduct"
			jdbcType="INTEGER" />
		<result column="pos_name" property="posName" jdbcType="VARCHAR" />
		<result column="bind_parent_productId" property="bindParentProductId"
			jdbcType="VARCHAR" />
		<result column="same_product_type_index" property="sameProductTypeIndex"
			jdbcType="INTEGER" />
		<result column="is_standard" property="isStandard" jdbcType="INTEGER" />
		<result column="center" property="center" jdbcType="VARCHAR" />
		<result column="region_mark" property="regionMark" jdbcType="VARCHAR" />
		<result column="style_id" property="styleId" jdbcType="INTEGER" />
		<result column="measure_code" property="measureCode" jdbcType="VARCHAR" />
		<result column="describe_info" property="describeInfo"
			jdbcType="VARCHAR" />
		<result column="product_index" property="productIndex"
			jdbcType="INTEGER" />
		<result column="is_main_structure_product" property="isMainStructureProduct"
			jdbcType="INTEGER" />
		<result column="is_group_replace_way" property="isGroupReplaceWay"
			jdbcType="INTEGER" />
		<result column="wall_orientation" property="wallOrientation"
			jdbcType="VARCHAR" />
		<result column="wall_type" property="wallType" jdbcType="VARCHAR" />
	</resultMap>

	<!-- getListByPlanId -->
	<select id="getListByPlanId" resultMap="AllResultMap">
		select
		<include refid="All_Column_List"></include>
		from design_plan_product_render_scene where plan_id =
		#{planId} and is_deleted = 0
	</select>

	<!-- insert -->
	<insert id="insert"
		parameterType="com.sandu.designplan.model.DesignPlanProductRenderScene"
		useGeneratedKeys="true" keyProperty="id">
		insert into design_plan_product_render_scene
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sysCode!= null">sys_code,</if>
			<if test="splitTexturesChooseInfo!= null">split_textures_choose_info,</if>
			<if test="planGroupId!= null">plan_group_id,</if>
			<if test="creator!= null">creator,</if>
			<if test="gmtCreate!= null">gmt_create,</if>
			<if test="modifier!= null">modifier,</if>
			<if test="gmtModified!= null">gmt_modified,</if>
			<if test="isDeleted!= null">is_deleted,</if>
			<if test="groupType!= null">group_type,</if>
			<if test="modelProductId!= null">model_product_id,</if>
			<if test="planId!= null">plan_id,</if>
			<if test="isDirty!= null">is_dirty,</if>
			<if test="productId!= null">product_id,</if>
			<if test="initProductId!= null">init_product_id,</if>
			<if test="locationFileId!= null">location_file_id,</if>
			<if test="productSequence!= null">product_sequence,</if>
			<if test="materialPicId!= null">material_pic_id,</if>
			<if test="planProductId!= null">planProduct_id,</if>
			<if test="displayStatus!= null">display_status,</if>
			<if test="remark!= null">remark,</if>
			<if test="isHide!= null">is_hide,</if>
			<if test="posIndexPath!= null">pos_index_path,</if>
			<if test="productGroupId!= null">product_group_id,</if>
			<if test="isMainProduct!= null">is_main_product,</if>
			<if test="posName!= null">pos_name,</if>
			<if test="bindParentProductId!= null">bind_parent_productId,</if>
			<if test="sameProductTypeIndex!= null">same_product_type_index ,</if>
			<if test="isStandard!= null">is_standard,</if>
			<if test="center!= null and center!='' ">center,</if>
			<if test="regionMark!= null and regionMark!='' ">region_mark,</if>
			<if test="styleId!= null">style_id,</if>
			<if test="measureCode!= null and measureCode!='' ">measure_code,</if>
			<if test="describeInfo!= null and describeInfo!=''">describe_info,</if>
			<if test="productIndex!= null">product_index,</if>
			<if test="isMainStructureProduct!= null">is_main_structure_product,</if>
			<if test="wallType!= null">wall_type,</if>
			<if test="wallOrientation!= null">wall_orientation,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="sysCode!= null">#{sysCode,jdbcType=VARCHAR},</if>
			<if test="splitTexturesChooseInfo!= null">#{splitTexturesChooseInfo,jdbcType=VARCHAR},</if>
			<if test="planGroupId!= null">#{planGroupId,jdbcType=VARCHAR},</if>
			<if test="creator!= null">#{creator,jdbcType=VARCHAR},</if>
			<if test="gmtCreate!= null">#{gmtCreate,jdbcType=TIMESTAMP},</if>
			<if test="modifier!= null">#{modifier,jdbcType=VARCHAR},</if>
			<if test="gmtModified!= null">#{gmtModified,jdbcType=TIMESTAMP},</if>
			<if test="isDeleted!= null">#{isDeleted,jdbcType=INTEGER},</if>
			<if test="groupType!= null">#{groupType,jdbcType=INTEGER},</if>
			<if test="modelProductId!= null">#{modelProductId,jdbcType=INTEGER},</if>
			<if test="planId!= null">#{planId,jdbcType=INTEGER},</if>
			<if test="isDirty!= null">#{isDirty,jdbcType=INTEGER},</if>
			<if test="productId!= null">#{productId,jdbcType=INTEGER},</if>
			<if test="initProductId!= null">#{initProductId,jdbcType=INTEGER},</if>
			<if test="locationFileId!= null">#{locationFileId,jdbcType=INTEGER},</if>
			<if test="productSequence!= null">#{productSequence,jdbcType=VARCHAR},</if>
			<if test="materialPicId!= null">#{materialPicId,jdbcType=VARCHAR},</if>
			<if test="planProductId!= null">#{planProductId,jdbcType=INTEGER},</if>
			<if test="displayStatus!= null">#{displayStatus,jdbcType=INTEGER},</if>
			<if test="remark!= null">#{remark,jdbcType=VARCHAR},</if>
			<if test="isHide!= null">#{isHide,jdbcType=INTEGER},</if>
			<if test="posIndexPath!= null">#{posIndexPath,jdbcType=VARCHAR},</if>
			<if test="productGroupId!= null">#{productGroupId,jdbcType=INTEGER},</if>
			<if test="isMainProduct!= null">#{isMainProduct,jdbcType=INTEGER},</if>
			<if test="posName!= null">#{posName,jdbcType=VARCHAR},</if>
			<if test="bindParentProductId!= null">#{bindParentProductId,jdbcType=VARCHAR},</if>
			<if test="sameProductTypeIndex!= null">#{sameProductTypeIndex,jdbcType=INTEGER},</if>
			<if test="isStandard!= null">#{isStandard,jdbcType=INTEGER},</if>
			<if test="center!= null and center!='' ">#{center,jdbcType=VARCHAR},</if>
			<if test="regionMark!= null and regionMark!='' ">#{regionMark,jdbcType=VARCHAR},</if>
			<if test="styleId!= null">#{styleId,jdbcType=INTEGER},</if>
			<if test="measureCode!= null and measureCode!='' ">#{measureCode,jdbcType=VARCHAR},</if>
			<if test="describeInfo!= null and describeInfo!=''">#{describeInfo,jdbcType=VARCHAR},</if>
			<if test="productIndex!= null">#{productIndex,jdbcType=INTEGER},</if>
			<if test="isMainStructureProduct!= null">#{isMainStructureProduct,jdbcType=INTEGER},</if>
			<if test="isGroupReplaceWay!= null">#{isGroupReplaceWay,jdbcType=INTEGER},</if>
			<if test="wallOrientation!= null and wallOrientation!='' ">#{wallOrientation,jdbcType=VARCHAR},</if>
			<if test="wallType!= null and wallType!='' ">#{wallType,jdbcType=VARCHAR},</if>
		</trim>
	</insert>

	<!-- insertList -->
	<insert id="insertList" parameterType="java.util.List">
		<if
			test="designPlanProductRenderSceneList != null and designPlanProductRenderSceneList.size > 0">
			insert into design_plan_product_render_scene
			(
			sys_code,
			split_textures_choose_info,
			plan_group_id,
			creator,
			gmt_create,
			modifier,
			gmt_modified,
			is_deleted,
			group_type,
			model_product_id,
			plan_id,
			is_dirty,
			product_id,
			init_product_id,
			location_file_id,
			product_sequence,
			material_pic_id,
			planProduct_id,
			display_status,
			remark,
			is_hide,
			pos_index_path,
			product_group_id,
			is_main_product,
			pos_name,
			bind_parent_productId,
			same_product_type_index,
			is_standard,
			center,
			region_mark,
			style_id,
			measure_code,
			describe_info,
			product_index,
			is_main_structure_product,
			is_group_replace_way,
			wall_orientation,
			wall_type
			)
			values
			<foreach collection="designPlanProductRenderSceneList" item="item"
				index="index" separator=",">
				(
				#{item.sysCode,jdbcType=VARCHAR},
				#{item.splitTexturesChooseInfo,jdbcType=VARCHAR},
				#{item.planGroupId,jdbcType=VARCHAR},
				#{item.creator,jdbcType=VARCHAR},
				#{item.gmtCreate,jdbcType=TIMESTAMP},
				#{item.modifier,jdbcType=VARCHAR},
				#{item.gmtModified,jdbcType=TIMESTAMP},
				#{item.isDeleted,jdbcType=INTEGER},
				#{item.groupType,jdbcType=INTEGER},
				#{item.modelProductId,jdbcType=INTEGER},
				#{item.planId,jdbcType=INTEGER},
				#{item.isDirty,jdbcType=INTEGER},
				#{item.productId,jdbcType=INTEGER},
				#{item.initProductId,jdbcType=INTEGER},
				#{item.locationFileId,jdbcType=INTEGER},
				#{item.productSequence,jdbcType=VARCHAR},
				#{item.materialPicId,jdbcType=VARCHAR},
				#{item.planProductId,jdbcType=INTEGER},
				#{item.displayStatus,jdbcType=INTEGER},
				#{item.remark,jdbcType=VARCHAR},
				#{item.isHide,jdbcType=INTEGER},
				#{item.posIndexPath,jdbcType=VARCHAR},
				#{item.productGroupId,jdbcType=INTEGER},
				#{item.isMainProduct,jdbcType=INTEGER},
				#{item.posName,jdbcType=VARCHAR},
				#{item.bindParentProductId,jdbcType=VARCHAR},
				#{item.sameProductTypeIndex,jdbcType=INTEGER},
				#{item.isStandard,jdbcType=INTEGER},
				#{item.center,jdbcType=VARCHAR},
				#{item.regionMark,jdbcType=VARCHAR},
				#{item.styleId,jdbcType=INTEGER},
				#{item.measureCode,jdbcType=VARCHAR},
				#{item.describeInfo,jdbcType=VARCHAR},
				#{item.productIndex,jdbcType=INTEGER},
				#{item.isMainStructureProduct,jdbcType=INTEGER},
				#{item.isGroupReplaceWay,jdbcType=INTEGER},
				#{item.wallOrientation,jdbcType=VARCHAR},
				#{item.wallType,jdbcType=VARCHAR}
				)
			</foreach>
		</if>
	</insert>

	<!-- deleteByPlanId -->
	<delete id="deleteByPlanId">
		delete from design_plan_product_render_scene where plan_id = #{planId}
	</delete>

	<select id="getProductCount" resultType="int"
		parameterType="com.sandu.product.model.ProductCostDetail">
		SELECT COUNT(id) FROM design_plan_product_render_scene WHERE
		plan_id=#{designPlanId} and product_id = #{productId,jdbcType=INTEGER}
		AND is_deleted=0
	</select>




	<resultMap id="designPlanProductResultMap"
		type="com.sandu.designplan.model.DesignPlanProductResult">
		<id column="id" property="productId" jdbcType="INTEGER" />
		<result column="product_name" property="productName" jdbcType="VARCHAR" />
		<result column="pro_style_id" property="proStyleValue"
			jdbcType="VARCHAR" />
		<result column="product_type_value" property="productTypeValue"
			jdbcType="VARCHAR" />
		<result column="sale_price" property="salePrice" jdbcType="VARCHAR" />
		<result column="brand_name" property="brandName" jdbcType="VARCHAR" />
		<result column="pic_path" property="picPath" jdbcType="VARCHAR" />
		<result column="product_code" property="productCode" jdbcType="VARCHAR" />
		<result column="location" property="location" jdbcType="VARCHAR" />
		<result column="file_path" property="filePath" jdbcType="VARCHAR" />
		<result column="pos_name" property="posName" jdbcType="VARCHAR" />
		<result column="pos_index_path" property="posIndexPath"
			jdbcType="VARCHAR" />
		<result column="group_id" property="groupId" jdbcType="INTEGER" />
		<result column="planProductId" property="planProductId"
			jdbcType="INTEGER" />
		<result column="brand_id" property="brandId" jdbcType="INTEGER" />
		<result column="pic_id" property="picId" jdbcType="INTEGER" />
		<result column="sale_price_value" property="salePriceValue"
			jdbcType="INTEGER" />
		<result column="product_small_type_value" property="productSmallTypeValue"
			jdbcType="INTEGER" />
		<result column="plan_group_id" property="planGroupId" jdbcType="VARCHAR" />
	</resultMap>

	<!-- planProductCount -->
	<select id="planProductCount" resultType="int">
		SELECT count(bp.id) FROM base_product bp
		LEFT JOIN design_plan_product_render_scene dpp ON bp.id = dpp.product_id
		LEFT JOIN base_brand bb ON bp.brand_id = bb.id
		LEFT JOIN res_pic rp ON bp.pic_id = rp.id
		WHERE 1=1
		<if test="planId != null">
			AND dpp.plan_id = #{planId,jdbcType=INTEGER}
		</if>
		<if test="isDeleted != null">
			AND dpp.is_deleted = #{isDeleted,jdbcType=INTEGER}
		</if>
		<if test="groupType != null">
			AND dpp.group_type = #{groupType,jdbcType=INTEGER}
		</if>
	</select>

	<!-- planProductList -->
	<select id="planProductList" resultMap="designPlanProductResultMap">
		SELECT
		bp.pic_id,bp.id,bp.product_name,bp.sale_price,bp.pro_style_id,bp.product_code,
		bp.product_type_value,bb.id as
		'brand_id',bb.brand_name,rp.pic_path,bp.sale_price_value FROM
		design_plan_product_render_scene as dpp
		LEFT JOIN base_product bp ON dpp.product_id = bp.id
		LEFT JOIN base_brand bb ON bp.brand_id = bb.id
		LEFT JOIN res_pic rp ON bp.pic_id = rp.id
		WHERE 1=1
		and bp.id is not null
		<if test="isInternalUser != null and isInternalUser == 'yes'">
			AND (bp.putaway_state = 1 or bp.putaway_state = 2 or bp.putaway_state =
			3)
		</if>
		<if test="isInternalUser == null or isInternalUser == ''"><!-- 以前已经上架显示，现在是已发布的显示 -->
			and bp.putaway_state = 3
		</if>
		<if test="planId != null">
			AND dpp.plan_id = #{planId,jdbcType=INTEGER}
		</if>
		<if test="isDeleted != null">
			AND dpp.is_deleted = #{isDeleted,jdbcType=INTEGER}
		</if>
		<if test="groupType != null">
			AND dpp.group_type = #{groupType,jdbcType=INTEGER}
		</if>
		<if test="start !=-1 and limit !=-1">LIMIT #{start}, #{limit}</if>
	</select>

	<!-- 结算大类型清单 -->
	<resultMap id="costTypeListResult" type="com.sandu.design.model.ProductsCostType">
		<result column="costCodes" property="costCodes" jdbcType="VARCHAR" />
		<result column="totalPrice" property="totalPrice" jdbcType="DECIMAL" />
		<result column="costTypeValue" property="costTypeValue"
			jdbcType="VARCHAR" />
		<result column="costTypeCode" property="costTypeCode" jdbcType="VARCHAR" />
		<result column="costTypeName" property="costTypeName" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 结算汇总清单 -->
	<select id="costTypeListCount" resultType="int"
		parameterType="com.sandu.designplan.model.DesignPlanProductRenderScene">
		SELECT COUNT(*) FROM
		(SELECT GROUP_CONCAT(C.costTypeCode) costCodes,SUM(C.totalPrice) totalPrice
		,s2.value costTypeValue,s2.valuekey
		costTypeCode,s2.name costTypeName
		FROM
		(SELECT GROUP_CONCAT(bp.id) productIds,SUM(bp.sale_price) totalPrice,s3.value
		costTypeValue,s3.valuekey
		costTypeCode,s3.name costTypeName FROM design_plan_product_render_scene dp
		LEFT JOIN base_product bp ON bp.id = dp.product_id
		LEFT JOIN (SELECT bs.type,bs.valuekey,bs.value,bs.name,bs.ordering FROM
		sys_dictionary bs WHERE bs.type =
		'productType' ORDER BY bs.ordering) s1 ON bp.product_type_value = s1.value
		LEFT JOIN sys_dictionary s2 ON s2.value = bp.product_small_type_value AND
		s2.type = s1.valuekey
		LEFT JOIN (SELECT tal.type,tal.valuekey,tal.value,tal.name,tal.ordering
		FROM sys_dictionary tal WHERE tal.type =
		'total' ORDER BY tal.ordering) s3 ON s3.valuekey = s2.att2
		WHERE 1=1 AND dp.is_deleted = 0
		<if test="planId != null and planId != ''">
			AND dp.plan_id = #{planId,jdbcType=INTEGER}
		</if>
		AND s2.att3 != 'baimo'
		GROUP BY s2.att2
		ORDER BY s3.ordering,s2.ordering) C
		LEFT JOIN
		(SELECT bs.type, bs.valuekey, bs.value, bs.name, bs.ordering, bs.att1
		FROM sys_dictionary bs
		WHERE bs.type = 'total'
		ORDER BY bs.ordering) s1
		ON C.costTypeCode = s1.valuekey
		LEFT JOIN
		(SELECT sd.type, sd.valuekey, sd.value, sd.name, sd.ordering
		FROM sys_dictionary sd
		WHERE sd.type = 'totalType'
		ORDER BY sd.ordering) s2
		ON s1.att1 = s2.valuekey
		WHERE 1 = 1
		AND s1.att1 IS NOT NULL
		GROUP BY s1.att1) t
	</select>

	<select id="costTypeList" resultMap="costTypeListResult"
		parameterType="com.sandu.designplan.model.DesignPlanProductRenderScene">
		SELECT GROUP_CONCAT(C.costTypeCode) costCodes,SUM(C.totalPrice)
		totalPrice ,s2.value costTypeValue,s2.valuekey
		costTypeCode,s2.name costTypeName
		FROM
		(SELECT GROUP_CONCAT(bp.id) productIds,SUM(bp.sale_price) totalPrice,s3.value
		costTypeValue,s3.valuekey
		costTypeCode,s3.name costTypeName FROM design_plan_product_render_scene dp
		LEFT JOIN base_product bp ON bp.id = dp.product_id
		LEFT JOIN (SELECT bs.type,bs.valuekey,bs.value,bs.name,bs.ordering FROM
		sys_dictionary bs WHERE bs.type =
		'productType' ORDER BY bs.ordering) s1 ON bp.product_type_value = s1.value
		LEFT JOIN sys_dictionary s2 ON s2.value = bp.product_small_type_value AND
		s2.type = s1.valuekey
		LEFT JOIN (SELECT tal.type,tal.valuekey,tal.value,tal.name,tal.ordering
		FROM sys_dictionary tal WHERE tal.type =
		'total' ORDER BY tal.ordering) s3 ON s3.valuekey = s2.att2
		WHERE 1=1 AND dp.is_deleted = 0
		<if test="planId != null and planId != ''">
			AND dp.plan_id = #{planId,jdbcType=INTEGER}
		</if>
		AND s2.att3 != 'baimo'
		GROUP BY s2.att2
		ORDER BY s3.ordering,s2.ordering) C
		LEFT JOIN
		(SELECT bs.type, bs.valuekey, bs.value, bs.name, bs.ordering, bs.att1
		FROM sys_dictionary bs
		WHERE bs.type = 'total'
		ORDER BY bs.ordering) s1
		ON C.costTypeCode = s1.valuekey
		LEFT JOIN
		(SELECT sd.type, sd.valuekey, sd.value, sd.name, sd.ordering
		FROM sys_dictionary sd
		WHERE sd.type = 'totalType'
		ORDER BY sd.ordering) s2
		ON s1.att1 = s2.valuekey
		WHERE 1 = 1
		AND s1.att1 IS NOT NULL
		GROUP BY s1.att1
	</select>

	<!-- 结算清单 -->
	<resultMap id="costListResult" type="com.sandu.design.model.ProductsCost">
		<result column="productIds" property="productIds" jdbcType="VARCHAR" />
		<result column="totalPrice" property="totalPrice" jdbcType="DECIMAL" />
		<result column="costTypeValue" property="costTypeValue"
			jdbcType="VARCHAR" />
		<result column="costTypeCode" property="costTypeCode" jdbcType="VARCHAR" />
		<result column="costTypeName" property="costTypeName" jdbcType="VARCHAR" />
		<result column="productCount" property="productCount" jdbcType="INTEGER" />
	</resultMap>

	<!-- 结算汇总清单 -->
	<select id="costListCount" resultType="int"
		parameterType="com.sandu.design.model.DesignPlanProduct">
		select count(*) from(
		SELECT GROUP_CONCAT(bp.id),SUM(bp.sale_price) totalPrice,s3.value
		costTypeValue,s3.valuekey costTypeCode,s3.name
		costTypeName FROM design_plan_product dp
		LEFT JOIN base_product bp ON bp.id = dp.product_id
		LEFT JOIN (SELECT bs.type,bs.valuekey,bs.value,bs.name,bs.ordering FROM
		sys_dictionary bs WHERE bs.type =
		'productType' ORDER BY bs.ordering) s1 ON bp.product_type_value = s1.value
		LEFT JOIN sys_dictionary s2 ON s2.value = bp.product_small_type_value AND
		s2.type = s1.valuekey
		LEFT JOIN (SELECT tal.type,tal.valuekey,tal.value,tal.name,tal.ordering
		FROM sys_dictionary tal WHERE tal.type =
		'total' ORDER BY tal.ordering) s3 ON s3.valuekey = s2.att2
		WHERE 1=1 AND dp.is_deleted = 0
		<if test="planId != null and planId != ''">
			AND dp.plan_id = #{planId,jdbcType=INTEGER}
		</if>
		<if test="authorizedConfigList != null and authorizedConfigList.size > 0">
			AND (
			<foreach collection="authorizedConfigList" index="index"
				item="item">
				<if test="index > 0">or</if>
				(
				<if test="item.brandIds != null and item.brandIds != ''">
					FIND_IN_SET(bp.brand_id, #{item.brandIds,jdbcType=VARCHAR})
				</if>
				<if test="item.bigType != null and item.bigType != ''">
					AND FIND_IN_SET(bp.product_type_mark,
					#{item.bigType,jdbcType=VARCHAR})
				</if>
				<if test="item.smallType != null and item.smallType != ''">
					AND FIND_IN_SET(bp.product_small_type_mark,
					#{item.smallType,jdbcType=VARCHAR})
				</if>
				<if test="item.productIds != null and item.productIds != ''">
					AND FIND_IN_SET(bp.id, #{item.productIds,jdbcType=VARCHAR})
				</if>
				)
			</foreach>
			)
		</if>
		AND s2.att3 != 'baimo'
		GROUP BY s2.att2
		ORDER BY s3.ordering,s2.ordering
		) t
	</select>

	<select id="costList" resultMap="costListResult"
		parameterType="com.sandu.design.model.ProductsCostType">
		SELECT GROUP_CONCAT(bp.id) productIds,SUM(bp.sale_price) totalPrice,s3.value costTypeValue,s3.valuekey costTypeCode,s3.name costTypeName,COUNT(bp.id) productCount FROM design_plan_product_render_scene dp
		LEFT JOIN base_product bp ON bp.id = dp.product_id
		LEFT JOIN (SELECT bs.type,bs.valuekey,bs.value,bs.name,bs.ordering FROM sys_dictionary bs WHERE bs.type = 'productType' ORDER BY bs.ordering) s1 ON bp.product_type_value = s1.value
		LEFT JOIN sys_dictionary s2 ON s2.value = bp.product_small_type_value AND s2.type = s1.valuekey
		LEFT JOIN (SELECT tal.type,tal.valuekey,tal.value,tal.name,tal.ordering FROM sys_dictionary tal WHERE tal.type = 'total' ORDER BY tal.ordering) s3 ON s3.valuekey = s2.att2
		<if test="platformId != null and platformId != 0">
			LEFT JOIN platform2c_product_rel ppr ON ppr.product_id = bp.id and ppr.is_deleted = 0
		</if>
		WHERE 1=1  AND dp.is_deleted = 0
		<if test="platformId != null and platformId != 0">
			AND ppr.platform_id = #{platformId}
			AND ppr.putaway_state
			= 1
			AND ppr.allot_state = 1
		</if>
		<if test=" brandList !=null and brandList.size > 0">
			and bp.brand_id in
			<foreach collection="brandList" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="planId != null and planId != ''">
			AND dp.plan_id = #{planId,jdbcType=INTEGER}
		</if>
		<if test="costCodes != null and costCodes != ''">
			AND FIND_IN_SET(s3.valuekey, #{costCodes,jdbcType=VARCHAR})
		</if>
		AND s2.att3 != 'baimo'
		GROUP BY s2.att2
		ORDER BY s3.ordering,s2.ordering
	</select>

	<!-- 结算清单明细 -->
	<resultMap id="costDetailResult" type="com.sandu.product.model.ProductCostDetail">
		<id column="id" property="productId" jdbcType="VARCHAR" />
		<result column="totalCount" property="productCount" jdbcType="INTEGER" />
		<result column="product_name" property="productName" jdbcType="VARCHAR" />
		<result column="brand_name" property="brandName" jdbcType="VARCHAR" />
		<result column="unitPrice" property="unitPrice" jdbcType="DECIMAL" />
		<result column="totalPrice" property="totalPrice" jdbcType="DECIMAL" />
		<result column="productPicPath" property="productPicPath"
			jdbcType="VARCHAR" />
		<result column="productModelNumber" property="productModelNumber"
			jdbcType="VARCHAR" />
		<result column="productSpec" property="productSpec" jdbcType="VARCHAR" />
		<result column="productDesc" property="productDesc" jdbcType="VARCHAR" />
		<result column="productOriginalPicPath" property="productOriginalPicPath"
			jdbcType="VARCHAR" />
		<result column="productUnit" property="productUnit" jdbcType="VARCHAR" />
		<result column="houseType" property="houseType" jdbcType="INTEGER" />
		<result column="spaceCommonId" property="spaceCommonId"
			jdbcType="INTEGER" />
		<result column="posIndexPath" property="posIndexPath" jdbcType="VARCHAR" />
		<result column="isStandard" property="isStandard" jdbcType="INTEGER" />
		<result column="styleId" property="styleId" jdbcType="INTEGER" />
		<result column="smallTypeValue" property="smallTypeValue"
			jdbcType="VARCHAR" />
		<result column="productTypeValue" property="productTypeValue"
			jdbcType="VARCHAR" />
		<result column="planProductId" property="planProductId"
			jdbcType="INTEGER" />
		<result column="measureCode" property="measureCode" jdbcType="VARCHAR" />
		<result column="regionMark" property="regionMark" jdbcType="VARCHAR" />
		<result column="isMainProduct" property="isMainProduct"
			jdbcType="INTEGER" />
		<result column="categoryCode" property="categoryCode" jdbcType="VARCHAR" />
		<result column="costTypeCode" property="costTypeCode" jdbcType="VARCHAR" />
		<result column="smallCategoryCode" property="smallCategoryCode"
			jdbcType="VARCHAR" />
		<result column="productCode" property="productCode" jdbcType="VARCHAR" />
		<result column="sourcePlanGroupId" property="sourcePlanGroupId"
			jdbcType="VARCHAR" />
		<result column="sourceProductGroupId" property="sourceProductGroupId"
			jdbcType="INTEGER" />
		<result column="sourceGroupProductUniqueId" property="sourceGroupProductUniqueId"
			jdbcType="VARCHAR" />
		<result column="sourceGroupProductId" property="sourceGroupProductId"
			jdbcType="INTEGER" />
		<result column="sourceGroupProductCode" property="sourceGroupProductCode"
			jdbcType="INTEGER" />
		<result column="houseId" property="houseId" jdbcType="INTEGER" />
		<result column="is_replace_texture" property="isReplaceTexture"
			jdbcType="INTEGER" />
		<result column="design_plan_id" property="designPlanId"
			jdbcType="INTEGER" />
		<result column="isFavorite" property="isFavorite" jdbcType="INTEGER" />

		<result column="designTemplet_id" property="designTempletId" jdbcType="INTEGER"/>
		<result column="pro_category_id" property="proCategoryId" jdbcType="INTEGER"/>
		<result column="pro_category_long_code" property="proCategoryLongCode" jdbcType="VARCHAR"/>
		<result column="secrecy" property="secrecy" jdbcType="INTEGER"/>
		<result column="company_id" property="companyId" jdbcType="INTEGER"/>
	</resultMap>




	<!-- 结算清单明细 -->
	<select id="costDetail" resultMap="costDetailResult"
		parameterType="com.sandu.design.model.ProductsCost">
		SELECT
		dpr.id design_plan_id,
		bp.id,
		bp.product_name,
		bb.brand_name,
		bp.sale_price unitPrice,
		(bp.sale_price*COUNT(bp.id)) totalPrice
		,COUNT(bp.id) totalCount,
		rp.pic_path productPicPath,
		bp.product_model_number productModelNumber,
		bp.product_spec productSpec,
		bp.product_desc productDesc,
		rp1.pic_path productOriginalPicPath,
		sd. NAME productUnit,
		sc.space_function_id AS houseType,
		sc.id AS spaceCommonId,
		dp.pos_index_path AS posIndexPath,
		dp.is_standard AS isStandard,
		bp.style_id AS styleId,
		bp.product_small_type_value AS smallTypeValue,
		bp.product_type_value AS productTypeValue,
		dp.id AS planProductId,
		bp.measure_code AS measureCode,
		dp.region_mark AS regionMark,
		dp.is_main_product AS isMainProduct,
		bp.product_type_mark AS categoryCode,
		bp.product_small_type_mark AS smallCategoryCode,
		bp.product_code AS productCode,
		dp.plan_group_id AS sourcePlanGroupId,
		dp.product_group_id AS sourceProductGroupId,
		dp.group_product_uniqueId AS sourceGroupProductUniqueId,
		gp.id AS sourceGroupProductId,
		gp.group_code AS sourceGroupProductCode,
		dpr.house_id AS houseId
		,dp.is_replace_texture<!-- 是否做了材质替换(0:否;1:是) add by yangz 2018年1月17日23:26:55 -->
		,s2.att2 costTypeCode
		,count(upc.id) isFavorite
		
		,dpr.design_template_id as designTemplet_id	<!-- 关联样板房id -->
		,pc.id as pro_category_id					<!-- 产品分类id -->
		,pc.long_code as pro_category_long_code		<!-- 产品分类长编码 -->
		,bp.secrecy_flag as secrecy,
		bb.company_id as company_id
		FROM
		design_plan_product_render_scene dp
		LEFT JOIN base_product bp ON bp.id = dp.product_id AND
		bp.is_deleted = 0
		left join pro_category pc on bp.product_small_type_mark = pc.code
		LEFT JOIN (
		SELECT
		bs.type,
		bs.valuekey,
		bs.VALUE,
		bs. NAME,
		bs.ordering
		FROM
		sys_dictionary bs
		WHERE
		bs.type = 'productType'
		ORDER BY
		bs.ordering
		) s1 ON bp.product_type_value = s1.VALUE
		LEFT JOIN sys_dictionary s2 ON
		s2.VALUE = bp.product_small_type_value AND s2.type = s1.valuekey AND
		s2.is_deleted = 0
		LEFT JOIN res_pic rp ON bp.pic_id = rp.id AND
		rp.is_deleted = 0
		LEFT JOIN res_pic rp1 ON bp.pic_ids = rp1.id AND
		rp1.is_deleted = 0
		LEFT JOIN base_brand bb ON bb.id = bp.brand_id AND
		bb.is_deleted = 0
		LEFT JOIN sys_dictionary sd ON sd.VALUE=
		bp.sale_price_value
		AND sd.type = 'productUnitPrice' AND sd.is_deleted = 0
		LEFT JOIN
		group_product gp ON gp.id = dp.product_group_id AND gp.is_deleted = 0
		LEFT JOIN design_plan_render_scene dpr ON dpr.id = dp.plan_id AND
		dpr.is_deleted = 0
		LEFT JOIN space_common sc ON sc.id =
		dpr.space_common_id and sc.is_deleted = 0
		<if test="platformId != null and platformId != 0">
			LEFT JOIN platform2c_product_rel ppr ON ppr.product_id = bp.id
		</if>
		left join user_product_collect upc on bp.id =
		upc.product_id and upc.is_deleted = 0 and upc.user_id = #{userId}
		WHERE 1=1 AND dp.is_deleted = 0

		<!-- 非同行产品可见逻辑 start -->
		<if test="sysDictionaryBOList != null and sysDictionaryBOList.size > 0 and
			ownBrandIdList != null and ownBrandIdList.size > 0">
			and bp.id not in (
				select id from base_product where
				<foreach collection="sysDictionaryBOList" index="index" item="item"
						 open="(" separator="," close=")">
					product_type_value = #{item.bigTypeValue} and product_small_type_value = #{item.smallTypeValue}
				</foreach>
				and brand_id not in
				<foreach collection="ownBrandIdList" index="index" item="item"
						 open="(" separator="," close=")">
					#{item}
				</foreach>
			)
		</if>
		<!-- 非同行产品可见逻辑 end -->

		<if test=" brandList !=null and brandList.size > 0">
			and bp.brand_id in
			<foreach collection="brandList" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="platformId != null and platformId != 0">
			AND ppr.platform_id = #{platformId}
			AND ppr.putaway_state
			= 1
			AND ppr.allot_state = 1
		</if>
		<if test="planId != null and planId != ''">
			AND dp.plan_id = #{planId,jdbcType=INTEGER}
		</if>
		<if test=" costTypeCodeList !=null and costTypeCodeList.size > 0">
			AND s2.att2 in
			<foreach collection="costTypeCodeList" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		AND s2.att3 != 'baimo'
		GROUP BY bp.id
	</select>

	<!-- costTypeList -->
	<select id="costTypeListV2" resultMap="costTypeListResult"
		parameterType="com.sandu.design.model.DesignPlanProduct">
	SELECT GROUP_CONCAT(C.costTypeCode) costCodes,SUM(C.totalPrice) totalPrice ,s2.value costTypeValue,s2.valuekey costTypeCode,s2.name costTypeName
		FROM 
		(SELECT GROUP_CONCAT(bp.id) productIds,SUM(bp.sale_price) totalPrice,s3.value costTypeValue,s3.valuekey costTypeCode,s3.name costTypeName FROM design_plan_product_render_scene dp
		LEFT JOIN base_product bp ON bp.id = dp.product_id
		LEFT JOIN (SELECT bs.type,bs.valuekey,bs.value,bs.name,bs.ordering FROM sys_dictionary bs WHERE bs.type = 'productType' ORDER BY bs.ordering) s1 ON bp.product_type_value = s1.value
		LEFT JOIN sys_dictionary s2 ON s2.value = bp.product_small_type_value AND s2.type = s1.valuekey
		LEFT JOIN (SELECT tal.type,tal.valuekey,tal.value,tal.name,tal.ordering FROM sys_dictionary tal WHERE tal.type = 'total' ORDER BY tal.ordering) s3 ON s3.valuekey = s2.att2
		<if test="platformId != null and platformId != 0"> LEFT JOIN platform2c_product_rel ppr ON ppr.product_id = bp.id </if>
		WHERE 1=1 AND dp.is_deleted = 0
		<if test="platformId != null and platformId != 0">
			AND ppr.platform_id = #{platformId}
			AND ppr.putaway_state
			= 1
			AND ppr.allot_state = 1
		</if>
		<if test=" brandList !=null and brandList.size > 0">
			and bp.brand_id in
			<foreach collection="brandList" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="planId != null and planId != ''">
			AND dp.plan_id = #{planId,jdbcType=INTEGER}
		</if>
		AND s2.att3 != 'baimo'
		GROUP BY s2.att2
		ORDER BY
		s3.ordering,s2.ordering) C
		LEFT JOIN
		(SELECT bs.type, bs.valuekey, bs.value, bs.name, bs.ordering, bs.att1
		FROM sys_dictionary bs
		WHERE bs.type = 'total'
		ORDER BY bs.ordering) s1
		ON C.costTypeCode = s1.valuekey
		LEFT JOIN
		(SELECT sd.type, sd.valuekey, sd.value, sd.name, sd.ordering
		FROM sys_dictionary sd
		WHERE sd.type = 'totalType'
		ORDER BY sd.ordering) s2
		ON s1.att1 = s2.valuekey
		WHERE 1 = 1
		AND s1.att1 IS NOT NULL
		GROUP BY s1.att1
	</select>

</mapper>
