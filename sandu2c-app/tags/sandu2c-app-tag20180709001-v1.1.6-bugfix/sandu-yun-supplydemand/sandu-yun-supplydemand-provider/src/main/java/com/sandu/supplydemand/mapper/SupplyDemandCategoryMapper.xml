<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sandu.supplydemand.dao.SupplyDemandCategoryMapper">
    <resultMap id="BaseResultMap" type="com.sandu.supplydemand.model.SupplyDemandCategory">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="pid" property="pid" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="is_leaf" property="isLeaf" jdbcType="INTEGER"/>
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="ordering" property="ordering" jdbcType="INTEGER"/>
        <result column="pic_id" property="picId" jdbcType="INTEGER"/>
        <result column="sys_code" property="sysCode" jdbcType="VARCHAR"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="modifier" property="modifier" jdbcType="VARCHAR"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, pid, name, is_leaf, level, ordering, pic_id, sys_code, creator, gmt_create, modifier, 
    gmt_modified, is_deleted, remark
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.sandu.supplydemand.model.SupplyDemandCategoryExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from supply_demand_category
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from supply_demand_category
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from supply_demand_category
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.sandu.supplydemand.model.SupplyDemandCategoryExample">
        delete from supply_demand_category
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.sandu.supplydemand.model.SupplyDemandCategory">
    insert into supply_demand_category (id, pid, name, 
      is_leaf, level, ordering, 
      pic_id, sys_code, creator, 
      gmt_create, modifier, gmt_modified, 
      is_deleted, remark)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{isLeaf,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{ordering,jdbcType=INTEGER}, 
      #{picId,jdbcType=INTEGER}, #{sysCode,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{modifier,jdbcType=VARCHAR}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.sandu.supplydemand.model.SupplyDemandCategory">
        insert into supply_demand_category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="isLeaf != null">
                is_leaf,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="ordering != null">
                ordering,
            </if>
            <if test="picId != null">
                pic_id,
            </if>
            <if test="sysCode != null">
                sys_code,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="modifier != null">
                modifier,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="isLeaf != null">
                #{isLeaf,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="ordering != null">
                #{ordering,jdbcType=INTEGER},
            </if>
            <if test="picId != null">
                #{picId,jdbcType=INTEGER},
            </if>
            <if test="sysCode != null">
                #{sysCode,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifier != null">
                #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sandu.supplydemand.model.SupplyDemandCategoryExample"
            resultType="java.lang.Integer">
        select count(*) from supply_demand_category
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update supply_demand_category
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.pid != null">
                pid = #{record.pid,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.isLeaf != null">
                is_leaf = #{record.isLeaf,jdbcType=INTEGER},
            </if>
            <if test="record.level != null">
                level = #{record.level,jdbcType=INTEGER},
            </if>
            <if test="record.ordering != null">
                ordering = #{record.ordering,jdbcType=INTEGER},
            </if>
            <if test="record.picId != null">
                pic_id = #{record.picId,jdbcType=INTEGER},
            </if>
            <if test="record.sysCode != null">
                sys_code = #{record.sysCode,jdbcType=VARCHAR},
            </if>
            <if test="record.creator != null">
                creator = #{record.creator,jdbcType=VARCHAR},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifier != null">
                modifier = #{record.modifier,jdbcType=VARCHAR},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDeleted != null">
                is_deleted = #{record.isDeleted,jdbcType=INTEGER},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update supply_demand_category
        set id = #{record.id,jdbcType=INTEGER},
        pid = #{record.pid,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        is_leaf = #{record.isLeaf,jdbcType=INTEGER},
        level = #{record.level,jdbcType=INTEGER},
        ordering = #{record.ordering,jdbcType=INTEGER},
        pic_id = #{record.picId,jdbcType=INTEGER},
        sys_code = #{record.sysCode,jdbcType=VARCHAR},
        creator = #{record.creator,jdbcType=VARCHAR},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        modifier = #{record.modifier,jdbcType=VARCHAR},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sandu.supplydemand.model.SupplyDemandCategory">
        update supply_demand_category
        <set>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="isLeaf != null">
                is_leaf = #{isLeaf,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="ordering != null">
                ordering = #{ordering,jdbcType=INTEGER},
            </if>
            <if test="picId != null">
                pic_id = #{picId,jdbcType=INTEGER},
            </if>
            <if test="sysCode != null">
                sys_code = #{sysCode,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sandu.supplydemand.model.SupplyDemandCategory">
    update supply_demand_category
    set pid = #{pid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      is_leaf = #{isLeaf,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      ordering = #{ordering,jdbcType=INTEGER},
      pic_id = #{picId,jdbcType=INTEGER},
      sys_code = #{sysCode,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=VARCHAR},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectListBycategoryIdList" parameterType="list" resultMap="BaseResultMap">
        select * from supply_demand_category where is_deleted =0 AND id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectAllCategory" resultMap="AllCategoryResultMap" parameterType="com.sandu.supplydemand.model.SupplyDemandCategory">
    select sdc.*,sdp.pic_path from supply_demand_category sdc
    LEFT JOIN supply_demand_pic sdp ON sdp.id = sdc.pic_id
    where
    sdc.is_deleted = 0
        and sdc.tree_type = #{treeType,jdbcType=INTEGER}
        <if test="level != null">
          AND  sdc.level = #{level,jdbcType=INTEGER}
        </if>
        <if test="pid != null">
          AND  sdc.pid = #{pid,jdbcType=INTEGER}
        </if>
  </select>


    <resultMap id="AllCategoryResultMap" type="com.sandu.supplydemand.output.SupplyDemandCategoryVo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="pid" property="pid" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="pic_path" property="picPath" jdbcType="VARCHAR"/>
    </resultMap>


    <select id="selectCategoryName" resultMap="AllCategoryResultMap" parameterType="list">
        SELECT sdc.* from supply_demand_category sdc where sdc.id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getAllSupplyDemandCategoryByOneCategory" resultType="java.lang.String" parameterType="java.lang.Integer">
       SELECT
        CONCAT(pid, ',', id)
        FROM
            supply_demand_category
        WHERE
            id IN (
                SELECT
                    id
                FROM
                    supply_demand_category
                WHERE
                    pid = #{pid,jdbcType=INTEGER}
                    AND is_deleted = 0
		            AND tree_type = 1
            )
    </select>



</mapper>