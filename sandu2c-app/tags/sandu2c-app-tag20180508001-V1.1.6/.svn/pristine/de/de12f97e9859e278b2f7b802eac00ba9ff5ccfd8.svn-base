package com.sandu.goods.service.impl;


import com.sandu.goods.dao.BaseGoodsSPUMapper;
import com.sandu.goods.model.BO.GoodsDetailBO;
import com.sandu.goods.model.BO.GoodsInfoToOrderBO;
import com.sandu.goods.model.BaseGoodsSKU;
import com.sandu.goods.model.BaseGoodsSPU;
import com.sandu.goods.model.PO.GoodsListPO;
import com.sandu.goods.output.GoodsDetailVO;
import com.sandu.goods.output.GoodsVO;
import com.sandu.goods.output.SpuAttributeVO;
import com.sandu.goods.service.BaseGoodsSPUService;
import com.sandu.system.model.ResPic;
import com.sandu.system.service.ResPicService;
import lombok.extern.log4j.Log4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;


@Log4j
@Service("baseGoodsSPUService")
public class BaseGoodsSPUServiceImpl implements BaseGoodsSPUService
{
    @Autowired
    private BaseGoodsSPUMapper baseGoodsSPUMapper;
    @Autowired
    private ResPicService resPicService;

    @Override
    public BaseGoodsSPU selectByPrimaryKey(Integer id)
    {
        return baseGoodsSPUMapper.selectByPrimaryKey(id);
    }

    @Override
    public Integer getGoodsListCount(GoodsListPO goodsListPO)
    {
        goodsListPO.setStart(null);
        goodsListPO.setLimit(null);
        return baseGoodsSPUMapper.getGoodsSpuIdList(goodsListPO).size();
    }

    @Override
    public List<GoodsVO> getGoodsList(GoodsListPO goodsListPO)
    {
        List<Integer> ids = baseGoodsSPUMapper.getGoodsSpuIdList(goodsListPO);
        if (ids == null || ids.size() == 0)
        {
            return null;
        }

        List<GoodsVO> goodsVOList = baseGoodsSPUMapper.getGoodsSpuList(ids);
        return goodsVOList;
    }

    @Override
    public GoodsDetailVO getGoodsDetail(Integer id)
    {
        GoodsDetailVO goodsDetailVO = new GoodsDetailVO();

        GoodsDetailBO goodsDetailBO = baseGoodsSPUMapper.getGoodsDetail(id);
        List<BaseGoodsSKU> skus = goodsDetailBO.getSkus();

        List<Integer> ids = new ArrayList<>();
        BigDecimal minPrice = skus.get(0).getPrice();
        for (BaseGoodsSKU baseGoodsSKU : skus)
        {
            if (baseGoodsSKU.getPrice().compareTo(minPrice) < 0)
            {
                minPrice = baseGoodsSKU.getPrice();
            }
            ids.add(baseGoodsSKU.getMainPicId());
        }
        List<ResPic> pics = resPicService.getResPicByIds(ids);
        List<String> picPaths = new ArrayList<>();
        for (ResPic resPic : pics)
        {
            picPaths.add(resPic.getPicPath());
        }

        goodsDetailVO.setId(goodsDetailBO.getId());
        goodsDetailVO.setDescribe(goodsDetailBO.getProductDesc());
        goodsDetailVO.setGoodsName(goodsDetailBO.getSpuName());
        goodsDetailVO.setModelNumber(goodsDetailBO.getProductModelNumber());
        goodsDetailVO.setMainPics(picPaths);
        goodsDetailVO.setPrice(minPrice);

        return goodsDetailVO;
    }

    @Override
    public List<SpuAttributeVO> getSpuAttrList(Integer id)
    {
        List<SpuAttributeVO> spuAttrList = baseGoodsSPUMapper.getSpuAttrList(id);
        return null;
    }

    @Override
    public GoodsInfoToOrderBO getGoodsInfoToOrder(Integer productId)
    {
        return baseGoodsSPUMapper.getGoodsInfoToOrder(productId);
    }
}
