<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sandu.user.dao.UserPrivateMessageMapper">
    <resultMap id="BaseResultMap" type="com.sandu.user.model.UserPrivateMessage">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="friend_id" property="friendId" jdbcType="INTEGER"/>
        <result column="sender_id" property="senderId" jdbcType="INTEGER"/>
        <result column="receiver_id" property="receiverId" jdbcType="INTEGER"/>
        <result column="message_type" property="messageType" jdbcType="INTEGER"/>
        <result column="message_content" property="messageContent" jdbcType="VARCHAR"/>
        <result column="send_time" property="sendTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, friend_id, sender_id, receiver_id, message_type, message_content, send_time, 
    status, is_deleted
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_private_message
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_private_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.sandu.user.model.UserPrivateMessage">
    insert into user_private_message (id, user_id, friend_id, 
      sender_id, receiver_id, message_type, 
      message_content, send_time, status, 
      is_deleted)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{friendId,jdbcType=INTEGER}, 
      #{senderId,jdbcType=INTEGER}, #{receiverId,jdbcType=INTEGER}, #{messageType,jdbcType=INTEGER}, 
      #{messageContent,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{isDeleted,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.sandu.user.model.UserPrivateMessage" useGeneratedKeys="true" keyProperty="id">
        insert into user_private_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="friendId != null">
                friend_id,
            </if>
            <if test="senderId != null">
                sender_id,
            </if>
            <if test="receiverId != null">
                receiver_id,
            </if>
            <if test="messageType != null">
                message_type,
            </if>
            <if test="messageContent != null">
                message_content,
            </if>
            <if test="sendTime != null">
                send_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="friendId != null">
                #{friendId,jdbcType=INTEGER},
            </if>
            <if test="senderId != null">
                #{senderId,jdbcType=INTEGER},
            </if>
            <if test="receiverId != null">
                #{receiverId,jdbcType=INTEGER},
            </if>
            <if test="messageType != null">
                #{messageType,jdbcType=INTEGER},
            </if>
            <if test="messageContent != null">
                #{messageContent,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null">
                #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sandu.user.model.UserPrivateMessage">
        update user_private_message
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="friendId != null">
                friend_id = #{friendId,jdbcType=INTEGER},
            </if>
            <if test="senderId != null">
                sender_id = #{senderId,jdbcType=INTEGER},
            </if>
            <if test="receiverId != null">
                receiver_id = #{receiverId,jdbcType=INTEGER},
            </if>
            <if test="messageType != null">
                message_type = #{messageType,jdbcType=INTEGER},
            </if>
            <if test="messageContent != null">
                message_content = #{messageContent,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null">
                send_time = #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sandu.user.model.UserPrivateMessage">
    update user_private_message
    set user_id = #{userId,jdbcType=INTEGER},
      friend_id = #{friendId,jdbcType=INTEGER},
      sender_id = #{senderId,jdbcType=INTEGER},
      receiver_id = #{receiverId,jdbcType=INTEGER},
      message_type = #{messageType,jdbcType=INTEGER},
      message_content = #{messageContent,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <select id="selectUserPrivateMessageList" resultMap="PrivateMessageList"
            parameterType="com.sandu.user.model.input.UserPrivateMessageAdd">
        SELECT
        upm.id,
        count(upm.id) AS messageCount,
        upm.friend_id,
        upm.message_content,
        upm.user_id,
        upm.send_time,
        u.nick_name as friendName,
        r.pic_path as friendpicPath
        FROM
        user_private_message upm
        LEFT JOIN sys_user u ON u.id = upm.friend_id
        LEFT JOIN res_pic r ON u.pic_id = r.id
        WHERE
        upm.user_id = #{userId,jdbcType=INTEGER}
        AND upm.is_deleted = 0
        <if test="messageType != null">AND upm.message_type = #{messageType,jdbcType=INTEGER}</if>
        <if test="status == null">AND upm.`status` != 3</if>
        <if test="status != null">AND upm.status = #{status,jdbcType=TINYINT}</if>
        GROUP BY
        upm.friend_id
        ORDER BY upm.send_time DESC
        <if test="start != null and start != -1"> LIMIT #{start}, #{limit}</if>
    </select>


    <resultMap id="PrivateMessageList" type="com.sandu.user.model.view.UserPrivateMessageVo">
        <result column="id" property="userPrivateMessageId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="friend_id" property="friendId" jdbcType="INTEGER"/>
        <result column="sender_id" property="senderId" jdbcType="INTEGER"/>
        <result column="message_content" property="messageContent" jdbcType="VARCHAR"/>
        <result column="friendName" property="friendName" jdbcType="VARCHAR"/>
        <result column="friendpicPath" property="friendpicPath" jdbcType="VARCHAR"/>
        <result column="send_time" property="sendTime" jdbcType="TIMESTAMP"/>
        <result column="messageCount" property="messageCount" jdbcType="INTEGER"/>
        <result column="senderName" property="senderName" jdbcType="VARCHAR"/>
        <result column="senderpicPath" property="senderpicPath" jdbcType="VARCHAR"/>
    </resultMap>


    <select id="selectUserPrivateMessageInfoList" resultMap="PrivateMessageList"
            parameterType="com.sandu.user.model.input.UserPrivateMessageAdd">
        SELECT
        upm.id,
        upm.user_id,
        upm.friend_id,
        upm.sender_id,
        upm.message_content,
        upm.send_time,
        u1.nick_name as senderName,
        u2.nick_name as friendName,
        r1.pic_path  as senderpicPath,
        r2.pic_path  as friendpicPath
        FROM
        user_private_message upm
        LEFT JOIN sys_user u1 ON u1.id = upm.sender_id
        LEFT JOIN res_pic r1 ON u1.pic_id = r1.id
        LEFT JOIN sys_user u2 ON u2.id = upm.friend_id
        LEFT JOIN res_pic r2 ON u2.pic_id = r2.id
        WHERE
        upm.user_id = #{userId,jdbcType=INTEGER}
        AND upm.friend_id = #{friendId,jdbcType=INTEGER}
        AND upm.is_deleted = 0
        <if test="messageType != null">AND upm.message_type = #{messageType,jdbcType=INTEGER}</if>
        <if test="status == null">AND upm.status!= 3</if>
        <if test="status != null">AND upm.status = #{status,jdbcType=TINYINT}</if>
        ORDER BY upm.send_time DESC
        <if test="start != null and start != -1"> LIMIT #{start}, #{limit}</if>
    </select>


    <update id="delUserPrivateMessage" parameterType="com.sandu.user.model.input.UserPrivateMessageAdd" >
        UPDATE user_private_message upm  SET upm.status= 3,upm.is_deleted = 1
        where
        upm.user_id = #{userId,jdbcType=INTEGER}
        AND upm.friend_id = #{friendId,jdbcType=INTEGER}
        AND upm.is_deleted = 0
        <if test="messageType != null">AND upm.message_type = #{messageType,jdbcType=INTEGER}</if>
        <if test="status == null">AND upm.status!= 3</if>
        <if test="status != null">AND upm.status = #{status,jdbcType=TINYINT}</if>
    </update>



</mapper>