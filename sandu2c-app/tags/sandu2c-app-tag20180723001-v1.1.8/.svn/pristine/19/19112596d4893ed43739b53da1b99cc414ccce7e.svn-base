package com.sandu.web.mainpage.controller;

import com.sandu.common.model.ResponseEnvelope;
import com.sandu.common.util.PlatformConstant;
import com.sandu.goods.model.PO.GoodsListPO;
import com.sandu.goods.output.CompanyIntroduceVO;
import com.sandu.goods.output.GoodsDetailVO;
import com.sandu.goods.service.BaseGoodsSPUService;
import com.sandu.product.model.BaseCompany;
import com.sandu.product.service.BaseCompanyService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.log4j.Log4j2;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@Api(tags = "MainPageController", description = "小程序首页")
@Log4j2
@RestController
@RequestMapping("/v1/miniprogram/mainpage")
public class MainPageController {

    @Autowired
    private BaseCompanyService baseCompanyService;
    @Autowired
    private BaseGoodsSPUService baseGoodsSPUService;

    /**
     * @Author: zhangchengda
     * @Description: 小程序首页企业信息
     * @Date: 13:48 2018/7/2
     */
    @ApiOperation(value = "品牌介绍", response = ResponseEnvelope.class)
    @GetMapping("/company")
    public ResponseEnvelope getCompanyIntroduce(Integer companyId)
    {
        log.info("getCompanyIntroduce(Integer companyId);companyId={}",companyId);
        CompanyIntroduceVO introduce = baseCompanyService.getIntroduce(companyId);
        log.info("getCompanyIntroduce(Integer companyId);result={}",introduce);
        return new ResponseEnvelope(true,"success",introduce);
    }

    /**
     * @Author: zhangchengda
     * @Description: 小程序首页特卖商品
     * @Date: 17:52 2018/7/23
     */
    @ApiOperation(value="特卖商品", response = ResponseEnvelope.class)
    @GetMapping("/specialOffer")
    public ResponseEnvelope getSpecialOfferGoods(Integer companyId){
        if (companyId == null){
            return new ResponseEnvelope(false,"企业ID不能为空");
        }
        GoodsListPO goodsListPO = new GoodsListPO();
        BaseCompany baseCompany = baseCompanyService.get(companyId);
        if (baseCompany == null){
            return new ResponseEnvelope(false,"未知企业");
        }
        goodsListPO.setCompanyId(companyId);
        // 增加品牌过滤
        List<Integer> enableBrandIdList = null;
        enableBrandIdList = baseCompanyService.getEnableBrandIdsByAppId(baseCompany.getAppId());
        if (enableBrandIdList != null && enableBrandIdList.size() > 0) {
            goodsListPO.setBrandIdList(enableBrandIdList);
        }else {
            return new ResponseEnvelope(true, "没有找到品牌");
        }
        log.info("查询小程序首页特卖商品：companyId = ", companyId);
        List<GoodsDetailVO> goods = baseGoodsSPUService.getSpecialOfferGoods(goodsListPO);
        return new ResponseEnvelope(true,"success",goods);
    }

    /**
     * @Author: zhangchengda
     * @Description: 小程序首页预售新品
     * @Date: 17:52 2018/7/23
     */
    @ApiOperation(value="预售新品", response = ResponseEnvelope.class)
    @GetMapping("/presellGoods")
    public ResponseEnvelope getPresellGoods(Integer companyId){
        if (companyId == null){
            return new ResponseEnvelope(false,"企业ID不能为空");
        }
        GoodsListPO goodsListPO = new GoodsListPO();
        BaseCompany baseCompany = baseCompanyService.get(companyId);
        if (baseCompany == null){
            return new ResponseEnvelope(false,"未知企业");
        }
        goodsListPO.setCompanyId(companyId);
        // 增加品牌过滤
        List<Integer> enableBrandIdList = null;
        enableBrandIdList = baseCompanyService.getEnableBrandIdsByAppId(baseCompany.getAppId());
        if (enableBrandIdList != null && enableBrandIdList.size() > 0) {
            goodsListPO.setBrandIdList(enableBrandIdList);
        }else {
            return new ResponseEnvelope(true, "没有找到品牌");
        }
        log.info("查询小程序首页预售新品：companyId = ", companyId);
        List<GoodsDetailVO> goods = baseGoodsSPUService.getPresellGoods(goodsListPO);
        return new ResponseEnvelope(true,"success",goods);
    }
}
