package com.sandu.search.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

/**
 * WEB配置
 *
 * @date 20171223
 * @auth pengxuangang
 */
//@Data
@Configuration
public class WebConfig extends WebMvcConfigurerAdapter {

    /*@Value("${server.httpport}")
    private int httpPort;
    @Value("${server.port}")
    private int httpsPort;*/

    @Override
    public void addInterceptors(InterceptorRegistry registry) {

        //用户鉴权拦截器
        //registry.addInterceptor(new LoginUserInterceptor()).addPathPatterns("/**");
        //通用版本服务msgId拦截器
        //registry.addInterceptor(new UniversalMsgIdInterceptor()).addPathPatterns("/universal/**");
        //super.addInterceptors(registry);
    }

    /************************ HTTPS configuration start ************************/
    /*@Bean
    public EmbeddedServletContainerFactory servletContainer() {

        TomcatEmbeddedServletContainerFactory tomcat = new TomcatEmbeddedServletContainerFactory() {

            @Override
            protected void postProcessContext(Context context) {

                SecurityConstraint securityConstraint = new SecurityConstraint();
                securityConstraint.setUserConstraint("CONFIDENTIAL");
                SecurityCollection collection = new SecurityCollection();
                collection.addPattern("/*");
                securityConstraint.addCollection(collection);
                context.addConstraint(securityConstraint);
            }
        };
        tomcat.addAdditionalTomcatConnectors(initiateHttpConnector());
        return tomcat;
    }

    private Connector initiateHttpConnector() {

        Connector connector = new Connector("org.apache.coyote.http11.Http11NioProtocol");
        connector.setScheme("http");
        connector.setPort(httpPort);
        connector.setSecure(false);
        connector.setRedirectPort(httpsPort);
        return connector;
    }*/

    /************************ HTTPS configuration end ************************/
}
