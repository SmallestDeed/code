package com.sandu.search.storage;

import com.sandu.search.storage.company.BrandMetaDataStorage;
import com.sandu.search.storage.company.CompanyCategoryRelMetaDataStorage;
import com.sandu.search.storage.company.CompanyMetaDataStorage;
import com.sandu.search.storage.company.UnionBrandMetaDataStorage;
import com.sandu.search.storage.design.DesignPlanBrandMetaDataStorage;
import com.sandu.search.storage.design.DesignPlanProductMetaDataStorage;
import com.sandu.search.storage.design.DesignTemplateMetaDataStorage;
import com.sandu.search.storage.product.*;
import com.sandu.search.storage.resource.RenderPicMetaDataStorage;
import com.sandu.search.storage.resource.ResPicMetaDataStorage;
import com.sandu.search.storage.space.SpaceCommonMetaDataStorage;
import com.sandu.search.storage.system.SystemDictionaryMetaDataStorage;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

/**
 * 数据存储组件
 *
 * @date 20171229
 * @auth pengxuangang
 */
@Slf4j
@Component
public class StorageComponent {

    //缓存模式
    public final static int CACHE_MODE = 1;
    //内存模式
    public final static int MEMORY_MODE = 2;

    //启动应用是否已初始化数据
    @Value("${init.metadatafinish}")
    public boolean START_APPLICATION_DATA_FINISH;
    private final static String CLASS_LOG_PREFIX = "数据存储组件:";

    private final BrandMetaDataStorage brandMetaDataStorage;
    private final ResPicMetaDataStorage resPicMetaDataStorage;
    private final CompanyMetaDataStorage companyMetaDataStorage;
    private final RenderPicMetaDataStorage renderPicMetaDataStorage;
    private final UnionBrandMetaDataStorage unionBrandMetaDataStorage;
    private final SpaceCommonMetaDataStorage spaceCommonMetaDataStorage;
    private final ProductStyleMetaDataStorage productStyleMetaDataStorage;
    private final DesignTemplateMetaDataStorage designTemplateMetaDataStorage;
    private final ProductTextureMetaDataStorage productTextureMetaDataStorage;
    private final DesignPlanBrandMetaDataStorage designPlanBrandMetaDataStorage;
    private final ProductCategoryMetaDataStorage productCategoryMetaDataStorage;
    private final ProductPlatformMetaDataStorage productPlatformMetaDataStorage;
    private final ProductAttributeMetaDataStorage productAttributeMetaDataStorage;
    private final SystemDictionaryMetaDataStorage systemDictionaryMetaDataStorage;
    private final DesignPlanProductMetaDataStorage designPlanProductMetaDataStorage;
    private final ProductUsageCountMetaDataStorage productUsageCountMetaDataStorage;
    private final CompanyCategoryRelMetaDataStorage companyCategoryRelMetaDataStorage;
    private final ProductCategoryRelMetaDataStorage productCategoryRelMetaDataStorage;

    @Autowired
    public StorageComponent(BrandMetaDataStorage brandMetaDataStorage, ResPicMetaDataStorage resPicMetaDataStorage, CompanyMetaDataStorage companyMetaDataStorage, RenderPicMetaDataStorage renderPicMetaDataStorage, UnionBrandMetaDataStorage unionBrandMetaDataStorage, SpaceCommonMetaDataStorage spaceCommonMetaDataStorage, ProductStyleMetaDataStorage productStyleMetaDataStorage, DesignTemplateMetaDataStorage designTemplateMetaDataStorage, ProductTextureMetaDataStorage productTextureMetaDataStorage, DesignPlanBrandMetaDataStorage designPlanBrandMetaDataStorage, ProductCategoryMetaDataStorage productCategoryMetaDataStorage, ProductPlatformMetaDataStorage productPlatformMetaDataStorage, ProductAttributeMetaDataStorage productAttributeMetaDataStorage, SystemDictionaryMetaDataStorage systemDictionaryMetaDataStorage, DesignPlanProductMetaDataStorage designPlanProductMetaDataStorage, ProductUsageCountMetaDataStorage productUsageCountMetaDataStorage, CompanyCategoryRelMetaDataStorage companyCategoryRelMetaDataStorage, ProductCategoryRelMetaDataStorage productCategoryRelMetaDataStorage) {
        this.brandMetaDataStorage = brandMetaDataStorage;
        this.resPicMetaDataStorage = resPicMetaDataStorage;
        this.companyMetaDataStorage = companyMetaDataStorage;
        this.renderPicMetaDataStorage = renderPicMetaDataStorage;
        this.unionBrandMetaDataStorage = unionBrandMetaDataStorage;
        this.spaceCommonMetaDataStorage = spaceCommonMetaDataStorage;
        this.productStyleMetaDataStorage = productStyleMetaDataStorage;
        this.designTemplateMetaDataStorage = designTemplateMetaDataStorage;
        this.productTextureMetaDataStorage = productTextureMetaDataStorage;
        this.designPlanBrandMetaDataStorage = designPlanBrandMetaDataStorage;
        this.productCategoryMetaDataStorage = productCategoryMetaDataStorage;
        this.productPlatformMetaDataStorage = productPlatformMetaDataStorage;
        this.productAttributeMetaDataStorage = productAttributeMetaDataStorage;
        this.systemDictionaryMetaDataStorage = systemDictionaryMetaDataStorage;
        this.designPlanProductMetaDataStorage = designPlanProductMetaDataStorage;
        this.productUsageCountMetaDataStorage = productUsageCountMetaDataStorage;
        this.companyCategoryRelMetaDataStorage = companyCategoryRelMetaDataStorage;
        this.productCategoryRelMetaDataStorage = productCategoryRelMetaDataStorage;
    }

    /**
     * 启动应用时加载元数据
     *
     * @date 2018/5/31
     * @auth pengxuangang
     * @mail xuangangpeng@gmail.com
     */
    public void startApplicationLoadMetaData() {
        if (!START_APPLICATION_DATA_FINISH) {
            reloadAllStorageInCache();
        }
    }

    //重新加载所有缓存数据(用以数据同步时清空数据)
    public void reloadAllStorageInCache() {

        long startTime = System.currentTimeMillis();
        log.info(CLASS_LOG_PREFIX + "开始重新加载所有内存中缓存的数据.....");

        /************************** 产品 *********************************/
        //品牌元数据
        log.info(CLASS_LOG_PREFIX + "开始更新品牌元数据...");
        brandMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "品牌元数据更新完成.");

        //产品分类元数据
        log.info(CLASS_LOG_PREFIX + "开始更新产品分类元数据...");
        productCategoryMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "产品分类元数据更新完成.");

        //产品分类关联数据
        log.info(CLASS_LOG_PREFIX + "开始更新产品分类关联元数据...");
        productCategoryRelMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "产品分类关联元数据更新完成.");

        //产品组合关联数据
        log.info(CLASS_LOG_PREFIX + "开始更新产品组合关联数据...");
        //productGroupRelMetaDataStorage.updateData(isEnforceLoad);
        log.info(CLASS_LOG_PREFIX + "产品组合关联数据更新完成.");

        //产品风格数据
        log.info(CLASS_LOG_PREFIX + "开始更新产品风格数据...");
        productStyleMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "产品风格数据更新完成.");

        //产品材质数据
        log.info(CLASS_LOG_PREFIX + "开始更新产品材质数据...");
        productTextureMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "产品材质数据更新完成.");

        //图片资源数据
        log.info(CLASS_LOG_PREFIX + "开始更新图片资源数据...");
        resPicMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "图片资源数据更新完成.");

        //户型小区数据
        log.info(CLASS_LOG_PREFIX + "开始更新户型小区数据...");
        //houseLivingMetaDataStorage.updateData(isEnforceLoad);
        log.info(CLASS_LOG_PREFIX + "户型小区数据更新完成.");

        //系统字典数据
        log.info(CLASS_LOG_PREFIX + "开始更新系统字典数据...");
        systemDictionaryMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "系统字典数据更新完成.");

        //区域数据
        log.info(CLASS_LOG_PREFIX + "开始更新区域数据...");
        //systemAreaMetaDataStorage.updateData(isEnforceLoad);
        log.info(CLASS_LOG_PREFIX + "区域数据更新完成.");

        //公司分类关联数据
        log.info(CLASS_LOG_PREFIX + "开始更新公司分类关联数据...");
        companyCategoryRelMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "公司分类关联数据更新完成.");

        //公司数据
        log.info(CLASS_LOG_PREFIX + "开始更新公司数据...");
        companyMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "公司数据更新完成.");

        //设计方案产品数据
        log.info(CLASS_LOG_PREFIX + "开始同步设计方案产品数据元数据.....");
        designPlanProductMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "同步设计方案产品数据元数据完成.");

        //联盟品牌数据
        log.info(CLASS_LOG_PREFIX + "开始同步联盟品牌数据元数据.....");
        unionBrandMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "同步设计联盟品牌数据元数据完成.");

        //产品平台数据
        log.info(CLASS_LOG_PREFIX + "开始同步产品平台数据.");
        productPlatformMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "同步产品平台数据完成.");

        //产品属性数据
        log.info(CLASS_LOG_PREFIX + "开始同步产品属性数据.");
        productAttributeMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "同步产品属性数据完成.");

        //产品使用次数
        log.info(CLASS_LOG_PREFIX + "开始同步产品使用次数数据.");
        productUsageCountMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "同步产品产品使用次数完成.");

        /************************** 推荐方案 *********************************/
        //渲染图片数据
        log.info(CLASS_LOG_PREFIX + "开始同步渲染图片数据数据.");
        renderPicMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "同步渲染图片数据完成.");

        //设计方案品牌数据
        log.info(CLASS_LOG_PREFIX + "开始同步设计方案品牌数据.");
        designPlanBrandMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "同步设计方案品牌数据完成.");

        //设计方案样板房数据
        log.info(CLASS_LOG_PREFIX + "开始更新设计方案样板房数据...");
        designTemplateMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "设计方案样板房数据更新完成.");

        //空间数据
        log.info(CLASS_LOG_PREFIX + "开始更新空间数据...");
        spaceCommonMetaDataStorage.updateData();
        log.info(CLASS_LOG_PREFIX + "空间数据更新完成.");

        log.info(CLASS_LOG_PREFIX + "重新加载所有内存中缓存的数据完成，耗时:{}ms.", (System.currentTimeMillis() - startTime));

        Runtime.getRuntime().gc();
        //标识初始化完成
        START_APPLICATION_DATA_FINISH = true;
    }

    //切换存储模式
    public void changeStorageMode(int storageMode) {
        if (CACHE_MODE == storageMode || MEMORY_MODE == storageMode) {
            long startTime = System.currentTimeMillis();
            //品牌元数据
            brandMetaDataStorage.changeStorageMode(storageMode);
            //产品分类元数据
            productCategoryMetaDataStorage.changeStorageMode(storageMode);
            //产品分类关联数据
            productCategoryRelMetaDataStorage.changeStorageMode(storageMode);
            //产品风格数据
            productStyleMetaDataStorage.changeStorageMode(storageMode);
            //产品材质数据
            productTextureMetaDataStorage.changeStorageMode(storageMode);
            //图片资源数据
            resPicMetaDataStorage.changeStorageMode(storageMode);
            //系统字典数据
            systemDictionaryMetaDataStorage.changeStorageMode(storageMode);
            //公司分类关联数据
            companyCategoryRelMetaDataStorage.changeStorageMode(storageMode);
            //公司数据
            companyMetaDataStorage.changeStorageMode(storageMode);
            //设计方案产品数据
            designPlanProductMetaDataStorage.changeStorageMode(storageMode);
            //联盟品牌数据
            unionBrandMetaDataStorage.changeStorageMode(storageMode);
            //产品平台数据
            productPlatformMetaDataStorage.changeStorageMode(storageMode);
            //产品属性数据
            productAttributeMetaDataStorage.changeStorageMode(storageMode);
            //产品使用次数
            productUsageCountMetaDataStorage.changeStorageMode(storageMode);
            //渲染图片数据
            renderPicMetaDataStorage.changeStorageMode(storageMode);
            //设计方案品牌数据
            designPlanBrandMetaDataStorage.changeStorageMode(storageMode);
            //设计方案样板房数据
            designTemplateMetaDataStorage.changeStorageMode(storageMode);
            //空间数据
            spaceCommonMetaDataStorage.changeStorageMode(storageMode);
            log.info(CLASS_LOG_PREFIX + "切换存储模式完成!耗时:{}ms.", (System.currentTimeMillis() - startTime));

            Runtime.getRuntime().gc();
        }
    }
}
