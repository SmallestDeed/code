<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nork.product.dao.BaseProductMapper">
<!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>-->
	<!-- **插入定义** -->
	<insert id="insertSelective" parameterType="com.nork.product.model.BaseProduct"  useGeneratedKeys="true" keyProperty="id">
		insert into base_product
		<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="sysCode!= null">sys_code, </if>
		<if test="splitTexturesInfo!= null">split_textures_info, </if>
		<if test="creator!= null">creator, </if>
		<if test="gmtCreate!= null">gmt_create, </if>
		<if test="modifier!= null">modifier, </if>
		<if test="gmtModified!= null">gmt_modified, </if>
		<if test="isDeleted!= null">is_deleted, </if>
		<if test="productCode!= null">product_code, </if>
		<if test="productName!= null">product_name, </if>
		<if test="brandId!= null">brand_id, </if>
		<if test="parentId!= null">parent_id, </if>
		<if test="materialFileId!= null">material_file_id, </if>
		<if test="spaceComonId!= null">spaceComon_id, </if>
		<if test="proStyleId!= null">pro_style_id, </if>
		<if test="productSpec!= null">product_spec, </if>
		<if test="colorId!= null">color_id, </if>
		<if test="productLength!= null">product_length, </if>
		<if test="productWidth!= null">product_width, </if>
		<if test="productHeight!= null">product_height, </if>
		<if test="salePrice!= null">sale_price, </if>
		<if test="picId!= null">pic_id, </if>
		<if test="modelId!= null">model_id, </if>
		<if test="productDesc!= null">product_desc, </if>
		<if test="picIds!= null">pic_ids, </if>
		<if test="materialPicIds!= null">material_pic_ids, </if>
		<if test="material3dPicIds!= null">material3d_pic_ids, </if>
		<if test="houseTypeValues!= null">house_type_values, </if>
		<if test="productTypeValue!= null">product_type_value, </if>
		<if test="productTypeMark!= null">product_type_mark, </if>
		<if test="productSmallTypeMark!= null">product_small_type_mark, </if>
		
		<if test="productShortCode!= null">product_short_code, </if>
		<if test="originalProductCode!= null">original_product_code, </if>
		<if test="bmIds!= null">bm_ids, </if>
		<if test="codeNumber!= null">code_number, </if>
		<if test="designTempletId!= null">designTemplet_id, </if>
		
		<if test="u3dModelId!= null">u3dmodel_Id, </if>
		<if test="ipadU3dModelId!= null">ipad_u3dmodel_id, </if>
		<if test="iosU3dModelId!= null">ios_u3dmodel_id, </if>
		<if test="androidU3dModelId!= null">android_u3dmodel_id, </if>
		<if test="macBookU3dModelId!= null">macbook_u3dmodel_id, </if>
		<if test="windowsU3dModelId!= null">windows_u3dmodel_id, </if>
		<if test="mergeProductIds!= null">merge_product_ids, </if>
		<if test="decorationId!= null">decoration_id, </if>
		<if test="designerId!= null">designer_id, </if>
		<if test="modelingId!= null">modeling_id, </if>
		<if test="renderingId!= null">rendering_id, </if>
		<if test="putawayModified!= null">putaway_modified, </if>
		<if test="dateAtt2!= null">date_att2, </if>
		<if test="productSmallTypeValue!= null">product_small_type_value, </if>
		<if test="putawayState!= null">putaway_state, </if>
		<if test="fbx_state!= null"> #{fbxState,jdbcType=INTEGER}, </if>
		<if test="fbx_file_id!= null"> #{fbxFileId,jdbcType=INTEGER}, </if>
		<if test="fbx_texture!= null"> #{fbxTexture,jdbcType=VARCHAR}, </if>
		<if test="numAtt3!= null">num_att3, </if>
		<if test="numAtt4!= null">num_att4, </if>
		<if test="productMaterialDesc!= null">product_material_desc,</if>
		<if test="remark!= null">remark, </if>
		<if test="spellingFlowerFileId!= null">spelling_flower_file_id, </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="sysCode!= null">  #{sysCode,jdbcType=VARCHAR}, </if>
		<if test="splitTexturesInfo!= null">  #{splitTexturesInfo,jdbcType=VARCHAR}, </if>
		<if test="creator!= null">  #{creator,jdbcType=VARCHAR}, </if>
		<if test="gmtCreate!= null">  #{gmtCreate,jdbcType=TIMESTAMP}, </if>
		<if test="modifier!= null">  #{modifier,jdbcType=VARCHAR}, </if>
		<if test="gmtModified!= null">  #{gmtModified,jdbcType=TIMESTAMP}, </if>
		<if test="isDeleted!= null">  #{isDeleted,jdbcType=INTEGER}, </if>
		<if test="productCode!= null">  #{productCode,jdbcType=VARCHAR}, </if>
		<if test="productName!= null">  #{productName,jdbcType=VARCHAR}, </if>
		<if test="brandId!= null">  #{brandId,jdbcType=INTEGER}, </if>
		<if test="parentId!= null">  #{parentId,jdbcType=INTEGER}, </if>
		<if test="materialFileId!= null">  #{materialFileId,jdbcType=INTEGER}, </if>
		<if test="spaceComonId!= null">  #{spaceComonId,jdbcType=INTEGER}, </if>
		<if test="proStyleId!= null">  #{proStyleId,jdbcType=INTEGER}, </if>
		<if test="productSpec!= null">  #{productSpec,jdbcType=VARCHAR}, </if>
		<if test="colorId!= null">  #{colorId,jdbcType=INTEGER}, </if>
		<if test="productLength!= null">  #{productLength,jdbcType=VARCHAR}, </if>
		<if test="productWidth!= null">  #{productWidth,jdbcType=VARCHAR}, </if>
		<if test="productHeight!= null">  #{productHeight,jdbcType=VARCHAR}, </if>
		<if test="salePrice!= null">  #{salePrice,jdbcType=DOUBLE}, </if>
		<if test="picId!= null">  #{picId,jdbcType=INTEGER}, </if>
		<if test="modelId!= null">  #{modelId,jdbcType=INTEGER}, </if>
		<if test="productDesc!= null">  #{productDesc,jdbcType=VARCHAR}, </if>
		<if test="picIds!= null">  #{picIds,jdbcType=VARCHAR}, </if>
		<if test="materialPicIds!= null">  #{materialPicIds,jdbcType=VARCHAR}, </if>
		<if test="material3dPicIds!= null">  #{material3dPicIds,jdbcType=VARCHAR}, </if>
		<if test="houseTypeValues!= null">  #{houseTypeValues,jdbcType=VARCHAR}, </if>
		<if test="productTypeValue!= null">  #{productTypeValue,jdbcType=VARCHAR}, </if>
		<if test="productTypeMark!= null">  #{productTypeMark,jdbcType=VARCHAR}, </if>
		<if test="productSmallTypeMark!= null">  #{productSmallTypeMark,jdbcType=VARCHAR}, </if>
		
		<if test="productShortCode!= null">  #{productShortCode,jdbcType=VARCHAR}, </if>
		<if test="originalProductCode!= null">  #{originalProductCode,jdbcType=VARCHAR}, </if>
		<if test="bmIds!= null">  #{bmIds,jdbcType=VARCHAR}, </if>
		<if test="codeNumber!= null">  #{codeNumber,jdbcType=INTEGER}, </if>
		<if test="designTempletId!= null">  #{designTempletId,jdbcType=INTEGER}, </if>
		
		<if test="u3dModelId!= null">  #{u3dModelId,jdbcType=VARCHAR}, </if>
		<if test="ipadU3dModelId!= null">  #{ipadU3dModelId,jdbcType=INTEGER}, </if>
		<if test="iosU3dModelId!= null">  #{iosU3dModelId,jdbcType=INTEGER}, </if>
		<if test="androidU3dModelId!= null">  #{androidU3dModelId,jdbcType=INTEGER}, </if>
		<if test="macBookU3dModelId!= null">  #{macBookU3dModelId,jdbcType=INTEGER}, </if>
		<if test="windowsU3dModelId!= null">  #{windowsU3dModelId,jdbcType=INTEGER}, </if>
		<if test="mergeProductIds!= null">  #{mergeProductIds,jdbcType=VARCHAR}, </if>
		<if test="decorationId!= null">  #{decorationId,jdbcType=VARCHAR}, </if>
		<if test="designerId!= null">  #{designerId,jdbcType=INTEGER}, </if>
		<if test="modelingId!= null">  #{modelingId,jdbcType=INTEGER}, </if>
		<if test="renderingId!= null">  #{renderingId,jdbcType=INTEGER}, </if>
		<if test="putawayModified!= null">  #{putawayModified,jdbcType=TIMESTAMP}, </if>
		<if test="dateAtt2!= null">  #{dateAtt2,jdbcType=TIMESTAMP}, </if>
		<if test="productSmallTypeValue!= null">  #{productSmallTypeValue,jdbcType=INTEGER}, </if>
		<if test="putawayState!= null">  #{putawayState,jdbcType=INTEGER}, </if>
		<if test="fbx_state!= null"> #{fbxState,jdbcType=INTEGER}, </if>
		<if test="fbx_file_id!= null"> #{fbxFileId,jdbcType=INTEGER}, </if>
		<if test="fbx_texture!= null"> #{fbxTexture,jdbcType=VARCHAR}, </if>
		<if test="numAtt3!= null">  #{numAtt3,jdbcType=DOUBLE}, </if>
		<if test="numAtt4!= null">  #{numAtt4,jdbcType=DOUBLE}, </if>
		<if test="productMaterialDesc!= null">#{productMaterialDesc,jdbcType=VARCHAR},</if>
		<if test="remark!= null">  #{remark,jdbcType=VARCHAR}, </if>
		<if test="spellingFlowerFileId!= null">#{spellingFlowerFileId,jdbcType=INTEGER}, </if>
		</trim>
	</insert>

	<insert id="insertEntity" parameterType="com.nork.sync.model.ProductEntity"  useGeneratedKeys="true" keyProperty="id">
		insert into base_product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sysCode!= null">sys_code, </if>
			<if test="splitTexturesInfo!= null">split_textures_info, </if>
			<if test="creator!= null">creator, </if>
			<if test="gmtCreate!= null">gmt_create, </if>
			<if test="modifier!= null">modifier, </if>
			<if test="gmtModified!= null">gmt_modified, </if>
			<if test="isDeleted!= null">is_deleted, </if>
			<if test="productCode!= null">product_code, </if>
			<if test="productName!= null">product_name, </if>
			<if test="brandId!= null">brand_id, </if>
			<if test="parentId!= null">parent_id, </if>
			<if test="materialFileId!= null">material_file_id, </if>
			<if test="spaceComonId!= null">spaceComon_id, </if>
			<if test="proStyleId!= null">pro_style_id, </if>
			<if test="productSpec!= null">product_spec, </if>
			<if test="colorId!= null">color_id, </if>
			<if test="productLength!= null">product_length, </if>
			<if test="productWidth!= null">product_width, </if>
			<if test="productHeight!= null">product_height, </if>
			<if test="salePrice!= null">sale_price, </if>
			<if test="picId!= null">pic_id, </if>
			<if test="modelId!= null">model_id, </if>
			<if test="productDesc!= null">product_desc, </if>
			<if test="picIds!= null">pic_ids, </if>
			<if test="materialPicIds!= null">material_pic_ids, </if>
			<if test="material3dPicIds!= null">material3d_pic_ids, </if>
			<if test="houseTypeValues!= null">house_type_values, </if>
			<if test="productTypeValue!= null">product_type_value, </if>
			<if test="productTypeMark!= null">product_type_mark, </if>
			<if test="productSmallTypeMark!= null">product_small_type_mark, </if>

			<if test="productShortCode!= null">product_short_code, </if>
			<if test="originalProductCode!= null">original_product_code, </if>
			<if test="bmIds!= null">bm_ids, </if>
			<if test="codeNumber!= null">code_number, </if>
			<if test="designTempletId!= null">designTemplet_id, </if>

			<if test="u3dModelId!= null">u3dmodel_Id, </if>
			<if test="ipadU3dModelId!= null">ipad_u3dmodel_id, </if>
			<if test="iosU3dModelId!= null">ios_u3dmodel_id, </if>
			<if test="androidU3dModelId!= null">android_u3dmodel_id, </if>
			<if test="macBookU3dModelId!= null">macbook_u3dmodel_id, </if>
			<if test="windowsU3dModelId!= null">windows_u3dmodel_id, </if>
			<if test="mergeProductIds!= null">merge_product_ids, </if>
			<if test="decorationId!= null">decoration_id, </if>
			<if test="designerId!= null">designer_id, </if>
			<if test="modelingId!= null">modeling_id, </if>
			<if test="renderingId!= null">rendering_id, </if>
			<if test="putawayModified!= null">putaway_modified, </if>
			<if test="dateAtt2!= null">date_att2, </if>
			<if test="productSmallTypeValue!= null">product_small_type_value, </if>
			<if test="putawayState!= null">putaway_state, </if>
			<if test="numAtt3!= null">num_att3, </if>
			<if test="numAtt4!= null">num_att4, </if>
			<if test="remark!= null">remark, </if>
			<if test="spellingFlowerFileId!= null">spelling_flower_file_id, </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="sysCode!= null">  #{sysCode,jdbcType=VARCHAR}, </if>
			<if test="splitTexturesInfo!= null">  #{splitTexturesInfo,jdbcType=VARCHAR}, </if>
			<if test="creator!= null">  #{creator,jdbcType=VARCHAR}, </if>
			<if test="gmtCreate!= null">  #{gmtCreate,jdbcType=TIMESTAMP}, </if>
			<if test="modifier!= null">  #{modifier,jdbcType=VARCHAR}, </if>
			<if test="gmtModified!= null">  #{gmtModified,jdbcType=TIMESTAMP}, </if>
			<if test="isDeleted!= null">  #{isDeleted,jdbcType=INTEGER}, </if>
			<if test="productCode!= null">  #{productCode,jdbcType=VARCHAR}, </if>
			<if test="productName!= null">  #{productName,jdbcType=VARCHAR}, </if>
			<if test="brandId!= null">  #{brandId,jdbcType=INTEGER}, </if>
			<if test="parentId!= null">  #{parentId,jdbcType=INTEGER}, </if>
			<if test="materialFileId!= null">  #{materialFileId,jdbcType=INTEGER}, </if>
			<if test="spaceComonId!= null">  #{spaceComonId,jdbcType=INTEGER}, </if>
			<if test="proStyleId!= null">  #{proStyleId,jdbcType=INTEGER}, </if>
			<if test="productSpec!= null">  #{productSpec,jdbcType=VARCHAR}, </if>
			<if test="colorId!= null">  #{colorId,jdbcType=INTEGER}, </if>
			<if test="productLength!= null">  #{productLength,jdbcType=VARCHAR}, </if>
			<if test="productWidth!= null">  #{productWidth,jdbcType=VARCHAR}, </if>
			<if test="productHeight!= null">  #{productHeight,jdbcType=VARCHAR}, </if>
			<if test="salePrice!= null">  #{salePrice,jdbcType=DOUBLE}, </if>
			<if test="picId!= null">  #{picId,jdbcType=INTEGER}, </if>
			<if test="modelId!= null">  #{modelId,jdbcType=INTEGER}, </if>
			<if test="productDesc!= null">  #{productDesc,jdbcType=VARCHAR}, </if>
			<if test="picIds!= null">  #{picIds,jdbcType=VARCHAR}, </if>
			<if test="materialPicIds!= null">  #{materialPicIds,jdbcType=VARCHAR}, </if>
			<if test="material3dPicIds!= null">  #{material3dPicIds,jdbcType=VARCHAR}, </if>
			<if test="houseTypeValues!= null">  #{houseTypeValues,jdbcType=VARCHAR}, </if>
			<if test="productTypeValue!= null">  #{productTypeValue,jdbcType=VARCHAR}, </if>
			<if test="productTypeMark!= null">  #{productTypeMark,jdbcType=VARCHAR}, </if>
			<if test="productSmallTypeMark!= null">  #{productSmallTypeMark,jdbcType=VARCHAR}, </if>

			<if test="productShortCode!= null">  #{productShortCode,jdbcType=VARCHAR}, </if>
			<if test="originalProductCode!= null">  #{originalProductCode,jdbcType=VARCHAR}, </if>
			<if test="bmIds!= null">  #{bmIds,jdbcType=VARCHAR}, </if>
			<if test="codeNumber!= null">  #{codeNumber,jdbcType=INTEGER}, </if>
			<if test="designTempletId!= null">  #{designTempletId,jdbcType=INTEGER}, </if>

			<if test="u3dModelId!= null">  #{u3dModelId,jdbcType=VARCHAR}, </if>
			<if test="ipadU3dModelId!= null">  #{ipadU3dModelId,jdbcType=INTEGER}, </if>
			<if test="iosU3dModelId!= null">  #{iosU3dModelId,jdbcType=INTEGER}, </if>
			<if test="androidU3dModelId!= null">  #{androidU3dModelId,jdbcType=INTEGER}, </if>
			<if test="macBookU3dModelId!= null">  #{macBookU3dModelId,jdbcType=INTEGER}, </if>
			<if test="windowsU3dModelId!= null">  #{windowsU3dModelId,jdbcType=INTEGER}, </if>
			<if test="mergeProductIds!= null">  #{mergeProductIds,jdbcType=VARCHAR}, </if>
			<if test="decorationId!= null">  #{decorationId,jdbcType=VARCHAR}, </if>
			<if test="designerId!= null">  #{designerId,jdbcType=INTEGER}, </if>
			<if test="modelingId!= null">  #{modelingId,jdbcType=INTEGER}, </if>
			<if test="renderingId!= null">  #{renderingId,jdbcType=INTEGER}, </if>
			<if test="putawayModified!= null">  #{putawayModified,jdbcType=TIMESTAMP}, </if>
			<if test="dateAtt2!= null">  #{dateAtt2,jdbcType=TIMESTAMP}, </if>
			<if test="productSmallTypeValue!= null">  #{productSmallTypeValue,jdbcType=INTEGER}, </if>
			<if test="putawayState!= null">  #{putawayState,jdbcType=INTEGER}, </if>
			<if test="numAtt3!= null">  #{numAtt3,jdbcType=DOUBLE}, </if>
			<if test="numAtt4!= null">  #{numAtt4,jdbcType=DOUBLE}, </if>
			<if test="remark!= null">  #{remark,jdbcType=VARCHAR}, </if>
			<if test="spellingFlowerFileId!= null">#{spellingFlowerFileId,jdbcType=INTEGER}, </if>
		</trim>
	</insert>

	<!-- **更新定义** -->
	<update id="updateByPrimaryKeySelective" parameterType="com.nork.product.model.BaseProduct">
		update base_product
		<set>
		<if test="spellingFlowerFileId!= null"> spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}, </if>
		<if test="sysCode!= null">  sys_code = #{sysCode,jdbcType=VARCHAR}, </if>
		<if test="splitTexturesInfo!= null">  split_textures_info = #{splitTexturesInfo,jdbcType=VARCHAR}, </if>
		<if test="creator!= null">  creator = #{creator,jdbcType=VARCHAR}, </if>
		<if test="gmtCreate!= null">  gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}, </if>
		<if test="modifier!= null">  modifier = #{modifier,jdbcType=VARCHAR}, </if>
		<if test="gmtModified!= null">  gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}, </if>
		<if test="isDeleted!= null">  is_deleted = #{isDeleted,jdbcType=INTEGER}, </if>
		<if test="productCode!= null">  product_code = #{productCode,jdbcType=VARCHAR}, </if>
		<if test="productName!= null">  product_name = #{productName,jdbcType=VARCHAR}, </if>
		<if test="brandId!= null">  brand_id = #{brandId,jdbcType=INTEGER}, </if>
		<if test="parentId!= null">  parent_id = #{parentId,jdbcType=INTEGER}, </if>
		<if test="materialFileId!= null">  material_file_id = #{materialFileId,jdbcType=INTEGER}, </if>
		<if test="spaceComonId!= null">  spaceComon_id = #{spaceComonId,jdbcType=INTEGER}, </if>
		<if test="proStyleId!= null">  pro_style_id = #{proStyleId,jdbcType=INTEGER}, </if>
		<if test="productSpec!= null">  product_spec = #{productSpec,jdbcType=VARCHAR}, </if>
		<if test="colorId!= null">  color_id = #{colorId,jdbcType=INTEGER}, </if>
		<if test="productLength!= null">  product_length = #{productLength,jdbcType=VARCHAR}, </if>
		<if test="productWidth!= null">  product_width = #{productWidth,jdbcType=VARCHAR}, </if>
		<if test="productHeight!= null">  product_height = #{productHeight,jdbcType=VARCHAR}, </if>
		<if test="salePrice!= null">  sale_price = #{salePrice,jdbcType=DOUBLE}, </if>
		<if test="picId!= null">  pic_id = #{picId,jdbcType=INTEGER}, </if>
		<if test="modelId!= null">  model_id = #{modelId,jdbcType=INTEGER}, </if>
		<if test="productDesc!= null">  product_desc = #{productDesc,jdbcType=VARCHAR}, </if>
		<if test="picIds!= null">  pic_ids = #{picIds,jdbcType=VARCHAR}, </if>
		<if test="materialPicIds!= null">  material_pic_ids = #{materialPicIds,jdbcType=VARCHAR}, </if>
		<if test="material3dPicIds!= null">  material3d_pic_ids = #{material3dPicIds,jdbcType=VARCHAR}, </if>
		<if test="houseTypeValues!= null">  house_type_values = #{houseTypeValues,jdbcType=VARCHAR}, </if>
		<if test="productTypeValue!= null">  product_type_value = #{productTypeValue,jdbcType=VARCHAR}, </if>
		<if test="productTypeMark!= null">  product_type_mark = #{productTypeMark,jdbcType=VARCHAR}, </if>
		<if test="productSmallTypeMark!= null">  product_small_type_mark = #{productSmallTypeMark,jdbcType=VARCHAR}, </if>
		
		<if test="productShortCode!= null">  product_short_code = #{productShortCode,jdbcType=VARCHAR}, </if>
		<if test="originalProductCode!= null">  original_product_code = #{originalProductCode,jdbcType=VARCHAR}, </if>
		<if test="bmIds!= null">  bm_ids = #{bmIds,jdbcType=VARCHAR}, </if>
		<if test="codeNumber!= null">  code_number = #{codeNumber,jdbcType=INTEGER}, </if>
		<if test="designTempletId!= null">  designTemplet_id = #{designTempletId,jdbcType=INTEGER}, </if>
		
		<if test="u3dModelId!= null">  u3dmodel_Id = #{u3dModelId,jdbcType=VARCHAR}, </if>
		<if test="ipadU3dModelId!= null">  ipad_u3dmodel_id = #{ipadU3dModelId,jdbcType=INTEGER}, </if>
		<if test="iosU3dModelId!= null">  ios_u3dmodel_id = #{iosU3dModelId,jdbcType=INTEGER}, </if>
		<if test="androidU3dModelId!= null">  android_u3dmodel_id = #{androidU3dModelId,jdbcType=INTEGER}, </if>
		<if test="macBookU3dModelId!= null">  macbook_u3dmodel_id = #{macBookU3dModelId,jdbcType=INTEGER}, </if>
		<if test="windowsU3dModelId!= null">  windows_u3dmodel_id = #{windowsU3dModelId,jdbcType=INTEGER}, </if>
		<if test="mergeProductIds!= null">  merge_product_ids = #{mergeProductIds,jdbcType=VARCHAR}, </if>
		<if test="decorationId!= null">  decoration_id = #{decorationId,jdbcType=VARCHAR}, </if>
		<if test="designerId!= null"> designer_id = #{designerId,jdbcType=INTEGER}, </if>
		<if test="modelingId!= null"> modeling_id = #{modelingId,jdbcType=INTEGER}, </if>
		<if test="renderingId!= null"> rendering_id =  #{renderingId,jdbcType=INTEGER}, </if>
		<if test="putawayModified!= null">  putaway_modified = #{putawayModified,jdbcType=TIMESTAMP}, </if>
		<if test="dateAtt2!= null">  date_att2 = #{dateAtt2,jdbcType=TIMESTAMP}, </if>
		<if test="productSmallTypeValue!= null">  product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}, </if>
		<if test="putawayState!= null">  putaway_state = #{putawayState,jdbcType=INTEGER}, </if>
		<if test="configId!=null">config_id = #{configId,jdbcType=INTEGER},</if>
		<if test="fbxState!= null"> fbx_state = #{fbxState,jdbcType=INTEGER}, </if>
		<if test="fbxFileId!= null"> fbx_file_id = #{fbxFileId,jdbcType=INTEGER}, </if>
		<if test="fbxTexture!= null"> fbx_texture = #{fbxTexture,jdbcType=VARCHAR}, </if>
		<if test="numAtt3!= null">  num_att3 = #{numAtt3,jdbcType=DOUBLE}, </if>
		<if test="numAtt4!= null">  num_att4 = #{numAtt4,jdbcType=DOUBLE}, </if>
		<if test="remark!= null">  remark = #{remark,jdbcType=VARCHAR}, </if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- **更新定义** -->
	<update id="updateEntity" parameterType="com.nork.sync.model.ProductEntity">
		update base_product
		<set>
			<if test="spellingFlowerFileId!= null">spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}, </if>
			<if test="sysCode!= null">  sys_code = #{sysCode,jdbcType=VARCHAR}, </if>
			<if test="splitTexturesInfo!= null">  split_textures_info = #{splitTexturesInfo,jdbcType=VARCHAR}, </if>
			<if test="creator!= null">  creator = #{creator,jdbcType=VARCHAR}, </if>
			<if test="gmtCreate!= null">  gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}, </if>
			<if test="modifier!= null">  modifier = #{modifier,jdbcType=VARCHAR}, </if>
			<if test="gmtModified!= null">  gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}, </if>
			<if test="isDeleted!= null">  is_deleted = #{isDeleted,jdbcType=INTEGER}, </if>
			<if test="productCode!= null">  product_code = #{productCode,jdbcType=VARCHAR}, </if>
			<if test="productName!= null">  product_name = #{productName,jdbcType=VARCHAR}, </if>
			<if test="brandId!= null">  brand_id = #{brandId,jdbcType=INTEGER}, </if>
			<if test="parentId!= null">  parent_id = #{parentId,jdbcType=INTEGER}, </if>
			<if test="materialFileId!= null">  material_file_id = #{materialFileId,jdbcType=INTEGER}, </if>
			<if test="spaceComonId!= null">  spaceComon_id = #{spaceComonId,jdbcType=INTEGER}, </if>
			<if test="proStyleId!= null">  pro_style_id = #{proStyleId,jdbcType=INTEGER}, </if>
			<if test="productSpec!= null">  product_spec = #{productSpec,jdbcType=VARCHAR}, </if>
			<if test="colorId!= null">  color_id = #{colorId,jdbcType=INTEGER}, </if>
			<if test="productLength!= null">  product_length = #{productLength,jdbcType=VARCHAR}, </if>
			<if test="productWidth!= null">  product_width = #{productWidth,jdbcType=VARCHAR}, </if>
			<if test="productHeight!= null">  product_height = #{productHeight,jdbcType=VARCHAR}, </if>
			<if test="salePrice!= null">  sale_price = #{salePrice,jdbcType=DOUBLE}, </if>
			<if test="picId!= null">  pic_id = #{picId,jdbcType=INTEGER}, </if>
			<if test="modelId!= null">  model_id = #{modelId,jdbcType=INTEGER}, </if>
			<if test="productDesc!= null">  product_desc = #{productDesc,jdbcType=VARCHAR}, </if>
			<if test="picIds!= null">  pic_ids = #{picIds,jdbcType=VARCHAR}, </if>
			<if test="materialPicIds!= null">  material_pic_ids = #{materialPicIds,jdbcType=VARCHAR}, </if>
			<if test="material3dPicIds!= null">  material3d_pic_ids = #{material3dPicIds,jdbcType=VARCHAR}, </if>
			<if test="houseTypeValues!= null">  house_type_values = #{houseTypeValues,jdbcType=VARCHAR}, </if>
			<if test="productTypeValue!= null">  product_type_value = #{productTypeValue,jdbcType=VARCHAR}, </if>
			<if test="productTypeMark!= null">  product_type_mark = #{productTypeMark,jdbcType=VARCHAR}, </if>
			<if test="productSmallTypeMark!= null">  product_small_type_mark = #{productSmallTypeMark,jdbcType=VARCHAR}, </if>

			<if test="productShortCode!= null">  product_short_code = #{productShortCode,jdbcType=VARCHAR}, </if>
			<if test="originalProductCode!= null">  original_product_code = #{originalProductCode,jdbcType=VARCHAR}, </if>
			<if test="bmIds!= null">  bm_ids = #{bmIds,jdbcType=VARCHAR}, </if>
			<if test="codeNumber!= null">  code_number = #{codeNumber,jdbcType=INTEGER}, </if>
			<if test="designTempletId!= null">  designTemplet_id = #{designTempletId,jdbcType=INTEGER}, </if>

			<if test="u3dModelId!= null">  u3dmodel_Id = #{u3dModelId,jdbcType=VARCHAR}, </if>
			<if test="ipadU3dModelId!= null">  ipad_u3dmodel_id = #{ipadU3dModelId,jdbcType=INTEGER}, </if>
			<if test="iosU3dModelId!= null">  ios_u3dmodel_id = #{iosU3dModelId,jdbcType=INTEGER}, </if>
			<if test="androidU3dModelId!= null">  android_u3dmodel_id = #{androidU3dModelId,jdbcType=INTEGER}, </if>
			<if test="macBookU3dModelId!= null">  macbook_u3dmodel_id = #{macBookU3dModelId,jdbcType=INTEGER}, </if>
			<if test="windowsU3dModelId!= null">  windows_u3dmodel_id = #{windowsU3dModelId,jdbcType=INTEGER}, </if>
			<if test="mergeProductIds!= null">  merge_product_ids = #{mergeProductIds,jdbcType=VARCHAR}, </if>
			<if test="decorationId!= null">  decoration_id = #{decorationId,jdbcType=VARCHAR}, </if>
			<if test="designerId!= null"> designer_id = #{designerId,jdbcType=INTEGER}, </if>
			<if test="modelingId!= null"> modeling_id = #{modelingId,jdbcType=INTEGER}, </if>
			<if test="renderingId!= null"> rendering_id =  #{renderingId,jdbcType=INTEGER}, </if>
			<if test="putawayModified!= null">  putaway_modified = #{putawayModified,jdbcType=TIMESTAMP}, </if>
			<if test="dateAtt2!= null">  date_att2 = #{dateAtt2,jdbcType=TIMESTAMP}, </if>
			<if test="productSmallTypeValue!= null">  product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}, </if>
			<if test="putawayState!= null">  putaway_state = #{putawayState,jdbcType=INTEGER}, </if>
			<if test="configId!=null">config_id = #{configId,jdbcType=INTEGER},</if>
			<if test="numAtt3!= null">  num_att3 = #{numAtt3,jdbcType=DOUBLE}, </if>
			<if test="numAtt4!= null">  num_att4 = #{numAtt4,jdbcType=DOUBLE}, </if>
			<if test="remark!= null">  remark = #{remark,jdbcType=VARCHAR}, </if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- **删除定义** -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from base_product
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<delete id="deleteByCode" parameterType="java.lang.String">
		delete from base_product
		where product_code = #{productCode,jdbcType=VARCHAR}
	</delete>
	
	<!-- **常量定义** -->
	<sql id="All_Column_List">id,sys_code,<!-- is_reduction,design_plan_id, -->spelling_flower_file_id,split_textures_info,creator,gmt_create,modifier,gmt_modified,is_deleted,product_code,product_name,decoration_id,spaceComon_id,designer_id,modeling_id,min_height,full_pave_length,rendering_id,brand_id,parent_id,material_file_id,pro_style_id,product_spec,color_id,product_length,product_width,product_height,sale_price,pic_id,model_id,product_desc,pic_ids,material_pic_ids,material3d_pic_ids,house_type_values,product_type_value,product_type_mark,product_small_type_mark,product_short_code,original_product_code,bm_ids,code_number,designTemplet_id,u3dmodel_Id,ipad_u3dmodel_id,ios_u3dmodel_id,android_u3dmodel_id,macbook_u3dmodel_id,windows_u3dmodel_id,merge_product_ids,putaway_modified,date_att2,product_small_type_value,putaway_state,num_att3,num_att4,remark,product_model_number,sale_price_value,product_material_desc,colors_long_code,base_product.fbx_state,base_product.fbx_file_id,base_product.fbx_texture,base_product.config_id,product_style_id_info,style_id,product_smallpox_identify_str
	</sql>
	
	<!-- **结果定义** -->
	<resultMap id="AllResultMap" type="com.nork.product.model.BaseProduct">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result  column="spelling_flower_file_id" property="spellingFlowerFileId" jdbcType="INTEGER" />
		<result  column="sys_code" property="sysCode" jdbcType="VARCHAR" />
		<result  column="split_textures_info" property="splitTexturesInfo" jdbcType="VARCHAR" />
		<result  column="creator" property="creator" jdbcType="VARCHAR" />
		<result  column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result  column="modifier" property="modifier" jdbcType="VARCHAR" />
		<result  column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
		<result  column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result  column="product_code" property="productCode" jdbcType="VARCHAR" />
		<result  column="product_name" property="productName" jdbcType="VARCHAR" />
		<result  column="brand_id" property="brandId" jdbcType="INTEGER" />
		<result  column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result  column="material_file_id" property="materialFileId" jdbcType="INTEGER" />
		<result  column="spaceComon_id" property="spaceComonId" jdbcType="INTEGER" />
		<result  column="pro_style_id" property="proStyleId" jdbcType="INTEGER" />
		<result  column="product_spec" property="productSpec" jdbcType="VARCHAR" />
		<result  column="color_id" property="colorId" jdbcType="INTEGER" />
		<result  column="product_length" property="productLength" jdbcType="VARCHAR" />
		<result  column="product_width" property="productWidth" jdbcType="VARCHAR" />
		<result  column="product_height" property="productHeight" jdbcType="VARCHAR" />
		<result  column="min_height" property="minHeight" jdbcType="VARCHAR" />
		<result  column="full_pave_length" property="fullPaveLength" jdbcType="VARCHAR" />
		<result  column="sale_price" property="salePrice" jdbcType="DOUBLE" />
		<result  column="pic_id" property="picId" jdbcType="INTEGER" />
		<result  column="model_id" property="modelId" jdbcType="INTEGER" />
		<result  column="product_desc" property="productDesc" jdbcType="VARCHAR" />
		<result  column="pic_ids" property="picIds" jdbcType="VARCHAR" />
		<result  column="material_pic_ids" property="materialPicIds" jdbcType="VARCHAR" />
		<result  column="material3d_pic_ids" property="material3dPicIds" jdbcType="VARCHAR" />
		<result  column="house_type_values" property="houseTypeValues" jdbcType="VARCHAR" />
		<result  column="product_type_value" property="productTypeValue" jdbcType="VARCHAR" />
		<result  column="product_type_mark" property="productTypeMark" jdbcType="VARCHAR" />
		<result  column="product_small_type_mark" property="productSmallTypeMark" jdbcType="VARCHAR" />
		<result  column="product_short_code" property="productShortCode" jdbcType="VARCHAR" />
		<result  column="original_product_code" property="originalProductCode" jdbcType="VARCHAR" />
		<result  column="bm_ids" property="bmIds" jdbcType="VARCHAR" />
		<result  column="code_number" property="codeNumber" jdbcType="INTEGER" />
		<result  column="designTemplet_id" property="designTempletId" jdbcType="INTEGER" />
		<result  column="u3dmodel_Id" property="u3dModelId" jdbcType="VARCHAR" />
		<result  column="ipad_u3dmodel_id" property="ipadU3dModelId" jdbcType="INTEGER" />
		<result  column="ios_u3dmodel_id" property="iosU3dModelId" jdbcType="INTEGER" />
		<result  column="android_u3dmodel_id" property="androidU3dModelId" jdbcType="INTEGER" />
		<result  column="macbook_u3dmodel_id" property="macBookU3dModelId" jdbcType="INTEGER" />
		<result  column="windows_u3dmodel_id" property="windowsU3dModelId" jdbcType="INTEGER" />
		<result  column="merge_product_ids" property="mergeProductIds" jdbcType="VARCHAR" />
		<result  column="decoration_id" property="decorationId" jdbcType="VARCHAR" />
		<result  column="designer_id" property="designerId" jdbcType="INTEGER" />
		<result  column="modeling_id" property="modelingId" jdbcType="INTEGER" />
		<result  column="rendering_id" property="renderingId" jdbcType="INTEGER" />
		<result  column="putaway_modified" property="putawayModified" jdbcType="TIMESTAMP" />
		<result  column="date_att2" property="dateAtt2" jdbcType="TIMESTAMP" />
		<result  column="product_small_type_value" property="productSmallTypeValue" jdbcType="INTEGER" />
		<result  column="putaway_state" property="putawayState" jdbcType="INTEGER" />
		<result column="fbx_state" property="fbxState" jdbcType="INTEGER" />
		<result column="fbx_file_id" property="fbxFileId" jdbcType="INTEGER" />
		<result column="fbx_texture" property="fbxTexture" jdbcType="VARCHAR" />
		<result column="config_id" property="configId" jdbcType="INTEGER" />
		<result column="file_path" property="filePath" jdbcType="VARCHAR" />
		<result  column="num_att3" property="numAtt3" jdbcType="DOUBLE" />
		<result  column="num_att4" property="numAtt4" jdbcType="DOUBLE" />
		<result  column="remark" property="remark" jdbcType="VARCHAR" />
		<result  column="product_material_desc" property="productMaterialDesc" jdbcType="VARCHAR" />
		<result  column="product_model_number" property="productModelNumber" jdbcType="VARCHAR" />
		<result  column="sale_price_value" property="salePriceValue" jdbcType="INTEGER" />
		<result  column="colors_long_code" property="colorsLongCode" jdbcType="VARCHAR" />
		<result  column="product_style_id_info" property="productStyleIdInfo" jdbcType="VARCHAR" />
		<result  column="style_id" property="styleId" jdbcType="INTEGER" />
		<result  column="prop_info" property="propInfo" jdbcType="VARCHAR" />
		<result column="product_type_code" property="productTypeCode" jdbcType="VARCHAR"/>
		<result column="product_small_type_code" property="productSmallTypeCode" jdbcType="VARCHAR"/>
		<result  column="product_index" property="productIndex" jdbcType="INTEGER" />
		<result  column="design_plan_product_id" property="designPlanProductId" jdbcType="INTEGER" />
		<result  column="att1" property="att1" jdbcType="VARCHAR" />
		<result  column="product_smallpox_identify_str" property="productSmallpoxIdentify" jdbcType="VARCHAR" />
		<result  column="big_type_valuekey" property="bigTypeValueKey" jdbcType="VARCHAR" />
		<result  column="small_type_valuekey" property="smallTypeValueKey" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- **结果定义** -->
	<resultMap id="AllResultMap2" type="com.nork.product.model.BaseProduct">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result  column="spelling_flower_file_id" property="spellingFlowerFileId" jdbcType="INTEGER" />
		<result  column="sys_code" property="sysCode" jdbcType="VARCHAR" />
		<result  column="split_textures_info" property="splitTexturesInfo" jdbcType="VARCHAR" />
		<result  column="creator" property="creator" jdbcType="VARCHAR" />
		<result  column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result  column="modifier" property="modifier" jdbcType="VARCHAR" />
		<result  column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
		<result  column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result  column="product_code" property="productCode" jdbcType="VARCHAR" />
		<result  column="product_name" property="productName" jdbcType="VARCHAR" />
		<result  column="brand_id" property="brandId" jdbcType="INTEGER" />
		<result  column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result  column="material_file_id" property="materialFileId" jdbcType="INTEGER" />
		<result  column="spaceComon_id" property="spaceComonId" jdbcType="INTEGER" />
		<result  column="pro_style_id" property="proStyleId" jdbcType="INTEGER" />
		<result  column="product_spec" property="productSpec" jdbcType="VARCHAR" />
		<result  column="color_id" property="colorId" jdbcType="INTEGER" />
		<result  column="product_length" property="productLength" jdbcType="VARCHAR" />
		<result  column="product_width" property="productWidth" jdbcType="VARCHAR" />
		<result  column="product_height" property="productHeight" jdbcType="VARCHAR" />
		<result  column="min_height" property="minHeight" jdbcType="VARCHAR" />
		<result  column="full_pave_length" property="fullPaveLength" jdbcType="VARCHAR" />
		<result  column="sale_price" property="salePrice" jdbcType="DOUBLE" />
		<result  column="pic_id" property="picId" jdbcType="INTEGER" />
		<result  column="model_id" property="modelId" jdbcType="INTEGER" />
		<result  column="product_desc" property="productDesc" jdbcType="VARCHAR" />
		<result  column="pic_ids" property="picIds" jdbcType="VARCHAR" />
		<result  column="material_pic_ids" property="materialPicIds" jdbcType="VARCHAR" />
		<result  column="material3d_pic_ids" property="material3dPicIds" jdbcType="VARCHAR" />
		<result  column="house_type_values" property="houseTypeValues" jdbcType="VARCHAR" />
		<result  column="product_type_value" property="productTypeValue" jdbcType="VARCHAR" />
		<result  column="product_type_mark" property="productTypeMark" jdbcType="VARCHAR" />
		<result  column="product_small_type_mark" property="productSmallTypeMark" jdbcType="VARCHAR" />
		<result  column="product_short_code" property="productShortCode" jdbcType="VARCHAR" />
		<result  column="original_product_code" property="originalProductCode" jdbcType="VARCHAR" />
		<result  column="bm_ids" property="bmIds" jdbcType="VARCHAR" />
		<result  column="code_number" property="codeNumber" jdbcType="INTEGER" />
		<result  column="designTemplet_id" property="designTempletId" jdbcType="INTEGER" />
		<result  column="u3dmodel_Id" property="u3dModelId" jdbcType="VARCHAR" />
		<result  column="ipad_u3dmodel_id" property="ipadU3dModelId" jdbcType="INTEGER" />
		<result  column="ios_u3dmodel_id" property="iosU3dModelId" jdbcType="INTEGER" />
		<result  column="android_u3dmodel_id" property="androidU3dModelId" jdbcType="INTEGER" />
		<result  column="macbook_u3dmodel_id" property="macBookU3dModelId" jdbcType="INTEGER" />
		<result  column="windows_u3dmodel_id" property="windowsU3dModelId" jdbcType="INTEGER" />
		<result  column="merge_product_ids" property="mergeProductIds" jdbcType="VARCHAR" />
		<result  column="decoration_id" property="decorationId" jdbcType="VARCHAR" />
		<result  column="designer_id" property="designerId" jdbcType="INTEGER" />
		<result  column="modeling_id" property="modelingId" jdbcType="INTEGER" />
		<result  column="rendering_id" property="renderingId" jdbcType="INTEGER" />
		<result  column="putaway_modified" property="putawayModified" jdbcType="TIMESTAMP" />
		<result  column="date_att2" property="dateAtt2" jdbcType="TIMESTAMP" />
		<result  column="product_small_type_value" property="productSmallTypeValue" jdbcType="INTEGER" />
		<result  column="putaway_state" property="putawayState" jdbcType="INTEGER" />
		<result column="fbx_state" property="fbxState" jdbcType="INTEGER" />
		<result column="fbx_file_id" property="fbxFileId" jdbcType="INTEGER" />
		<result column="fbx_texture" property="fbxTexture" jdbcType="VARCHAR" />
		<result column="config_id" property="configId" jdbcType="INTEGER" />
		<result column="file_path" property="filePath" jdbcType="VARCHAR" />
		<result  column="num_att3" property="numAtt3" jdbcType="DOUBLE" />
		<result  column="num_att4" property="numAtt4" jdbcType="DOUBLE" />
		<result  column="remark" property="remark" jdbcType="VARCHAR" />
		<result  column="product_material_desc" property="productMaterialDesc" jdbcType="VARCHAR" />
		<result  column="product_model_number" property="productModelNumber" jdbcType="VARCHAR" />
		<result  column="sale_price_value" property="salePriceValue" jdbcType="INTEGER" />
		<result  column="colors_long_code" property="colorsLongCode" jdbcType="VARCHAR" />
		<result  column="product_style_id_info" property="productStyleIdInfo" jdbcType="VARCHAR" />
		<result  column="style_id" property="styleId" jdbcType="INTEGER" />
		<result  column="prop_info" property="propInfo" jdbcType="VARCHAR" />
		<result  column="materialConfigPath" property="materialConfigPath" jdbcType="VARCHAR" />
		<result  column="dicSmallTypeValue" property="dicSmallTypeValue" jdbcType="INTEGER" />
		<result  column="product_smallpox_identify_str" property="productSmallpoxIdentify" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectByProductCode" resultMap="AllResultMap" parameterType="java.lang.String">
			select <include refid="All_Column_List"/>
			from base_product where product_code = #{code,jdbcType=VARCHAR}
	</select>
	
	
	<!-- **查询定义** -->
	<!-- 按主键查询 -->
	<select id="selectByPrimaryKey" resultMap="AllResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="All_Column_List" />
		from base_product
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- 按主键批量查询 -->
	<select id="getBatchData" resultMap="AllResultMap"  parameterType="java.util.List">
		select 
		<include refid="All_Column_List" />
		from base_product WHERE id in 
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
 
	
	<select id="selectOtherCount" resultType="int"
		parameterType="com.nork.product.model.search.BaseProductSearch">
		select count(*)
		from base_product, 
		res_file WHERE 1=1 AND base_product.is_deleted = 0 AND base_product.`fbx_file_id` = res_file.`id` and base_product.fbx_state = 0
		<if test="spaceComonId !=  null  "> and spaceComon_id = #{spaceComonId,jdbcType=INTEGER} </if>
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code = #{sysCode,jdbcType=VARCHAR} </if>
		 <if test="spellingFlowerFileId!= null">and spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}  </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code like
			CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code like
			CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		</if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code like
			CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and
			#{sysCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="creator !=  null and creator !=  ''   "> and creator = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator like
			CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator like
			CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		</if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator like
			CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		</if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and
			#{creatorEnd,jdbcType=VARCHAR}
		</if>
		<if test="gmtCreate !=  null  ">
			and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
		</if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between
			#{gmtCreateStart,jdbcType=TIMESTAMP} and
			#{gmtCreateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier like
			CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier like
			CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		</if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier like
			CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		</if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and
			#{modifierEnd,jdbcType=VARCHAR}
		</if>
		<if test="gmtModified !=  null  ">
			and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
		</if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between
			#{gmtModifiedStart,jdbcType=TIMESTAMP} and
			#{gmtModifiedEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="isDeleted !=  null  "> and base_product.is_deleted =
			#{isDeleted,jdbcType=INTEGER} </if>
		<if test="productCode !=  null and productCode !=  ''   "> and product_code = #{productCode,jdbcType=VARCHAR} </if>
		<if test="sch_ProductCode_ !=  null and sch_ProductCode_ !=  ''   ">
			and product_code like
			CONCAT(CONCAT('%',#{sch_ProductCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductCode !=  null and sch_ProductCode !=  ''   ">
			and product_code like
			CONCAT('%',#{sch_ProductCode,jdbcType=VARCHAR})
		</if>
		<if test="schProductCode_ !=  null and schProductCode_ !=  ''   ">
			and product_code like
			CONCAT(#{schProductCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productCodeStart !=  null and productCodeEnd!= null  ">
			and product_code between
			#{productCodeStart,jdbcType=VARCHAR} and
			#{productCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="productName !=  null and productName !=  ''   ">
			and product_name like
			CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductName_ !=  null and sch_ProductName_ !=  ''   ">
			and product_name like
			CONCAT(CONCAT('%',#{sch_ProductName_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductName !=  null and sch_ProductName !=  ''   ">
			and product_name like
			CONCAT('%',#{sch_ProductName,jdbcType=VARCHAR})
		</if>
		<if test="schProductName_ !=  null and schProductName_ !=  ''   ">
			and product_name like
			CONCAT(#{schProductName_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productNameStart !=  null and productNameEnd!= null  ">
			and product_name between
			#{productNameStart,jdbcType=VARCHAR} and
			#{productNameEnd,jdbcType=VARCHAR}
		</if>
		<if test="brandId !=  null  "> and brand_id = #{brandId,jdbcType=INTEGER} </if>
		<if test="parentId !=  null  "> and parent_id = #{parentId,jdbcType=INTEGER} </if>
		<if test="materialFileId !=  null  "> and material_file_id = #{materialFileId,jdbcType=INTEGER}
		</if>
		<if test="proStyleId !=  null  "> and pro_style_id = #{proStyleId,jdbcType=INTEGER} </if>
		<if test="productSpec !=  null and productSpec !=  ''   "> and product_spec = #{productSpec,jdbcType=VARCHAR} </if>
		<if test="sch_ProductSpec_ !=  null and sch_ProductSpec_ !=  ''   ">
			and product_spec like
			CONCAT(CONCAT('%',#{sch_ProductSpec_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductSpec !=  null and sch_ProductSpec !=  ''   ">
			and product_spec like
			CONCAT('%',#{sch_ProductSpec,jdbcType=VARCHAR})
		</if>
		<if test="schProductSpec_ !=  null and schProductSpec_ !=  ''   ">
			and product_spec like
			CONCAT(#{schProductSpec_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productSpecStart !=  null and productSpecEnd!= null  ">
			and product_spec between
			#{productSpecStart,jdbcType=VARCHAR} and
			#{productSpecEnd,jdbcType=VARCHAR}
		</if>
		<if test="colorId !=  null  "> and color_id = #{colorId,jdbcType=INTEGER} </if>
		<if test="productLength !=  null and productLength !=  ''   "> and product_length = #{productLength,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductLength_ !=  null and sch_ProductLength_ !=  ''   ">
			and product_length like
			CONCAT(CONCAT('%',#{sch_ProductLength_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductLength !=  null and sch_ProductLength !=  ''   ">
			and product_length like
			CONCAT('%',#{sch_ProductLength,jdbcType=VARCHAR})
		</if>
		<if test="schProductLength_ !=  null and schProductLength_ !=  ''   ">
			and product_length like
			CONCAT(#{schProductLength_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productLengthStart !=  null and productLengthEnd!= null  ">
			and product_length between
			#{productLengthStart,jdbcType=VARCHAR} and
			#{productLengthEnd,jdbcType=VARCHAR}
		</if>
		<if test="productWidth !=  null and productWidth !=  ''   "> and product_width = #{productWidth,jdbcType=VARCHAR} </if>
		<if test="sch_ProductWidth_ !=  null and sch_ProductWidth_ !=  ''   ">
			and product_width like
			CONCAT(CONCAT('%',#{sch_ProductWidth_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductWidth !=  null and sch_ProductWidth !=  ''   ">
			and product_width like
			CONCAT('%',#{sch_ProductWidth,jdbcType=VARCHAR})
		</if>
		<if test="schProductWidth_ !=  null and schProductWidth_ !=  ''   ">
			and product_width like
			CONCAT(#{schProductWidth_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productWidthStart !=  null and productWidthEnd!= null  ">
			and product_width between
			#{productWidthStart,jdbcType=VARCHAR} and
			#{productWidthEnd,jdbcType=VARCHAR}
		</if>
		<if test="productHeight !=  null and productHeight !=  ''   "> and product_height = #{productHeight,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductHeight_ !=  null and sch_ProductHeight_ !=  ''   ">
			and product_height like
			CONCAT(CONCAT('%',#{sch_ProductHeight_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductHeight !=  null and sch_ProductHeight !=  ''   ">
			and product_height like
			CONCAT('%',#{sch_ProductHeight,jdbcType=VARCHAR})
		</if>
		<if test="schProductHeight_ !=  null and schProductHeight_ !=  ''   ">
			and product_height like
			CONCAT(#{schProductHeight_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productHeightStart !=  null and productHeightEnd!= null  ">
			and product_height between
			#{productHeightStart,jdbcType=VARCHAR} and
			#{productHeightEnd,jdbcType=VARCHAR}
		</if>
		<if test="salePrice !=  null  "> and sale_price = #{salePrice,jdbcType=DOUBLE} </if>
		<if test="picId !=  null  "> and pic_id = #{picId,jdbcType=INTEGER} </if>
		<if test="modelId !=  null  "> and model_id = #{modelId,jdbcType=INTEGER} </if>
		<if test="productDesc !=  null and productDesc !=  ''   "> and product_desc = #{productDesc,jdbcType=VARCHAR} </if>
		<if test="sch_ProductDesc_ !=  null and sch_ProductDesc_ !=  ''   ">
			and product_desc like
			CONCAT(CONCAT('%',#{sch_ProductDesc_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductDesc !=  null and sch_ProductDesc !=  ''   ">
			and product_desc like
			CONCAT('%',#{sch_ProductDesc,jdbcType=VARCHAR})
		</if>
		<if test="schProductDesc_ !=  null and schProductDesc_ !=  ''   ">
			and product_desc like
			CONCAT(#{schProductDesc_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productDescStart !=  null and productDescEnd!= null  ">
			and product_desc between
			#{productDescStart,jdbcType=VARCHAR} and
			#{productDescEnd,jdbcType=VARCHAR}
		</if>
		<if test="picIds !=  null and picIds !=  ''   "> and pic_ids = #{picIds,jdbcType=VARCHAR} </if>
		<if test="sch_PicIds_ !=  null and sch_PicIds_ !=  ''   ">
			and pic_ids like
			CONCAT(CONCAT('%',#{sch_PicIds_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_PicIds !=  null and sch_PicIds !=  ''   ">
			and pic_ids like
			CONCAT('%',#{sch_PicIds,jdbcType=VARCHAR})
		</if>
		<if test="schPicIds_ !=  null and schPicIds_ !=  ''   ">
			and pic_ids like
			CONCAT(#{schPicIds_,jdbcType=VARCHAR},'%')
		</if>
		<if test="picIdsStart !=  null and picIdsEnd!= null  ">
			and pic_ids between #{picIdsStart,jdbcType=VARCHAR} and
			#{picIdsEnd,jdbcType=VARCHAR}
		</if>
		<if test="material3dPicIds !=  null and material3dPicIds !=  ''   "> and material3d_pic_ids =
			#{material3dPicIds,jdbcType=VARCHAR}
		</if>
		<if test="sch_MaterialPicIds_ !=  null and sch_MaterialPicIds_ !=  ''   ">
			and material_pic_ids like
			CONCAT(CONCAT('%',#{sch_MaterialPicIds_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_MaterialPicIds !=  null and sch_MaterialPicIds !=  ''   ">
			and material_pic_ids like
			CONCAT('%',#{sch_MaterialPicIds,jdbcType=VARCHAR})
		</if>
		<if test="schMaterialPicIds_ !=  null and schMaterialPicIds_ !=  ''   ">
			and material_pic_ids like
			CONCAT(#{schMaterialPicIds_,jdbcType=VARCHAR},'%')
		</if>
		<if test="materialPicIdsStart !=  null and materialPicIdsEnd!= null  ">
			and material_pic_ids between
			#{materialPicIdsStart,jdbcType=VARCHAR} and
			#{materialPicIdsEnd,jdbcType=VARCHAR}
		</if>
		<if test="houseTypeValues !=  null and houseTypeValues !=  ''   "> and house_type_values =
			#{houseTypeValues,jdbcType=VARCHAR}
		</if>
		<if test="sch_HouseTypeValues_ !=  null and sch_HouseTypeValues_ !=  ''   ">
			and house_type_values like
			CONCAT(CONCAT('%',#{sch_HouseTypeValues_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_HouseTypeValues !=  null and sch_HouseTypeValues !=  ''   ">
			and house_type_values like
			CONCAT('%',#{sch_HouseTypeValues,jdbcType=VARCHAR})
		</if>
		<if test="schHouseTypeValues_ !=  null and schHouseTypeValues_ !=  ''   ">
			and house_type_values like
			CONCAT(#{schHouseTypeValues_,jdbcType=VARCHAR},'%')
		</if>
		<if test="houseTypeValuesStart !=  null and  houseTypeValuesEnd!= null  ">
			and house_type_values between
			#{houseTypeValuesStart,jdbcType=VARCHAR} and
			#{houseTypeValuesEnd,jdbcType=VARCHAR}
		</if>
		<if test="inHouseType !=  null and inHouseType !=  ''   ">
			and POSITION(CONCAT(CONCAT(',',#{inHouseType}),',') IN
			CONCAT(CONCAT(',',house_type_values),',')) >0
		</if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and product_type_value =
			#{productTypeValue,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductTypeValue_ !=  null and sch_ProductTypeValue_ !=  ''   ">
			and product_type_value like
			CONCAT(CONCAT('%',#{sch_ProductTypeValue_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductTypeValue !=  null and sch_ProductTypeValue !=  ''   ">
			and product_type_value like
			CONCAT('%',#{sch_ProductTypeValue,jdbcType=VARCHAR})
		</if>
		<if test="schProductTypeValue_ !=  null and schProductTypeValue_ !=  ''   ">
			and product_type_value like
			CONCAT(#{schProductTypeValue_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productTypeValueStart !=  null and productTypeValueEnd!= null  ">
			and product_type_value between
			#{productTypeValueStart,jdbcType=VARCHAR} and
			#{productTypeValueEnd,jdbcType=VARCHAR}
		</if>

		<if test="productTypeMark !=  null and productTypeMark !=  ''   "> and product_type_mark =
			#{productTypeMark,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductTypeMark_ !=  null and sch_ProductTypeMark_ !=  ''   ">
			and product_type_value like
			CONCAT(CONCAT('%',#{sch_ProductTypeMark_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductTypeMark !=  null and sch_ProductTypeMark !=  ''   ">
			and product_type_mark like
			CONCAT('%',#{sch_ProductTypeMark,jdbcType=VARCHAR})
		</if>
		<if test="schProductTypeMark_ !=  null and schProductTypeMark_ !=  ''   ">
			and product_type_mark like
			CONCAT(#{schProductTypeMark_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productTypeMarkStart !=  null and productTypeMarkEnd!= null  ">
			and product_type_mark between
			#{productTypeMarkStart,jdbcType=VARCHAR} and
			#{productTypeMarkEnd,jdbcType=VARCHAR}
		</if>
		<if test="productSmallTypeMark !=  null and productSmallTypeMark !=  ''   "> and product_small_type_mark =
			#{productSmallTypeMark,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductSmallTypeMark_ !=  null and sch_ProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark like
			CONCAT(CONCAT('%',#{sch_ProductSmallTypeMark_,jdbcType=VARCHAR}),'%')
		</if>
		<if
			test="sch_ProductSmallTypeMark !=  null and sch_ProductSmallTypeMark !=  ''   ">
			and product_small_type_mark like
			CONCAT('%',#{sch_ProductSmallTypeMark,jdbcType=VARCHAR})
		</if>
		<if
			test="schProductSmallTypeMark_ !=  null and schProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark like
			CONCAT(#{schProductSmallTypeMark_,jdbcType=VARCHAR},'%')
		</if>
		<if
			test="productSmallTypeMarkStart !=  null and productSmallTypeMarkEnd!= null  ">
			and product_small_type_mark between
			#{productSmallTypeMarkStart,jdbcType=VARCHAR} and
			#{productSmallTypeMarkEnd,jdbcType=VARCHAR}
		</if>

		<if test="productShortCode !=  null and productShortCode !=  ''   "> and product_short_code =
			#{productShortCode,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductShortCode_ !=  null and sch_ProductShortCode_ !=  ''   ">
			and product_short_code like
			CONCAT(CONCAT('%',#{sch_ProductShortCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductShortCode !=  null and sch_ProductShortCode !=  ''   ">
			and product_short_code like
			CONCAT('%',#{sch_ProductShortCode,jdbcType=VARCHAR})
		</if>
		<if test="schProductShortCode_ !=  null and schProductShortCode_ !=  ''   ">
			and product_short_code like
			CONCAT(#{schProductShortCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productShortCodeStart !=  null and productShortCodeEnd!= null  ">
			and product_short_code between
			#{productShortCodeStart,jdbcType=VARCHAR} and
			#{productShortCodeEnd,jdbcType=VARCHAR}
		</if>

		<if test="bmIds !=  null and bmIds !=  ''   "> and bm_ids = #{bmIds,jdbcType=VARCHAR} </if>
		<if test="originalProductCode !=  null and originalProductCode !=  ''   "> and original_product_code =
			#{originalProductCode,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_OriginalProductCode_ !=  null and sch_OriginalProductCode_ !=  ''   ">
			and original_product_code like
			CONCAT(CONCAT('%',#{sch_OriginalProductCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if
			test="sch_OriginalProductCode !=  null and sch_OriginalProductCode !=  ''   ">
			and original_product_code like
			CONCAT('%',#{sch_OriginalProductCode,jdbcType=VARCHAR})
		</if>
		<if
			test="schOriginalProductCode_ !=  null and schOriginalProductCode_ !=  ''   ">
			and original_product_code like
			CONCAT(#{schOriginalProductCode_,jdbcType=VARCHAR},'%')
		</if>
		<if
			test="originalProductCodeStart !=  null and originalProductCodeEnd!= null  ">
			and original_product_code between
			#{originalProductCodeStart,jdbcType=VARCHAR} and
			#{originalProductCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="codeNumber!= null"> and code_number = #{codeNumber,jdbcType=INTEGER} </if>
		<if test="designTempletId!= null"> and designTemplet_id =
			#{designTempletId,jdbcType=INTEGER}
		</if>
		<if test="u3dModelId !=  null and u3dModelId !=  ''   "> and u3dmodel_Id = #{u3dModelId,jdbcType=VARCHAR} </if>
		<if test="sch_U3dModelId_ !=  null and sch_U3dModelId_ !=  ''   ">
			and u3dmodel_Id like
			CONCAT(CONCAT('%',#{sch_U3dModelId_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_U3dModelId !=  null and sch_U3dModelId !=  ''   ">
			and u3dmodel_Id like
			CONCAT('%',#{sch_U3dModelId,jdbcType=VARCHAR})
		</if>
		<if test="schU3dModelId_ !=  null and schU3dModelId_ !=  ''   ">
			and u3dmodel_Id like
			CONCAT(#{schU3dModelId_,jdbcType=VARCHAR},'%')
		</if>
		<if test="u3dModelIdStart !=  null and u3dModelIdEnd!= null  ">
			and u3dmodel_Id between
			#{u3dModelIdStart,jdbcType=VARCHAR} and
			#{u3dModelIdEnd,jdbcType=VARCHAR}
		</if>
		<if test="mergeProductIds !=  null and mergeProductIds !=  ''   "> and merge_product_ids =
			#{mergeProductIds,jdbcType=VARCHAR}
		</if>

		<if test="dateAtt1 !=  null  ">
			and date_att1 = #{dateAtt1,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt1Start !=  null and dateAtt1End!= null  ">
			and date_att1 between #{dateAtt1Start,jdbcType=TIMESTAMP}
			and #{dateAtt1End,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt2 !=  null  ">
			and date_att2 = #{dateAtt2,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt2Start !=  null and dateAtt2End!= null  ">
			and date_att2 between #{dateAtt2Start,jdbcType=TIMESTAMP}
			and #{dateAtt2End,jdbcType=TIMESTAMP}
		</if>
		<if test="productSmallTypeValue !=  null  "> and product_small_type_value =
			#{productSmallTypeValue,jdbcType=INTEGER}
		</if>
		<if test="putawayState !=  null  "> and putaway_state = #{putawayState,jdbcType=INTEGER} </if>
		<if test="fbxState!= null"> and fbx_state = #{fbxState,jdbcType=INTEGER} </if>
		<if test="fbxFileId!= null"> and fbx_file_id = #{fbxFileId,jdbcType=INTEGER} </if>
		<if test="fbxTexture!= null"> and fbx_texture = #{fbxTexture,jdbcType=VARCHAR} </if>
		<if test="numAtt3 !=  null  "> and num_att3 = #{numAtt3,jdbcType=DOUBLE} </if>
		<if test="numAtt4 !=  null  "> and num_att4 = #{numAtt4,jdbcType=DOUBLE} </if>
		<if test="remark !=  null and remark !=  ''   "> and remark = #{remark,jdbcType=VARCHAR} </if>
		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark like
			CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		</if>
		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		</if>
		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and
			#{remarkEnd,jdbcType=VARCHAR}
		</if>
		<if test="productModelNumber!= null"> product_model_number =
			#{productModelNumber,jdbcType=VARCHAR},
		</if>
	</select>
	
	<select id="selectOtherPaginatedList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.search.BaseProductSearch">
		select
		<include refid="All_Column_List_Pro" />
		from base_product,res_file WHERE 1=1 AND base_product.is_deleted = 0 AND base_product.`fbx_file_id` = res_file.`id` and fbx_state = 0
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code = #{sysCode,jdbcType=VARCHAR} </if>
		 <if test="spellingFlowerFileId!= null">and spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}  </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code like
			CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code like
			CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		</if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code like
			CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and
			#{sysCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="creator !=  null and creator !=  ''   "> and creator = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator like
			CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator like
			CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		</if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator like
			CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		</if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and
			#{creatorEnd,jdbcType=VARCHAR}
		</if>
		<if test="gmtCreate !=  null  ">
			and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
		</if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between
			#{gmtCreateStart,jdbcType=TIMESTAMP} and
			#{gmtCreateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier like
			CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier like
			CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		</if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier like
			CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		</if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and
			#{modifierEnd,jdbcType=VARCHAR}
		</if>
		<if test="gmtModified !=  null  ">
			and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
		</if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between
			#{gmtModifiedStart,jdbcType=TIMESTAMP} and
			#{gmtModifiedEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="isDeleted !=  null  "> and base_product.is_deleted =
			#{isDeleted,jdbcType=INTEGER} </if>
		<if test="spaceComonId !=  null  "> and spaceComon_id = #{spaceComonId,jdbcType=INTEGER} </if>
		<if test="productCode !=  null and productCode !=  ''   "> and product_code = #{productCode,jdbcType=VARCHAR} </if>
		<if test="sch_ProductCode_ !=  null and sch_ProductCode_ !=  ''   ">
			and product_code like
			CONCAT(CONCAT('%',#{sch_ProductCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductCode !=  null and sch_ProductCode !=  ''   ">
			and product_code like
			CONCAT('%',#{sch_ProductCode,jdbcType=VARCHAR})
		</if>
		<if test="schProductCode_ !=  null and schProductCode_ !=  ''   ">
			and product_code like
			CONCAT(#{schProductCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productCodeStart !=  null and productCodeEnd!= null  ">
			and product_code between
			#{productCodeStart,jdbcType=VARCHAR} and
			#{productCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="productName !=  null and productName !=  ''   ">
			and product_name like
			CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR} ),'%')
		</if>
		<if test="sch_ProductName_ !=  null and sch_ProductName_ !=  ''   ">
			and product_name like
			CONCAT(CONCAT('%',#{sch_ProductName_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductName !=  null and sch_ProductName !=  ''   ">
			and product_name like
			CONCAT('%',#{sch_ProductName,jdbcType=VARCHAR})
		</if>
		<if test="schProductName_ !=  null and schProductName_ !=  ''   ">
			and product_name like
			CONCAT(#{schProductName_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productNameStart !=  null and productNameEnd!= null  ">
			and product_name between
			#{productNameStart,jdbcType=VARCHAR} and
			#{productNameEnd,jdbcType=VARCHAR}
		</if>
		<if test="brandId !=  null  "> and brand_id = #{brandId,jdbcType=INTEGER} </if>
		<if test="parentId !=  null  "> and parent_id = #{parentId,jdbcType=INTEGER} </if>
		<if test="materialFileId !=  null  "> and material_file_id = #{materialFileId,jdbcType=INTEGER}
		</if>
		<if test="proStyleId !=  null  "> and pro_style_id = #{proStyleId,jdbcType=INTEGER} </if>
		<if test="productSpec !=  null and productSpec !=  ''   "> and product_spec = #{productSpec,jdbcType=VARCHAR} </if>
		<if test="sch_ProductSpec_ !=  null and sch_ProductSpec_ !=  ''   ">
			and product_spec like
			CONCAT(CONCAT('%',#{sch_ProductSpec_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductSpec !=  null and sch_ProductSpec !=  ''   ">
			and product_spec like
			CONCAT('%',#{sch_ProductSpec,jdbcType=VARCHAR})
		</if>
		<if test="schProductSpec_ !=  null and schProductSpec_ !=  ''   ">
			and product_spec like
			CONCAT(#{schProductSpec_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productSpecStart !=  null and productSpecEnd!= null  ">
			and product_spec between
			#{productSpecStart,jdbcType=VARCHAR} and
			#{productSpecEnd,jdbcType=VARCHAR}
		</if>
		<if test="colorId !=  null  "> and color_id = #{colorId,jdbcType=INTEGER} </if>
		<if test="productLength !=  null and productLength !=  ''   "> and product_length = #{productLength,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductLength_ !=  null and sch_ProductLength_ !=  ''   ">
			and product_length like
			CONCAT(CONCAT('%',#{sch_ProductLength_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductLength !=  null and sch_ProductLength !=  ''   ">
			and product_length like
			CONCAT('%',#{sch_ProductLength,jdbcType=VARCHAR})
		</if>
		<if test="schProductLength_ !=  null and schProductLength_ !=  ''   ">
			and product_length like
			CONCAT(#{schProductLength_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productLengthStart !=  null and productLengthEnd!= null  ">
			and product_length between
			#{productLengthStart,jdbcType=VARCHAR} and
			#{productLengthEnd,jdbcType=VARCHAR}
		</if>
		<if test="productWidth !=  null and productWidth !=  ''   "> and product_width = #{productWidth,jdbcType=VARCHAR} </if>
		<if test="sch_ProductWidth_ !=  null and sch_ProductWidth_ !=  ''   ">
			and product_width like
			CONCAT(CONCAT('%',#{sch_ProductWidth_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductWidth !=  null and sch_ProductWidth !=  ''   ">
			and product_width like
			CONCAT('%',#{sch_ProductWidth,jdbcType=VARCHAR})
		</if>
		<if test="schProductWidth_ !=  null and schProductWidth_ !=  ''   ">
			and product_width like
			CONCAT(#{schProductWidth_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productWidthStart !=  null and productWidthEnd!= null  ">
			and product_width between
			#{productWidthStart,jdbcType=VARCHAR} and
			#{productWidthEnd,jdbcType=VARCHAR}
		</if>
		<if test="productHeight !=  null and productHeight !=  ''   "> and product_height = #{productHeight,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductHeight_ !=  null and sch_ProductHeight_ !=  ''   ">
			and product_height like
			CONCAT(CONCAT('%',#{sch_ProductHeight_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductHeight !=  null and sch_ProductHeight !=  ''   ">
			and product_height like
			CONCAT('%',#{sch_ProductHeight,jdbcType=VARCHAR})
		</if>
		<if test="schProductHeight_ !=  null and schProductHeight_ !=  ''   ">
			and product_height like
			CONCAT(#{schProductHeight_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productHeightStart !=  null and productHeightEnd!= null  ">
			and product_height between
			#{productHeightStart,jdbcType=VARCHAR} and
			#{productHeightEnd,jdbcType=VARCHAR}
		</if>
		<if test="salePrice !=  null  "> and sale_price = #{salePrice,jdbcType=DOUBLE} </if>
		<if test="picId !=  null  "> and pic_id = #{picId,jdbcType=INTEGER} </if>
		<if test="modelId !=  null  "> and model_id = #{modelId,jdbcType=INTEGER} </if>
		<if test="productDesc !=  null and productDesc !=  ''   "> and product_desc = #{productDesc,jdbcType=VARCHAR} </if>
		<if test="sch_ProductDesc_ !=  null and sch_ProductDesc_ !=  ''   ">
			and product_desc like
			CONCAT(CONCAT('%',#{sch_ProductDesc_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductDesc !=  null and sch_ProductDesc !=  ''   ">
			and product_desc like
			CONCAT('%',#{sch_ProductDesc,jdbcType=VARCHAR})
		</if>
		<if test="schProductDesc_ !=  null and schProductDesc_ !=  ''   ">
			and product_desc like
			CONCAT(#{schProductDesc_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productDescStart !=  null and productDescEnd!= null  ">
			and product_desc between
			#{productDescStart,jdbcType=VARCHAR} and
			#{productDescEnd,jdbcType=VARCHAR}
		</if>
		<if test="picIds !=  null and picIds !=  ''   "> and pic_ids = #{picIds,jdbcType=VARCHAR} </if>
		<if test="sch_PicIds_ !=  null and sch_PicIds_ !=  ''   ">
			and pic_ids like
			CONCAT(CONCAT('%',#{sch_PicIds_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_PicIds !=  null and sch_PicIds !=  ''   ">
			and pic_ids like
			CONCAT('%',#{sch_PicIds,jdbcType=VARCHAR})
		</if>
		<if test="schPicIds_ !=  null and schPicIds_ !=  ''   ">
			and pic_ids like
			CONCAT(#{schPicIds_,jdbcType=VARCHAR},'%')
		</if>
		<if test="picIdsStart !=  null and picIdsEnd!= null  ">
			and pic_ids between #{picIdsStart,jdbcType=VARCHAR} and
			#{picIdsEnd,jdbcType=VARCHAR}
		</if>
		<if test="material3dPicIds !=  null and material3dPicIds !=  ''   "> and material3d_pic_ids =
			#{material3dPicIds,jdbcType=VARCHAR}
		</if>
		<if test="materialPicIds !=  null and materialPicIds !=  ''   "> and material_pic_ids = #{materialPicIds,jdbcType=VARCHAR}
		</if>
		<if test="sch_MaterialPicIds_ !=  null and sch_MaterialPicIds_ !=  ''   ">
			and material_pic_ids like
			CONCAT(CONCAT('%',#{sch_MaterialPicIds_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_MaterialPicIds !=  null and sch_MaterialPicIds !=  ''   ">
			and material_pic_ids like
			CONCAT('%',#{sch_MaterialPicIds,jdbcType=VARCHAR})
		</if>
		<if test="schMaterialPicIds_ !=  null and schMaterialPicIds_ !=  ''   ">
			and material_pic_ids like
			CONCAT(#{schMaterialPicIds_,jdbcType=VARCHAR},'%')
		</if>
		<if test="materialPicIdsStart !=  null and materialPicIdsEnd!= null  ">
			and material_pic_ids between
			#{materialPicIdsStart,jdbcType=VARCHAR} and
			#{materialPicIdsEnd,jdbcType=VARCHAR}
		</if>
		<if test="houseTypeValues !=  null and houseTypeValues !=  ''   "> and house_type_values =
			#{houseTypeValues,jdbcType=VARCHAR}
		</if>
		<if test="sch_HouseTypeValues_ !=  null and sch_HouseTypeValues_ !=  ''   ">
			and house_type_values like
			CONCAT(CONCAT('%',#{sch_HouseTypeValues_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_HouseTypeValues !=  null and sch_HouseTypeValues !=  ''   ">
			and house_type_values like
			CONCAT('%',#{sch_HouseTypeValues,jdbcType=VARCHAR})
		</if>
		<if test="schHouseTypeValues_ !=  null and schHouseTypeValues_ !=  ''   ">
			and house_type_values like
			CONCAT(#{schHouseTypeValues_,jdbcType=VARCHAR},'%')
		</if>
		<if test="houseTypeValuesStart !=  null and  houseTypeValuesEnd!= null  ">
			and house_type_values between
			#{houseTypeValuesStart,jdbcType=VARCHAR} and
			#{houseTypeValuesEnd,jdbcType=VARCHAR}
		</if>
		<if test="inHouseType !=  null and inHouseType !=  ''   ">
			and POSITION(CONCAT(CONCAT(',',#{inHouseType}),',') IN
			CONCAT(CONCAT(',',house_type_values),',')) >0
		</if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and product_type_value =
			#{productTypeValue,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductTypeValue_ !=  null and sch_ProductTypeValue_ !=  ''   ">
			and product_type_value like
			CONCAT(CONCAT('%',#{sch_ProductTypeValue_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductTypeValue !=  null and sch_ProductTypeValue !=  ''   ">
			and product_type_value like
			CONCAT('%',#{sch_ProductTypeValue,jdbcType=VARCHAR})
		</if>
		<if test="schProductTypeValue_ !=  null and schProductTypeValue_ !=  ''   ">
			and product_type_value like
			CONCAT(#{schProductTypeValue_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productTypeValueStart !=  null and productTypeValueEnd!= null  ">
			and product_type_value between
			#{productTypeValueStart,jdbcType=VARCHAR} and
			#{productTypeValueEnd,jdbcType=VARCHAR}
		</if>

		<if test="productTypeMark !=  null and productTypeMark !=  ''   "> and product_type_mark =
			#{productTypeMark,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductTypeMark_ !=  null and sch_ProductTypeMark_ !=  ''   ">
			and product_type_value like
			CONCAT(CONCAT('%',#{sch_ProductTypeMark_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductTypeMark !=  null and sch_ProductTypeMark !=  ''   ">
			and product_type_mark like
			CONCAT('%',#{sch_ProductTypeMark,jdbcType=VARCHAR})
		</if>
		<if test="schProductTypeMark_ !=  null and schProductTypeMark_ !=  ''   ">
			and product_type_mark like
			CONCAT(#{schProductTypeMark_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productTypeMarkStart !=  null and productTypeMarkEnd!= null  ">
			and product_type_mark between
			#{productTypeMarkStart,jdbcType=VARCHAR} and
			#{productTypeMarkEnd,jdbcType=VARCHAR}
		</if>
		<if test="productSmallTypeMark !=  null and productSmallTypeMark !=  ''   "> and product_small_type_mark =
			#{productSmallTypeMark,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductSmallTypeMark_ !=  null and sch_ProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark like
			CONCAT(CONCAT('%',#{sch_ProductSmallTypeMark_,jdbcType=VARCHAR}),'%')
		</if>
		<if
			test="sch_ProductSmallTypeMark !=  null and sch_ProductSmallTypeMark !=  ''   ">
			and product_small_type_mark like
			CONCAT('%',#{sch_ProductSmallTypeMark,jdbcType=VARCHAR})
		</if>
		<if
			test="schProductSmallTypeMark_ !=  null and schProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark like
			CONCAT(#{schProductSmallTypeMark_,jdbcType=VARCHAR},'%')
		</if>
		<if
			test="productSmallTypeMarkStart !=  null and productSmallTypeMarkEnd!= null  ">
			and product_small_type_mark between
			#{productSmallTypeMarkStart,jdbcType=VARCHAR} and
			#{productSmallTypeMarkEnd,jdbcType=VARCHAR}
		</if>

		<if test="productShortCode !=  null and productShortCode !=  ''   "> and product_short_code =
			#{productShortCode,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductShortCode_ !=  null and sch_ProductShortCode_ !=  ''   ">
			and product_short_code like
			CONCAT(CONCAT('%',#{sch_ProductShortCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductShortCode !=  null and sch_ProductShortCode !=  ''   ">
			and product_short_code like
			CONCAT('%',#{sch_ProductShortCode,jdbcType=VARCHAR})
		</if>
		<if test="schProductShortCode_ !=  null and schProductShortCode_ !=  ''   ">
			and product_short_code like
			CONCAT(#{schProductShortCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productShortCodeStart !=  null and productShortCodeEnd!= null  ">
			and product_short_code between
			#{productShortCodeStart,jdbcType=VARCHAR} and
			#{productShortCodeEnd,jdbcType=VARCHAR}
		</if>

		<if test="bmIds !=  null and bmIds !=  ''   "> and bm_ids = #{bmIds,jdbcType=VARCHAR} </if>
		<if test="originalProductCode !=  null and originalProductCode !=  ''   "> and original_product_code =
			#{originalProductCode,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_OriginalProductCode_ !=  null and sch_OriginalProductCode_ !=  ''   ">
			and original_product_code like
			CONCAT(CONCAT('%',#{sch_OriginalProductCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if
			test="sch_OriginalProductCode !=  null and sch_OriginalProductCode !=  ''   ">
			and original_product_code like
			CONCAT('%',#{sch_OriginalProductCode,jdbcType=VARCHAR})
		</if>
		<if
			test="schOriginalProductCode_ !=  null and schOriginalProductCode_ !=  ''   ">
			and original_product_code like
			CONCAT(#{schOriginalProductCode_,jdbcType=VARCHAR},'%')
		</if>
		<if
			test="originalProductCodeStart !=  null and originalProductCodeEnd!= null  ">
			and original_product_code between
			#{originalProductCodeStart,jdbcType=VARCHAR} and
			#{originalProductCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="codeNumber!= null"> and code_number = #{codeNumber,jdbcType=INTEGER} </if>
		<if test="designTempletId!= null"> and designTemplet_id =
			#{designTempletId,jdbcType=INTEGER}
		</if>
		<if test="u3dModelId !=  null and u3dModelId !=  ''   "> and u3dmodel_Id = #{u3dModelId,jdbcType=VARCHAR} </if>
		<if test="sch_U3dModelId_ !=  null and sch_U3dModelId_ !=  ''   ">
			and u3dmodel_Id like
			CONCAT(CONCAT('%',#{sch_U3dModelId_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_U3dModelId !=  null and sch_U3dModelId !=  ''   ">
			and u3dmodel_Id like
			CONCAT('%',#{sch_U3dModelId,jdbcType=VARCHAR})
		</if>
		<if test="schU3dModelId_ !=  null and schU3dModelId_ !=  ''   ">
			and u3dmodel_Id like
			CONCAT(#{schU3dModelId_,jdbcType=VARCHAR},'%')
		</if>
		<if test="u3dModelIdStart !=  null and u3dModelIdEnd!= null  ">
			and u3dmodel_Id between
			#{u3dModelIdStart,jdbcType=VARCHAR} and
			#{u3dModelIdEnd,jdbcType=VARCHAR}
		</if>
		<if test="mergeProductIds !=  null and mergeProductIds !=  ''   "> and merge_product_ids =
			#{mergeProductIds,jdbcType=VARCHAR}
		</if>

		<if test="dateAtt1 !=  null  ">
			and date_att1 = #{dateAtt1,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt1Start !=  null and dateAtt1End!= null  ">
			and date_att1 between #{dateAtt1Start,jdbcType=TIMESTAMP}
			and #{dateAtt1End,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt2 !=  null  ">
			and date_att2 = #{dateAtt2,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt2Start !=  null and dateAtt2End!= null  ">
			and date_att2 between #{dateAtt2Start,jdbcType=TIMESTAMP}
			and #{dateAtt2End,jdbcType=TIMESTAMP}
		</if>
		<if test="productSmallTypeValue !=  null  "> and product_small_type_value =
			#{productSmallTypeValue,jdbcType=INTEGER}
		</if>
		<if test="putawayState !=  null  "> and putaway_state = #{putawayState,jdbcType=INTEGER} </if>
		<if test="fbxState!= null"> and fbx_state = #{fbxState,jdbcType=INTEGER} </if>
		<if test="fbxFileId!= null"> and fbx_file_id = #{fbxFileId,jdbcType=INTEGER} </if>
		<if test="fbxTexture!= null"> and fbx_texture = #{fbxTexture,jdbcType=VARCHAR} </if>
		<if test="numAtt3 !=  null  "> and num_att3 = #{numAtt3,jdbcType=DOUBLE} </if>
		<if test="numAtt4 !=  null  "> and num_att4 = #{numAtt4,jdbcType=DOUBLE} </if>
		<if test="remark !=  null and remark !=  ''   "> and remark = #{remark,jdbcType=VARCHAR} </if>
		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark like
			CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		</if>
		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		</if>
		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and
			#{remarkEnd,jdbcType=VARCHAR}
		</if>
		<if test="productModelNumber!= null"> product_model_number =
			#{productModelNumber,jdbcType=VARCHAR},
		</if>
		<if test="order != null and  order !=''  ">
			order by ${order}
			<if test="orderNum != null and  orderNum !='' ">${orderNum}</if>
		</if>
		<if test="orders != null and  orders !=''  "> order by #{orders}</if>
		<if test="order == null and  orders == null "> order by id desc</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>

	<select id="selectProPaginatedList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.search.BaseProductSearch">
		select
		<include refid="All_Column_List_Pro" />
		from base_product,res_file WHERE 1=1 AND base_product.is_deleted = 0 AND base_product.`config_id` = res_file.`id` and fbx_state = 0
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code like
			CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code like
			CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		</if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code like
			CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and
			#{sysCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="creator !=  null and creator !=  ''   "> and creator = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator like
			CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator like
			CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		</if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator like
			CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		</if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and
			#{creatorEnd,jdbcType=VARCHAR}
		</if>
		<if test="gmtCreate !=  null  ">
			and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
		</if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between
			#{gmtCreateStart,jdbcType=TIMESTAMP} and
			#{gmtCreateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier like
			CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier like
			CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		</if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier like
			CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		</if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and
			#{modifierEnd,jdbcType=VARCHAR}
		</if>
		<if test="gmtModified !=  null  ">
			and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
		</if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between
			#{gmtModifiedStart,jdbcType=TIMESTAMP} and
			#{gmtModifiedEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="isDeleted !=  null  "> and base_product.is_deleted =
			#{isDeleted,jdbcType=INTEGER} </if>
		<if test="spaceComonId !=  null  "> and spaceComon_id = #{spaceComonId,jdbcType=INTEGER} </if>
		<if test="productCode !=  null and productCode !=  ''   "> and product_code = #{productCode,jdbcType=VARCHAR} </if>
		<if test="sch_ProductCode_ !=  null and sch_ProductCode_ !=  ''   ">
			and product_code like
			CONCAT(CONCAT('%',#{sch_ProductCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductCode !=  null and sch_ProductCode !=  ''   ">
			and product_code like
			CONCAT('%',#{sch_ProductCode,jdbcType=VARCHAR})
		</if>
		<if test="schProductCode_ !=  null and schProductCode_ !=  ''   ">
			and product_code like
			CONCAT(#{schProductCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productCodeStart !=  null and productCodeEnd!= null  ">
			and product_code between
			#{productCodeStart,jdbcType=VARCHAR} and
			#{productCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="productName !=  null and productName !=  ''   ">
			and product_name like
			CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR} ),'%')
		</if>
		<if test="sch_ProductName_ !=  null and sch_ProductName_ !=  ''   ">
			and product_name like
			CONCAT(CONCAT('%',#{sch_ProductName_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductName !=  null and sch_ProductName !=  ''   ">
			and product_name like
			CONCAT('%',#{sch_ProductName,jdbcType=VARCHAR})
		</if>
		<if test="schProductName_ !=  null and schProductName_ !=  ''   ">
			and product_name like
			CONCAT(#{schProductName_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productNameStart !=  null and productNameEnd!= null  ">
			and product_name between
			#{productNameStart,jdbcType=VARCHAR} and
			#{productNameEnd,jdbcType=VARCHAR}
		</if>
		<if test="brandId !=  null  "> and brand_id = #{brandId,jdbcType=INTEGER} </if>
		<if test="parentId !=  null  "> and parent_id = #{parentId,jdbcType=INTEGER} </if>
		<if test="materialFileId !=  null  "> and material_file_id = #{materialFileId,jdbcType=INTEGER}
		</if>
		<if test="proStyleId !=  null  "> and pro_style_id = #{proStyleId,jdbcType=INTEGER} </if>
		<if test="productSpec !=  null and productSpec !=  ''   "> and product_spec = #{productSpec,jdbcType=VARCHAR} </if>
		<if test="sch_ProductSpec_ !=  null and sch_ProductSpec_ !=  ''   ">
			and product_spec like
			CONCAT(CONCAT('%',#{sch_ProductSpec_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductSpec !=  null and sch_ProductSpec !=  ''   ">
			and product_spec like
			CONCAT('%',#{sch_ProductSpec,jdbcType=VARCHAR})
		</if>
		<if test="schProductSpec_ !=  null and schProductSpec_ !=  ''   ">
			and product_spec like
			CONCAT(#{schProductSpec_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productSpecStart !=  null and productSpecEnd!= null  ">
			and product_spec between
			#{productSpecStart,jdbcType=VARCHAR} and
			#{productSpecEnd,jdbcType=VARCHAR}
		</if>
		<if test="colorId !=  null  "> and color_id = #{colorId,jdbcType=INTEGER} </if>
		<if test="productLength !=  null and productLength !=  ''   "> and product_length = #{productLength,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductLength_ !=  null and sch_ProductLength_ !=  ''   ">
			and product_length like
			CONCAT(CONCAT('%',#{sch_ProductLength_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductLength !=  null and sch_ProductLength !=  ''   ">
			and product_length like
			CONCAT('%',#{sch_ProductLength,jdbcType=VARCHAR})
		</if>
		<if test="schProductLength_ !=  null and schProductLength_ !=  ''   ">
			and product_length like
			CONCAT(#{schProductLength_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productLengthStart !=  null and productLengthEnd!= null  ">
			and product_length between
			#{productLengthStart,jdbcType=VARCHAR} and
			#{productLengthEnd,jdbcType=VARCHAR}
		</if>
		<if test="productWidth !=  null and productWidth !=  ''   "> and product_width = #{productWidth,jdbcType=VARCHAR} </if>
		<if test="sch_ProductWidth_ !=  null and sch_ProductWidth_ !=  ''   ">
			and product_width like
			CONCAT(CONCAT('%',#{sch_ProductWidth_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductWidth !=  null and sch_ProductWidth !=  ''   ">
			and product_width like
			CONCAT('%',#{sch_ProductWidth,jdbcType=VARCHAR})
		</if>
		<if test="schProductWidth_ !=  null and schProductWidth_ !=  ''   ">
			and product_width like
			CONCAT(#{schProductWidth_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productWidthStart !=  null and productWidthEnd!= null  ">
			and product_width between
			#{productWidthStart,jdbcType=VARCHAR} and
			#{productWidthEnd,jdbcType=VARCHAR}
		</if>
		<if test="productHeight !=  null and productHeight !=  ''   "> and product_height = #{productHeight,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductHeight_ !=  null and sch_ProductHeight_ !=  ''   ">
			and product_height like
			CONCAT(CONCAT('%',#{sch_ProductHeight_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductHeight !=  null and sch_ProductHeight !=  ''   ">
			and product_height like
			CONCAT('%',#{sch_ProductHeight,jdbcType=VARCHAR})
		</if>
		<if test="schProductHeight_ !=  null and schProductHeight_ !=  ''   ">
			and product_height like
			CONCAT(#{schProductHeight_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productHeightStart !=  null and productHeightEnd!= null  ">
			and product_height between
			#{productHeightStart,jdbcType=VARCHAR} and
			#{productHeightEnd,jdbcType=VARCHAR}
		</if>
		<if test="salePrice !=  null  "> and sale_price = #{salePrice,jdbcType=DOUBLE} </if>
		<if test="picId !=  null  "> and pic_id = #{picId,jdbcType=INTEGER} </if>
		<if test="modelId !=  null  "> and model_id = #{modelId,jdbcType=INTEGER} </if>
		<if test="productDesc !=  null and productDesc !=  ''   "> and product_desc = #{productDesc,jdbcType=VARCHAR} </if>
		<if test="sch_ProductDesc_ !=  null and sch_ProductDesc_ !=  ''   ">
			and product_desc like
			CONCAT(CONCAT('%',#{sch_ProductDesc_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductDesc !=  null and sch_ProductDesc !=  ''   ">
			and product_desc like
			CONCAT('%',#{sch_ProductDesc,jdbcType=VARCHAR})
		</if>
		<if test="schProductDesc_ !=  null and schProductDesc_ !=  ''   ">
			and product_desc like
			CONCAT(#{schProductDesc_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productDescStart !=  null and productDescEnd!= null  ">
			and product_desc between
			#{productDescStart,jdbcType=VARCHAR} and
			#{productDescEnd,jdbcType=VARCHAR}
		</if>
		<if test="picIds !=  null and picIds !=  ''   "> and pic_ids = #{picIds,jdbcType=VARCHAR} </if>
		<if test="sch_PicIds_ !=  null and sch_PicIds_ !=  ''   ">
			and pic_ids like
			CONCAT(CONCAT('%',#{sch_PicIds_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_PicIds !=  null and sch_PicIds !=  ''   ">
			and pic_ids like
			CONCAT('%',#{sch_PicIds,jdbcType=VARCHAR})
		</if>
		<if test="schPicIds_ !=  null and schPicIds_ !=  ''   ">
			and pic_ids like
			CONCAT(#{schPicIds_,jdbcType=VARCHAR},'%')
		</if>
		<if test="picIdsStart !=  null and picIdsEnd!= null  ">
			and pic_ids between #{picIdsStart,jdbcType=VARCHAR} and
			#{picIdsEnd,jdbcType=VARCHAR}
		</if>
		<if test="material3dPicIds !=  null and material3dPicIds !=  ''   "> and material3d_pic_ids =
			#{material3dPicIds,jdbcType=VARCHAR}
		</if>
		<if test="materialPicIds !=  null and materialPicIds !=  ''   "> and material_pic_ids = #{materialPicIds,jdbcType=VARCHAR}
		</if>
		<if test="sch_MaterialPicIds_ !=  null and sch_MaterialPicIds_ !=  ''   ">
			and material_pic_ids like
			CONCAT(CONCAT('%',#{sch_MaterialPicIds_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_MaterialPicIds !=  null and sch_MaterialPicIds !=  ''   ">
			and material_pic_ids like
			CONCAT('%',#{sch_MaterialPicIds,jdbcType=VARCHAR})
		</if>
		<if test="schMaterialPicIds_ !=  null and schMaterialPicIds_ !=  ''   ">
			and material_pic_ids like
			CONCAT(#{schMaterialPicIds_,jdbcType=VARCHAR},'%')
		</if>
		<if test="materialPicIdsStart !=  null and materialPicIdsEnd!= null  ">
			and material_pic_ids between
			#{materialPicIdsStart,jdbcType=VARCHAR} and
			#{materialPicIdsEnd,jdbcType=VARCHAR}
		</if>
		<if test="houseTypeValues !=  null and houseTypeValues !=  ''   "> and house_type_values =
			#{houseTypeValues,jdbcType=VARCHAR}
		</if>
		<if test="sch_HouseTypeValues_ !=  null and sch_HouseTypeValues_ !=  ''   ">
			and house_type_values like
			CONCAT(CONCAT('%',#{sch_HouseTypeValues_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_HouseTypeValues !=  null and sch_HouseTypeValues !=  ''   ">
			and house_type_values like
			CONCAT('%',#{sch_HouseTypeValues,jdbcType=VARCHAR})
		</if>
		<if test="schHouseTypeValues_ !=  null and schHouseTypeValues_ !=  ''   ">
			and house_type_values like
			CONCAT(#{schHouseTypeValues_,jdbcType=VARCHAR},'%')
		</if>
		<if test="houseTypeValuesStart !=  null and  houseTypeValuesEnd!= null  ">
			and house_type_values between
			#{houseTypeValuesStart,jdbcType=VARCHAR} and
			#{houseTypeValuesEnd,jdbcType=VARCHAR}
		</if>
		<if test="inHouseType !=  null and inHouseType !=  ''   ">
			and POSITION(CONCAT(CONCAT(',',#{inHouseType}),',') IN
			CONCAT(CONCAT(',',house_type_values),',')) >0
		</if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and product_type_value =
			#{productTypeValue,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductTypeValue_ !=  null and sch_ProductTypeValue_ !=  ''   ">
			and product_type_value like
			CONCAT(CONCAT('%',#{sch_ProductTypeValue_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductTypeValue !=  null and sch_ProductTypeValue !=  ''   ">
			and product_type_value like
			CONCAT('%',#{sch_ProductTypeValue,jdbcType=VARCHAR})
		</if>
		<if test="schProductTypeValue_ !=  null and schProductTypeValue_ !=  ''   ">
			and product_type_value like
			CONCAT(#{schProductTypeValue_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productTypeValueStart !=  null and productTypeValueEnd!= null  ">
			and product_type_value between
			#{productTypeValueStart,jdbcType=VARCHAR} and
			#{productTypeValueEnd,jdbcType=VARCHAR}
		</if>

		<if test="productTypeMark !=  null and productTypeMark !=  ''   "> and product_type_mark =
			#{productTypeMark,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductTypeMark_ !=  null and sch_ProductTypeMark_ !=  ''   ">
			and product_type_value like
			CONCAT(CONCAT('%',#{sch_ProductTypeMark_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductTypeMark !=  null and sch_ProductTypeMark !=  ''   ">
			and product_type_mark like
			CONCAT('%',#{sch_ProductTypeMark,jdbcType=VARCHAR})
		</if>
		<if test="schProductTypeMark_ !=  null and schProductTypeMark_ !=  ''   ">
			and product_type_mark like
			CONCAT(#{schProductTypeMark_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productTypeMarkStart !=  null and productTypeMarkEnd!= null  ">
			and product_type_mark between
			#{productTypeMarkStart,jdbcType=VARCHAR} and
			#{productTypeMarkEnd,jdbcType=VARCHAR}
		</if>
		<if test="productSmallTypeMark !=  null and productSmallTypeMark !=  ''   "> and product_small_type_mark =
			#{productSmallTypeMark,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductSmallTypeMark_ !=  null and sch_ProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark like
			CONCAT(CONCAT('%',#{sch_ProductSmallTypeMark_,jdbcType=VARCHAR}),'%')
		</if>
		<if
			test="sch_ProductSmallTypeMark !=  null and sch_ProductSmallTypeMark !=  ''   ">
			and product_small_type_mark like
			CONCAT('%',#{sch_ProductSmallTypeMark,jdbcType=VARCHAR})
		</if>
		<if
			test="schProductSmallTypeMark_ !=  null and schProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark like
			CONCAT(#{schProductSmallTypeMark_,jdbcType=VARCHAR},'%')
		</if>
		<if
			test="productSmallTypeMarkStart !=  null and productSmallTypeMarkEnd!= null  ">
			and product_small_type_mark between
			#{productSmallTypeMarkStart,jdbcType=VARCHAR} and
			#{productSmallTypeMarkEnd,jdbcType=VARCHAR}
		</if>

		<if test="productShortCode !=  null and productShortCode !=  ''   "> and product_short_code =
			#{productShortCode,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductShortCode_ !=  null and sch_ProductShortCode_ !=  ''   ">
			and product_short_code like
			CONCAT(CONCAT('%',#{sch_ProductShortCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductShortCode !=  null and sch_ProductShortCode !=  ''   ">
			and product_short_code like
			CONCAT('%',#{sch_ProductShortCode,jdbcType=VARCHAR})
		</if>
		<if test="schProductShortCode_ !=  null and schProductShortCode_ !=  ''   ">
			and product_short_code like
			CONCAT(#{schProductShortCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productShortCodeStart !=  null and productShortCodeEnd!= null  ">
			and product_short_code between
			#{productShortCodeStart,jdbcType=VARCHAR} and
			#{productShortCodeEnd,jdbcType=VARCHAR}
		</if>

		<if test="bmIds !=  null and bmIds !=  ''   "> and bm_ids = #{bmIds,jdbcType=VARCHAR} </if>
		<if test="originalProductCode !=  null and originalProductCode !=  ''   "> and original_product_code =
			#{originalProductCode,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_OriginalProductCode_ !=  null and sch_OriginalProductCode_ !=  ''   ">
			and original_product_code like
			CONCAT(CONCAT('%',#{sch_OriginalProductCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if
			test="sch_OriginalProductCode !=  null and sch_OriginalProductCode !=  ''   ">
			and original_product_code like
			CONCAT('%',#{sch_OriginalProductCode,jdbcType=VARCHAR})
		</if>
		<if
			test="schOriginalProductCode_ !=  null and schOriginalProductCode_ !=  ''   ">
			and original_product_code like
			CONCAT(#{schOriginalProductCode_,jdbcType=VARCHAR},'%')
		</if>
		<if
			test="originalProductCodeStart !=  null and originalProductCodeEnd!= null  ">
			and original_product_code between
			#{originalProductCodeStart,jdbcType=VARCHAR} and
			#{originalProductCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="codeNumber!= null"> and code_number = #{codeNumber,jdbcType=INTEGER} </if>
		<if test="designTempletId!= null"> and designTemplet_id =
			#{designTempletId,jdbcType=INTEGER}
		</if>
		<if test="u3dModelId !=  null and u3dModelId !=  ''   "> and u3dmodel_Id = #{u3dModelId,jdbcType=VARCHAR} </if>
		<if test="sch_U3dModelId_ !=  null and sch_U3dModelId_ !=  ''   ">
			and u3dmodel_Id like
			CONCAT(CONCAT('%',#{sch_U3dModelId_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_U3dModelId !=  null and sch_U3dModelId !=  ''   ">
			and u3dmodel_Id like
			CONCAT('%',#{sch_U3dModelId,jdbcType=VARCHAR})
		</if>
		<if test="schU3dModelId_ !=  null and schU3dModelId_ !=  ''   ">
			and u3dmodel_Id like
			CONCAT(#{schU3dModelId_,jdbcType=VARCHAR},'%')
		</if>
		<if test="u3dModelIdStart !=  null and u3dModelIdEnd!= null  ">
			and u3dmodel_Id between
			#{u3dModelIdStart,jdbcType=VARCHAR} and
			#{u3dModelIdEnd,jdbcType=VARCHAR}
		</if>
		<if test="mergeProductIds !=  null and mergeProductIds !=  ''   "> and merge_product_ids =
			#{mergeProductIds,jdbcType=VARCHAR}
		</if>

		<if test="dateAtt1 !=  null  ">
			and date_att1 = #{dateAtt1,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt1Start !=  null and dateAtt1End!= null  ">
			and date_att1 between #{dateAtt1Start,jdbcType=TIMESTAMP}
			and #{dateAtt1End,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt2 !=  null  ">
			and date_att2 = #{dateAtt2,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt2Start !=  null and dateAtt2End!= null  ">
			and date_att2 between #{dateAtt2Start,jdbcType=TIMESTAMP}
			and #{dateAtt2End,jdbcType=TIMESTAMP}
		</if>
		<if test="productSmallTypeValue !=  null  "> and product_small_type_value =
			#{productSmallTypeValue,jdbcType=INTEGER}
		</if>
		<if test="putawayState !=  null  "> and putaway_state = #{putawayState,jdbcType=INTEGER} </if>
		<if test="fbxState!= null"> and fbx_state = #{fbxState,jdbcType=INTEGER} </if>
		<if test="fbxFileId!= null"> and fbx_file_id = #{fbxFileId,jdbcType=INTEGER} </if>
		<if test="fbxTexture!= null"> and fbx_texture = #{fbxTexture,jdbcType=VARCHAR} </if>
		<if test="numAtt3 !=  null  "> and num_att3 = #{numAtt3,jdbcType=DOUBLE} </if>
		<if test="numAtt4 !=  null  "> and num_att4 = #{numAtt4,jdbcType=DOUBLE} </if>
		<if test="remark !=  null and remark !=  ''   "> and remark = #{remark,jdbcType=VARCHAR} </if>
		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark like
			CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		</if>
		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		</if>
		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and
			#{remarkEnd,jdbcType=VARCHAR}
		</if>
		<if test="productModelNumber!= null"> product_model_number =
			#{productModelNumber,jdbcType=VARCHAR},
		</if>
		<if test="order != null and  order !=''  ">
			order by ${order}
			<if test="orderNum != null and  orderNum !='' ">${orderNum}</if>
		</if>
		<if test="orders != null and  orders !=''  "> order by #{orders}</if>
		<if test="order == null and  orders == null "> order by id desc</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>
	
	<select id="selectProCount" resultType="int"
		parameterType="com.nork.product.model.search.BaseProductSearch">
		select count(*)
		from base_product, 
		res_file WHERE 1=1 AND base_product.is_deleted = 0 AND base_product.`config_id` = res_file.`id` and base_product.fbx_state = 0
		<if test="spaceComonId !=  null  "> and spaceComon_id = #{spaceComonId,jdbcType=INTEGER} </if>
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code like
			CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code like
			CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		</if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code like
			CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and
			#{sysCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="creator !=  null and creator !=  ''   "> and creator = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator like
			CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator like
			CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		</if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator like
			CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		</if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and
			#{creatorEnd,jdbcType=VARCHAR}
		</if>
		<if test="gmtCreate !=  null  ">
			and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
		</if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between
			#{gmtCreateStart,jdbcType=TIMESTAMP} and
			#{gmtCreateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier like
			CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier like
			CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		</if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier like
			CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		</if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and
			#{modifierEnd,jdbcType=VARCHAR}
		</if>
		<if test="gmtModified !=  null  ">
			and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
		</if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between
			#{gmtModifiedStart,jdbcType=TIMESTAMP} and
			#{gmtModifiedEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="isDeleted !=  null  "> and base_product.is_deleted =
			#{isDeleted,jdbcType=INTEGER} </if>
		<if test="productCode !=  null and productCode !=  ''   "> and product_code = #{productCode,jdbcType=VARCHAR} </if>
		<if test="sch_ProductCode_ !=  null and sch_ProductCode_ !=  ''   ">
			and product_code like
			CONCAT(CONCAT('%',#{sch_ProductCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductCode !=  null and sch_ProductCode !=  ''   ">
			and product_code like
			CONCAT('%',#{sch_ProductCode,jdbcType=VARCHAR})
		</if>
		<if test="schProductCode_ !=  null and schProductCode_ !=  ''   ">
			and product_code like
			CONCAT(#{schProductCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productCodeStart !=  null and productCodeEnd!= null  ">
			and product_code between
			#{productCodeStart,jdbcType=VARCHAR} and
			#{productCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="productName !=  null and productName !=  ''   ">
			and product_name like
			CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductName_ !=  null and sch_ProductName_ !=  ''   ">
			and product_name like
			CONCAT(CONCAT('%',#{sch_ProductName_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductName !=  null and sch_ProductName !=  ''   ">
			and product_name like
			CONCAT('%',#{sch_ProductName,jdbcType=VARCHAR})
		</if>
		<if test="schProductName_ !=  null and schProductName_ !=  ''   ">
			and product_name like
			CONCAT(#{schProductName_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productNameStart !=  null and productNameEnd!= null  ">
			and product_name between
			#{productNameStart,jdbcType=VARCHAR} and
			#{productNameEnd,jdbcType=VARCHAR}
		</if>
		<if test="brandId !=  null  "> and brand_id = #{brandId,jdbcType=INTEGER} </if>
		<if test="parentId !=  null  "> and parent_id = #{parentId,jdbcType=INTEGER} </if>
		<if test="materialFileId !=  null  "> and material_file_id = #{materialFileId,jdbcType=INTEGER}
		</if>
		<if test="proStyleId !=  null  "> and pro_style_id = #{proStyleId,jdbcType=INTEGER} </if>
		<if test="productSpec !=  null and productSpec !=  ''   "> and product_spec = #{productSpec,jdbcType=VARCHAR} </if>
		<if test="sch_ProductSpec_ !=  null and sch_ProductSpec_ !=  ''   ">
			and product_spec like
			CONCAT(CONCAT('%',#{sch_ProductSpec_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductSpec !=  null and sch_ProductSpec !=  ''   ">
			and product_spec like
			CONCAT('%',#{sch_ProductSpec,jdbcType=VARCHAR})
		</if>
		<if test="schProductSpec_ !=  null and schProductSpec_ !=  ''   ">
			and product_spec like
			CONCAT(#{schProductSpec_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productSpecStart !=  null and productSpecEnd!= null  ">
			and product_spec between
			#{productSpecStart,jdbcType=VARCHAR} and
			#{productSpecEnd,jdbcType=VARCHAR}
		</if>
		<if test="colorId !=  null  "> and color_id = #{colorId,jdbcType=INTEGER} </if>
		<if test="productLength !=  null and productLength !=  ''   "> and product_length = #{productLength,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductLength_ !=  null and sch_ProductLength_ !=  ''   ">
			and product_length like
			CONCAT(CONCAT('%',#{sch_ProductLength_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductLength !=  null and sch_ProductLength !=  ''   ">
			and product_length like
			CONCAT('%',#{sch_ProductLength,jdbcType=VARCHAR})
		</if>
		<if test="schProductLength_ !=  null and schProductLength_ !=  ''   ">
			and product_length like
			CONCAT(#{schProductLength_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productLengthStart !=  null and productLengthEnd!= null  ">
			and product_length between
			#{productLengthStart,jdbcType=VARCHAR} and
			#{productLengthEnd,jdbcType=VARCHAR}
		</if>
		<if test="productWidth !=  null and productWidth !=  ''   "> and product_width = #{productWidth,jdbcType=VARCHAR} </if>
		<if test="sch_ProductWidth_ !=  null and sch_ProductWidth_ !=  ''   ">
			and product_width like
			CONCAT(CONCAT('%',#{sch_ProductWidth_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductWidth !=  null and sch_ProductWidth !=  ''   ">
			and product_width like
			CONCAT('%',#{sch_ProductWidth,jdbcType=VARCHAR})
		</if>
		<if test="schProductWidth_ !=  null and schProductWidth_ !=  ''   ">
			and product_width like
			CONCAT(#{schProductWidth_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productWidthStart !=  null and productWidthEnd!= null  ">
			and product_width between
			#{productWidthStart,jdbcType=VARCHAR} and
			#{productWidthEnd,jdbcType=VARCHAR}
		</if>
		<if test="productHeight !=  null and productHeight !=  ''   "> and product_height = #{productHeight,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductHeight_ !=  null and sch_ProductHeight_ !=  ''   ">
			and product_height like
			CONCAT(CONCAT('%',#{sch_ProductHeight_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductHeight !=  null and sch_ProductHeight !=  ''   ">
			and product_height like
			CONCAT('%',#{sch_ProductHeight,jdbcType=VARCHAR})
		</if>
		<if test="schProductHeight_ !=  null and schProductHeight_ !=  ''   ">
			and product_height like
			CONCAT(#{schProductHeight_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productHeightStart !=  null and productHeightEnd!= null  ">
			and product_height between
			#{productHeightStart,jdbcType=VARCHAR} and
			#{productHeightEnd,jdbcType=VARCHAR}
		</if>
		<if test="salePrice !=  null  "> and sale_price = #{salePrice,jdbcType=DOUBLE} </if>
		<if test="picId !=  null  "> and pic_id = #{picId,jdbcType=INTEGER} </if>
		<if test="modelId !=  null  "> and model_id = #{modelId,jdbcType=INTEGER} </if>
		<if test="productDesc !=  null and productDesc !=  ''   "> and product_desc = #{productDesc,jdbcType=VARCHAR} </if>
		<if test="sch_ProductDesc_ !=  null and sch_ProductDesc_ !=  ''   ">
			and product_desc like
			CONCAT(CONCAT('%',#{sch_ProductDesc_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductDesc !=  null and sch_ProductDesc !=  ''   ">
			and product_desc like
			CONCAT('%',#{sch_ProductDesc,jdbcType=VARCHAR})
		</if>
		<if test="schProductDesc_ !=  null and schProductDesc_ !=  ''   ">
			and product_desc like
			CONCAT(#{schProductDesc_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productDescStart !=  null and productDescEnd!= null  ">
			and product_desc between
			#{productDescStart,jdbcType=VARCHAR} and
			#{productDescEnd,jdbcType=VARCHAR}
		</if>
		<if test="picIds !=  null and picIds !=  ''   "> and pic_ids = #{picIds,jdbcType=VARCHAR} </if>
		<if test="sch_PicIds_ !=  null and sch_PicIds_ !=  ''   ">
			and pic_ids like
			CONCAT(CONCAT('%',#{sch_PicIds_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_PicIds !=  null and sch_PicIds !=  ''   ">
			and pic_ids like
			CONCAT('%',#{sch_PicIds,jdbcType=VARCHAR})
		</if>
		<if test="schPicIds_ !=  null and schPicIds_ !=  ''   ">
			and pic_ids like
			CONCAT(#{schPicIds_,jdbcType=VARCHAR},'%')
		</if>
		<if test="picIdsStart !=  null and picIdsEnd!= null  ">
			and pic_ids between #{picIdsStart,jdbcType=VARCHAR} and
			#{picIdsEnd,jdbcType=VARCHAR}
		</if>
		<if test="material3dPicIds !=  null and material3dPicIds !=  ''   "> and material3d_pic_ids =
			#{material3dPicIds,jdbcType=VARCHAR}
		</if>
		<if test="sch_MaterialPicIds_ !=  null and sch_MaterialPicIds_ !=  ''   ">
			and material_pic_ids like
			CONCAT(CONCAT('%',#{sch_MaterialPicIds_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_MaterialPicIds !=  null and sch_MaterialPicIds !=  ''   ">
			and material_pic_ids like
			CONCAT('%',#{sch_MaterialPicIds,jdbcType=VARCHAR})
		</if>
		<if test="schMaterialPicIds_ !=  null and schMaterialPicIds_ !=  ''   ">
			and material_pic_ids like
			CONCAT(#{schMaterialPicIds_,jdbcType=VARCHAR},'%')
		</if>
		<if test="materialPicIdsStart !=  null and materialPicIdsEnd!= null  ">
			and material_pic_ids between
			#{materialPicIdsStart,jdbcType=VARCHAR} and
			#{materialPicIdsEnd,jdbcType=VARCHAR}
		</if>
		<if test="houseTypeValues !=  null and houseTypeValues !=  ''   "> and house_type_values =
			#{houseTypeValues,jdbcType=VARCHAR}
		</if>
		<if test="sch_HouseTypeValues_ !=  null and sch_HouseTypeValues_ !=  ''   ">
			and house_type_values like
			CONCAT(CONCAT('%',#{sch_HouseTypeValues_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_HouseTypeValues !=  null and sch_HouseTypeValues !=  ''   ">
			and house_type_values like
			CONCAT('%',#{sch_HouseTypeValues,jdbcType=VARCHAR})
		</if>
		<if test="schHouseTypeValues_ !=  null and schHouseTypeValues_ !=  ''   ">
			and house_type_values like
			CONCAT(#{schHouseTypeValues_,jdbcType=VARCHAR},'%')
		</if>
		<if test="houseTypeValuesStart !=  null and  houseTypeValuesEnd!= null  ">
			and house_type_values between
			#{houseTypeValuesStart,jdbcType=VARCHAR} and
			#{houseTypeValuesEnd,jdbcType=VARCHAR}
		</if>
		<if test="inHouseType !=  null and inHouseType !=  ''   ">
			and POSITION(CONCAT(CONCAT(',',#{inHouseType}),',') IN
			CONCAT(CONCAT(',',house_type_values),',')) >0
		</if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and product_type_value =
			#{productTypeValue,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductTypeValue_ !=  null and sch_ProductTypeValue_ !=  ''   ">
			and product_type_value like
			CONCAT(CONCAT('%',#{sch_ProductTypeValue_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductTypeValue !=  null and sch_ProductTypeValue !=  ''   ">
			and product_type_value like
			CONCAT('%',#{sch_ProductTypeValue,jdbcType=VARCHAR})
		</if>
		<if test="schProductTypeValue_ !=  null and schProductTypeValue_ !=  ''   ">
			and product_type_value like
			CONCAT(#{schProductTypeValue_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productTypeValueStart !=  null and productTypeValueEnd!= null  ">
			and product_type_value between
			#{productTypeValueStart,jdbcType=VARCHAR} and
			#{productTypeValueEnd,jdbcType=VARCHAR}
		</if>

		<if test="productTypeMark !=  null and productTypeMark !=  ''   "> and product_type_mark =
			#{productTypeMark,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductTypeMark_ !=  null and sch_ProductTypeMark_ !=  ''   ">
			and product_type_value like
			CONCAT(CONCAT('%',#{sch_ProductTypeMark_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductTypeMark !=  null and sch_ProductTypeMark !=  ''   ">
			and product_type_mark like
			CONCAT('%',#{sch_ProductTypeMark,jdbcType=VARCHAR})
		</if>
		<if test="schProductTypeMark_ !=  null and schProductTypeMark_ !=  ''   ">
			and product_type_mark like
			CONCAT(#{schProductTypeMark_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productTypeMarkStart !=  null and productTypeMarkEnd!= null  ">
			and product_type_mark between
			#{productTypeMarkStart,jdbcType=VARCHAR} and
			#{productTypeMarkEnd,jdbcType=VARCHAR}
		</if>
		<if test="productSmallTypeMark !=  null and productSmallTypeMark !=  ''   "> and product_small_type_mark =
			#{productSmallTypeMark,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductSmallTypeMark_ !=  null and sch_ProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark like
			CONCAT(CONCAT('%',#{sch_ProductSmallTypeMark_,jdbcType=VARCHAR}),'%')
		</if>
		<if
			test="sch_ProductSmallTypeMark !=  null and sch_ProductSmallTypeMark !=  ''   ">
			and product_small_type_mark like
			CONCAT('%',#{sch_ProductSmallTypeMark,jdbcType=VARCHAR})
		</if>
		<if
			test="schProductSmallTypeMark_ !=  null and schProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark like
			CONCAT(#{schProductSmallTypeMark_,jdbcType=VARCHAR},'%')
		</if>
		<if
			test="productSmallTypeMarkStart !=  null and productSmallTypeMarkEnd!= null  ">
			and product_small_type_mark between
			#{productSmallTypeMarkStart,jdbcType=VARCHAR} and
			#{productSmallTypeMarkEnd,jdbcType=VARCHAR}
		</if>

		<if test="productShortCode !=  null and productShortCode !=  ''   "> and product_short_code =
			#{productShortCode,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductShortCode_ !=  null and sch_ProductShortCode_ !=  ''   ">
			and product_short_code like
			CONCAT(CONCAT('%',#{sch_ProductShortCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductShortCode !=  null and sch_ProductShortCode !=  ''   ">
			and product_short_code like
			CONCAT('%',#{sch_ProductShortCode,jdbcType=VARCHAR})
		</if>
		<if test="schProductShortCode_ !=  null and schProductShortCode_ !=  ''   ">
			and product_short_code like
			CONCAT(#{schProductShortCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productShortCodeStart !=  null and productShortCodeEnd!= null  ">
			and product_short_code between
			#{productShortCodeStart,jdbcType=VARCHAR} and
			#{productShortCodeEnd,jdbcType=VARCHAR}
		</if>

		<if test="bmIds !=  null and bmIds !=  ''   "> and bm_ids = #{bmIds,jdbcType=VARCHAR} </if>
		<if test="originalProductCode !=  null and originalProductCode !=  ''   "> and original_product_code =
			#{originalProductCode,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_OriginalProductCode_ !=  null and sch_OriginalProductCode_ !=  ''   ">
			and original_product_code like
			CONCAT(CONCAT('%',#{sch_OriginalProductCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if
			test="sch_OriginalProductCode !=  null and sch_OriginalProductCode !=  ''   ">
			and original_product_code like
			CONCAT('%',#{sch_OriginalProductCode,jdbcType=VARCHAR})
		</if>
		<if
			test="schOriginalProductCode_ !=  null and schOriginalProductCode_ !=  ''   ">
			and original_product_code like
			CONCAT(#{schOriginalProductCode_,jdbcType=VARCHAR},'%')
		</if>
		<if
			test="originalProductCodeStart !=  null and originalProductCodeEnd!= null  ">
			and original_product_code between
			#{originalProductCodeStart,jdbcType=VARCHAR} and
			#{originalProductCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="codeNumber!= null"> and code_number = #{codeNumber,jdbcType=INTEGER} </if>
		<if test="designTempletId!= null"> and designTemplet_id =
			#{designTempletId,jdbcType=INTEGER}
		</if>
		<if test="u3dModelId !=  null and u3dModelId !=  ''   "> and u3dmodel_Id = #{u3dModelId,jdbcType=VARCHAR} </if>
		<if test="sch_U3dModelId_ !=  null and sch_U3dModelId_ !=  ''   ">
			and u3dmodel_Id like
			CONCAT(CONCAT('%',#{sch_U3dModelId_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_U3dModelId !=  null and sch_U3dModelId !=  ''   ">
			and u3dmodel_Id like
			CONCAT('%',#{sch_U3dModelId,jdbcType=VARCHAR})
		</if>
		<if test="schU3dModelId_ !=  null and schU3dModelId_ !=  ''   ">
			and u3dmodel_Id like
			CONCAT(#{schU3dModelId_,jdbcType=VARCHAR},'%')
		</if>
		<if test="u3dModelIdStart !=  null and u3dModelIdEnd!= null  ">
			and u3dmodel_Id between
			#{u3dModelIdStart,jdbcType=VARCHAR} and
			#{u3dModelIdEnd,jdbcType=VARCHAR}
		</if>
		<if test="mergeProductIds !=  null and mergeProductIds !=  ''   "> and merge_product_ids =
			#{mergeProductIds,jdbcType=VARCHAR}
		</if>

		<if test="dateAtt1 !=  null  ">
			and date_att1 = #{dateAtt1,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt1Start !=  null and dateAtt1End!= null  ">
			and date_att1 between #{dateAtt1Start,jdbcType=TIMESTAMP}
			and #{dateAtt1End,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt2 !=  null  ">
			and date_att2 = #{dateAtt2,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt2Start !=  null and dateAtt2End!= null  ">
			and date_att2 between #{dateAtt2Start,jdbcType=TIMESTAMP}
			and #{dateAtt2End,jdbcType=TIMESTAMP}
		</if>
		<if test="productSmallTypeValue !=  null  "> and product_small_type_value =
			#{productSmallTypeValue,jdbcType=INTEGER}
		</if>
		<if test="putawayState !=  null  "> and putaway_state = #{putawayState,jdbcType=INTEGER} </if>
		<if test="fbxState!= null"> and fbx_state = #{fbxState,jdbcType=INTEGER} </if>
		<if test="fbxFileId!= null"> and fbx_file_id = #{fbxFileId,jdbcType=INTEGER} </if>
		<if test="fbxTexture!= null"> and fbx_texture = #{fbxTexture,jdbcType=VARCHAR} </if>
		<if test="numAtt3 !=  null  "> and num_att3 = #{numAtt3,jdbcType=DOUBLE} </if>
		<if test="numAtt4 !=  null  "> and num_att4 = #{numAtt4,jdbcType=DOUBLE} </if>
		<if test="remark !=  null and remark !=  ''   "> and remark = #{remark,jdbcType=VARCHAR} </if>
		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark like
			CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		</if>
		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		</if>
		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and
			#{remarkEnd,jdbcType=VARCHAR}
		</if>
		<if test="productModelNumber!= null"> product_model_number =
			#{productModelNumber,jdbcType=VARCHAR},
		</if>
	</select>
	
	<sql id="All_Column_List_Pro">
			base_product.id,
			base_product.sys_code,
			base_product.creator,
			base_product.gmt_create,
			base_product.modifier,
			base_product.gmt_modified,
			base_product.is_deleted,
			base_product.product_code,
			base_product.product_name,
			base_product.decoration_id,
			base_product.spaceComon_id,
			base_product.designer_id,
			base_product.modeling_id,
			base_product.full_pave_length,
			base_product.rendering_id,
			base_product.brand_id,
			base_product.parent_id,
			base_product.material_file_id,
			base_product.pro_style_id,
			base_product.product_spec,
			base_product.color_id,
			base_product.product_length,
			base_product.product_width,
			base_product.product_height,
			base_product.sale_price,
			base_product.pic_id,
			base_product.model_id,
			base_product.product_desc,
			base_product.pic_ids,
			base_product.material_pic_ids,
			base_product.material3d_pic_ids,
			base_product.house_type_values,
			base_product.product_type_value,
			base_product.product_type_mark,
			base_product.product_small_type_mark,
			base_product.product_short_code,
			base_product.original_product_code,
			base_product.bm_ids,
			base_product.code_number,
			base_product.designTemplet_id,
			base_product.u3dmodel_Id,
			base_product.ipad_u3dmodel_id,
			base_product.ios_u3dmodel_id,
			base_product.android_u3dmodel_id,
			base_product.macbook_u3dmodel_id,
			base_product.windows_u3dmodel_id,
			base_product.merge_product_ids,
			base_product.date_att1,
			base_product.date_att2,
			base_product.product_small_type_value,
			base_product.putaway_state,
			base_product.num_att3,
			base_product.num_att4,
			base_product.remark,
			base_product.product_model_number,
			base_product.fbx_state,
			base_product.fbx_file_id,
			base_product.fbx_texture,
			base_product.config_id
		</sql>
	
	<sql id="Base_All_Column_List">
			base_product.id,
			base_product.sys_code,
			base_product.creator,
			base_product.gmt_create,
			base_product.modifier,
			base_product.gmt_modified,
			base_product.is_deleted,
			base_product.product_code,
			base_product.product_name,
			base_product.decoration_id,
			base_product.spaceComon_id,
			base_product.designer_id,
			base_product.modeling_id,
			base_product.full_pave_length,
			base_product.rendering_id,
			base_product.brand_id,
			base_product.parent_id,
			base_product.material_file_id,
			base_product.pro_style_id,
			base_product.product_spec,
			base_product.color_id,
			base_product.product_length,
			base_product.product_width,
			base_product.product_height,
			base_product.sale_price,
			base_product.pic_id,
			base_product.model_id,
			base_product.product_desc,
			base_product.pic_ids,
			base_product.material_pic_ids,
			base_product.material3d_pic_ids,
			base_product.house_type_values,
			base_product.product_type_value,
			base_product.product_type_mark,
			base_product.product_small_type_mark,
			base_product.product_short_code,
			base_product.original_product_code,
			base_product.bm_ids,
			base_product.code_number,
			base_product.designTemplet_id,
			base_product.u3dmodel_Id,
			base_product.ipad_u3dmodel_id,
			base_product.ios_u3dmodel_id,
			base_product.android_u3dmodel_id,
			base_product.macbook_u3dmodel_id,
			base_product.windows_u3dmodel_id,
			base_product.merge_product_ids,
			base_product.date_att1,
			base_product.date_att2,
			base_product.product_small_type_value,
			base_product.putaway_state,
			base_product.num_att3,
			base_product.num_att4,
			base_product.remark,
			base_product.product_model_number,
			base_product.fbx_state,
			base_product.fbx_file_id,
			base_product.fbx_texture,
			base_product.config_id,
			res_file.file_name
		</sql>
	
	<!-- 查询所有，可排序 -->
    <select id="selectList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.BaseProduct">
		select
		<include refid="All_Column_List" />
		 
		from base_product
        where 1=1
       <if test="resIdList !=  null and  resIdList.size > 0  ">
			and	id in
			<foreach collection="resIdList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="sysCode!= null">  and sys_code = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="splitTexturesInfo!= null">  and split_textures_info = #{splitTexturesInfo,jdbcType=VARCHAR} </if>
		<if test="creator!= null">  and creator = #{creator,jdbcType=VARCHAR} </if>
		<!-- <if test="gmtCreate!= null">  and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP} </if> -->
		<if test="modifier!= null">  and modifier = #{modifier,jdbcType=VARCHAR} </if>
		<if test="gmtModified!= null">  and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP} </if>
		<if test="isDeleted!= null">  and is_deleted = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="productCode!= null">  and product_code = #{productCode,jdbcType=VARCHAR} </if>
		<if test="productName!= null">  and product_name like CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR}),'%') </if>
		<if test="brandId!= null">  and brand_id = #{brandId,jdbcType=INTEGER} </if>
		<if test="parentId!= null">  and parent_id = #{parentId,jdbcType=INTEGER} </if>
		<if test="materialFileId!= null">  and material_file_id = #{materialFileId,jdbcType=INTEGER} </if>
		<if test="proStyleId!= null">  and pro_style_id = #{proStyleId,jdbcType=INTEGER} </if>
		<if test="productSpec!= null">  and product_spec = #{productSpec,jdbcType=VARCHAR} </if>
		<if test="colorId!= null">  and color_id = #{colorId,jdbcType=INTEGER} </if>
		<if test="productLength!= null">  and product_length = #{productLength,jdbcType=VARCHAR} </if>
		<if test="productWidth!= null">  and product_width = #{productWidth,jdbcType=VARCHAR} </if>
		<if test="productHeight!= null">  and product_height = #{productHeight,jdbcType=VARCHAR} </if>
		<if test="salePrice!= null">  and sale_price = #{salePrice,jdbcType=DOUBLE} </if>
		<if test="picId!= null">  and pic_id = #{picId,jdbcType=INTEGER} </if>
		<if test="modelId!= null">  and model_id = #{modelId,jdbcType=INTEGER} </if>
		<if test="productDesc!= null">  and product_desc = #{productDesc,jdbcType=VARCHAR} </if>
		<if test="gmtCreate !=  null and tomorrow != null  ">
			and gmt_create   between #{gmtCreate,jdbcType=TIMESTAMP} and #{tomorrow,jdbcType=TIMESTAMP}
		 </if>
		<if test="picIds!= null">  and pic_ids = #{picIds,jdbcType=VARCHAR} </if>
		<if test="material3dPicIds!= null">  and material3d_pic_ids = #{material3dPicIds,jdbcType=VARCHAR} </if>
		<if test="houseTypeValues!= null">  and house_type_values = #{houseTypeValues,jdbcType=VARCHAR} </if>
		<if test="productTypeValue!= null">  and product_type_value = #{productTypeValue,jdbcType=VARCHAR} </if>
		<if test="productTypeMark!= null">  and product_type_mark = #{productTypeMark,jdbcType=VARCHAR} </if>
		<if test="productSmallTypeMark!= null">  and product_small_type_mark = #{productSmallTypeMark,jdbcType=VARCHAR} </if>
		<if test="productShortCode!= null">  and product_short_code = #{productShortCode,jdbcType=VARCHAR} </if>
		<if test="originalProductCode!= null">  and original_product_code = #{originalProductCode,jdbcType=VARCHAR} </if>
		<if test="bmIds!= null">  and bm_ids = #{bmIds,jdbcType=VARCHAR} </if>
		<if test="codeNumber!= null">  and code_number = #{codeNumber,jdbcType=INTEGER} </if>
		<if test="designTempletId!= null">  and designTemplet_id = #{designTempletId,jdbcType=INTEGER} </if>
		<if test="u3dModelId!= null">  and u3dmodel_Id = #{u3dModelId,jdbcType=VARCHAR} </if>
		<if test="mergeProductIds!= null">  and merge_product_ids = #{mergeProductIds,jdbcType=VARCHAR} </if>
		<if test="putawayModified!= null">  and putaway_modified = #{putawayModified,jdbcType=TIMESTAMP} </if>
		<if test="dateAtt2!= null">  and date_att2 = #{dateAtt2,jdbcType=TIMESTAMP} </if>
		<if test="productSmallTypeValue!= null">  and product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER} </if>
		<if test="putawayState!= null">  and putaway_state = #{putawayState,jdbcType=INTEGER} </if>
		<if test="fbxState!= null"> and fbx_state = #{fbxState,jdbcType=INTEGER} </if>
		<if test="fbxFileId!= null"> and fbx_file_id = #{fbxFileId,jdbcType=INTEGER} </if>
		<if test="fbxTexture!= null"> and fbx_texture = #{fbxTexture,jdbcType=VARCHAR} </if>
		<if test="numAtt3!= null">  and num_att3 = #{numAtt3,jdbcType=DOUBLE} </if>
		<if test="numAtt4!= null">  and num_att4 = #{numAtt4,jdbcType=DOUBLE} </if>
		<if test="remark!= null">  and remark = #{remark,jdbcType=VARCHAR} </if>
		<if test="productModelNumber!= null"> and product_model_number = #{productModelNumber,jdbcType=VARCHAR}</if>
		<if test="windowsU3dModelId != null"> and windows_u3dmodel_id = #{windowsU3dModelId,jdbcType=INTEGER}</if>
 
		<if test="order != null and  order !=''  ">
			order by ${order}
			<if test="orderNum != null and  orderNum !='' ">
				${orderNum}
			</if>
		</if>
		<if test="orders != null and  orders !=''  ">
		   order by ${orders}
		</if>
	</select>
	<!-- 查询所有，可排序3 -->
    <select id="selectDicList" resultMap="AllResultMap2"
		parameterType="com.nork.product.model.BaseProduct">
		select
		<include refid="All_Column_List" />,
		(select sdneed.value from sys_dictionary sdbig
		left join sys_dictionary sdsmall on sdsmall.type = sdbig.valuekey and sdsmall.value = base_product.product_type_value
		left join sys_dictionary sdneed on sdneed.type = sdbig.valuekey and sdneed.valuekey = replace(sdsmall.valuekey,"basic_","")
		where sdbig.type = "productType" and sdbig.value = base_product.product_small_type_value)  dicSmallTypeValue
		from base_product
        where 1=1
       <if test="resIdList !=  null and  resIdList.size > 0  ">
			and	id in
			<foreach collection="resIdList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="sysCode!= null">  and sys_code = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="splitTexturesInfo!= null">  and split_textures_info = #{splitTexturesInfo,jdbcType=VARCHAR} </if>
		<if test="creator!= null">  and creator = #{creator,jdbcType=VARCHAR} </if>
		<!-- <if test="gmtCreate!= null">  and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP} </if> -->
		<if test="modifier!= null">  and modifier = #{modifier,jdbcType=VARCHAR} </if>
		<if test="gmtModified!= null">  and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP} </if>
		<if test="isDeleted!= null">  and is_deleted = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="productCode!= null">  and product_code = #{productCode,jdbcType=VARCHAR} </if>
		<if test="productName!= null">  and product_name like CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR}),'%') </if>
		<if test="brandId!= null">  and brand_id = #{brandId,jdbcType=INTEGER} </if>
		<if test="parentId!= null">  and parent_id = #{parentId,jdbcType=INTEGER} </if>
		<if test="materialFileId!= null">  and material_file_id = #{materialFileId,jdbcType=INTEGER} </if>
		<if test="proStyleId!= null">  and pro_style_id = #{proStyleId,jdbcType=INTEGER} </if>
		<if test="productSpec!= null">  and product_spec = #{productSpec,jdbcType=VARCHAR} </if>
		<if test="colorId!= null">  and color_id = #{colorId,jdbcType=INTEGER} </if>
		<if test="productLength!= null">  and product_length = #{productLength,jdbcType=VARCHAR} </if>
		<if test="productWidth!= null">  and product_width = #{productWidth,jdbcType=VARCHAR} </if>
		<if test="productHeight!= null">  and product_height = #{productHeight,jdbcType=VARCHAR} </if>
		<if test="salePrice!= null">  and sale_price = #{salePrice,jdbcType=DOUBLE} </if>
		<if test="picId!= null">  and pic_id = #{picId,jdbcType=INTEGER} </if>
		<if test="modelId!= null">  and model_id = #{modelId,jdbcType=INTEGER} </if>
		<if test="productDesc!= null">  and product_desc = #{productDesc,jdbcType=VARCHAR} </if>
		<if test="gmtCreate !=  null and tomorrow != null  ">
			and gmt_create   between #{gmtCreate,jdbcType=TIMESTAMP} and #{tomorrow,jdbcType=TIMESTAMP}
		 </if>
		<if test="picIds!= null">  and pic_ids = #{picIds,jdbcType=VARCHAR} </if>
		<if test="material3dPicIds!= null">  and material3d_pic_ids = #{material3dPicIds,jdbcType=VARCHAR} </if>
		<if test="houseTypeValues!= null">  and house_type_values = #{houseTypeValues,jdbcType=VARCHAR} </if>
		<if test="productTypeValue!= null">  and product_type_value = #{productTypeValue,jdbcType=VARCHAR} </if>
		<if test="productTypeMark!= null">  and product_type_mark = #{productTypeMark,jdbcType=VARCHAR} </if>
		<if test="productSmallTypeMark!= null">  and product_small_type_mark = #{productSmallTypeMark,jdbcType=VARCHAR} </if>
		<if test="productShortCode!= null">  and product_short_code = #{productShortCode,jdbcType=VARCHAR} </if>
		<if test="originalProductCode!= null">  and original_product_code = #{originalProductCode,jdbcType=VARCHAR} </if>
		<if test="bmIds!= null">  and bm_ids = #{bmIds,jdbcType=VARCHAR} </if>
		<if test="codeNumber!= null">  and code_number = #{codeNumber,jdbcType=INTEGER} </if>
		<if test="designTempletId!= null">  and designTemplet_id = #{designTempletId,jdbcType=INTEGER} </if>
		<if test="u3dModelId!= null">  and u3dmodel_Id = #{u3dModelId,jdbcType=VARCHAR} </if>
		<if test="mergeProductIds!= null">  and merge_product_ids = #{mergeProductIds,jdbcType=VARCHAR} </if>
		<if test="putawayModified!= null">  and putaway_modified = #{putawayModified,jdbcType=TIMESTAMP} </if>
		<if test="dateAtt2!= null">  and date_att2 = #{dateAtt2,jdbcType=TIMESTAMP} </if>
		<if test="productSmallTypeValue!= null">  and product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER} </if>
		<if test="putawayState!= null">  and putaway_state = #{putawayState,jdbcType=INTEGER} </if>
		<if test="fbxState!= null"> and fbx_state = #{fbxState,jdbcType=INTEGER} </if>
		<if test="fbxFileId!= null"> and fbx_file_id = #{fbxFileId,jdbcType=INTEGER} </if>
		<if test="fbxTexture!= null"> and fbx_texture = #{fbxTexture,jdbcType=VARCHAR} </if>
		<if test="numAtt3!= null">  and num_att3 = #{numAtt3,jdbcType=DOUBLE} </if>
		<if test="numAtt4!= null">  and num_att4 = #{numAtt4,jdbcType=DOUBLE} </if>
		<if test="remark!= null">  and remark = #{remark,jdbcType=VARCHAR} </if>
		<if test="productModelNumber!= null"> and product_model_number = #{productModelNumber,jdbcType=VARCHAR}</if>
		<if test="windowsU3dModelId != null"> and windows_u3dmodel_id = #{windowsU3dModelId,jdbcType=INTEGER}</if>
 
		<if test="order != null and  order !=''  ">
			order by ${order}
			<if test="orderNum != null and  orderNum !='' ">
				${orderNum}
			</if>
		</if>
		<if test="orders != null and  orders !=''  ">
		   order by ${orders}
		</if>
	</select>
	<!-- 查询所有，可排序2 -->
    <select id="selectList2" resultMap="AllResultMap2"
		parameterType="com.nork.product.model.BaseProduct">
		select
		<include refid="All_Column_List" />,res_file.file_path  materialConfigPath 
		from base_product left join res_file on base_product.material_file_id=res_file.id 
        where 1=1
        <if test="list null"> 
        	AND id in 
	     <foreach item="item" collection="list" index="index"  open="(" separator="," close=")" >  
	        #{item}
	     </foreach>
	     </if>
		<if test="sysCode!= null">  and sys_code = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="splitTexturesInfo!= null">  and split_textures_info = #{splitTexturesInfo,jdbcType=VARCHAR} </if>
		<if test="creator!= null">  and creator = #{creator,jdbcType=VARCHAR} </if>
		<!-- <if test="gmtCreate!= null">  and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP} </if> -->
		<if test="modifier!= null">  and modifier = #{modifier,jdbcType=VARCHAR} </if>
		<if test="gmtModified!= null">  and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP} </if>
		<if test="isDeleted!= null">  and is_deleted = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="productCode!= null">  and product_code = #{productCode,jdbcType=VARCHAR} </if>
		<if test="productName!= null">  and product_name like CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR}),'%') </if>
		<if test="brandId!= null">  and brand_id = #{brandId,jdbcType=INTEGER} </if>
		<if test="parentId!= null">  and parent_id = #{parentId,jdbcType=INTEGER} </if>
		<if test="materialFileId!= null">  and material_file_id = #{materialFileId,jdbcType=INTEGER} </if>
		<if test="proStyleId!= null">  and pro_style_id = #{proStyleId,jdbcType=INTEGER} </if>
		<if test="productSpec!= null">  and product_spec = #{productSpec,jdbcType=VARCHAR} </if>
		<if test="colorId!= null">  and color_id = #{colorId,jdbcType=INTEGER} </if>
		<if test="productLength!= null">  and product_length = #{productLength,jdbcType=VARCHAR} </if>
		<if test="productWidth!= null">  and product_width = #{productWidth,jdbcType=VARCHAR} </if>
		<if test="productHeight!= null">  and product_height = #{productHeight,jdbcType=VARCHAR} </if>
		<if test="salePrice!= null">  and sale_price = #{salePrice,jdbcType=DOUBLE} </if>
		<if test="picId!= null">  and pic_id = #{picId,jdbcType=INTEGER} </if>
		<if test="modelId!= null">  and model_id = #{modelId,jdbcType=INTEGER} </if>
		<if test="productDesc!= null">  and product_desc = #{productDesc,jdbcType=VARCHAR} </if>
		<if test="gmtCreate !=  null and tomorrow != null  ">
			and gmt_create   between #{gmtCreate,jdbcType=TIMESTAMP} and #{tomorrow,jdbcType=TIMESTAMP}
		 </if>
		<if test="picIds!= null">  and pic_ids = #{picIds,jdbcType=VARCHAR} </if>
		<if test="material3dPicIds!= null">  and material3d_pic_ids = #{material3dPicIds,jdbcType=VARCHAR} </if>
		<if test="houseTypeValues!= null">  and house_type_values = #{houseTypeValues,jdbcType=VARCHAR} </if>
		<if test="productTypeValue!= null">  and product_type_value = #{productTypeValue,jdbcType=VARCHAR} </if>
		<if test="productTypeMark!= null">  and product_type_mark = #{productTypeMark,jdbcType=VARCHAR} </if>
		<if test="productSmallTypeMark!= null">  and product_small_type_mark = #{productSmallTypeMark,jdbcType=VARCHAR} </if>
		<if test="productShortCode!= null">  and product_short_code = #{productShortCode,jdbcType=VARCHAR} </if>
		<if test="originalProductCode!= null">  and original_product_code = #{originalProductCode,jdbcType=VARCHAR} </if>
		<if test="bmIds!= null">  and bm_ids = #{bmIds,jdbcType=VARCHAR} </if>
		<if test="codeNumber!= null">  and code_number = #{codeNumber,jdbcType=INTEGER} </if>
		<if test="designTempletId!= null">  and designTemplet_id = #{designTempletId,jdbcType=INTEGER} </if>
		<if test="u3dModelId!= null">  and u3dmodel_Id = #{u3dModelId,jdbcType=VARCHAR} </if>
		<if test="mergeProductIds!= null">  and merge_product_ids = #{mergeProductIds,jdbcType=VARCHAR} </if>
		<if test="putawayModified!= null">  and putaway_modified = #{putawayModified,jdbcType=TIMESTAMP} </if>
		<if test="dateAtt2!= null">  and date_att2 = #{dateAtt2,jdbcType=TIMESTAMP} </if>
		<if test="productSmallTypeValue!= null">  and product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER} </if>
		<if test="putawayState!= null">  and putaway_state = #{putawayState,jdbcType=INTEGER} </if>
		<if test="fbxState!= null"> and fbx_state = #{fbxState,jdbcType=INTEGER} </if>
		<if test="fbxFileId!= null"> and fbx_file_id = #{fbxFileId,jdbcType=INTEGER} </if>
		<if test="fbxTexture!= null"> and fbx_texture = #{fbxTexture,jdbcType=VARCHAR} </if>
		<if test="numAtt3!= null">  and num_att3 = #{numAtt3,jdbcType=DOUBLE} </if>
		<if test="numAtt4!= null">  and num_att4 = #{numAtt4,jdbcType=DOUBLE} </if>
		<if test="remark!= null">  and remark = #{remark,jdbcType=VARCHAR} </if>
		<if test="productModelNumber!= null"> and product_model_number = #{productModelNumber,jdbcType=VARCHAR}</if>
		<if test="windowsU3dModelId != null"> and windows_u3dmodel_id = #{windowsU3dModelId,jdbcType=INTEGER}</if>
 
		<if test="order != null and  order !=''  ">
			order by ${order}
			<if test="orderNum != null and  orderNum !='' ">
				${orderNum}
			</if>
		</if>
		<if test="orders != null and  orders !=''  ">
		   order by ${orders}
		</if>
	</select>
	
	<select id="selectBasePaginatedList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.search.BaseProductSearch">
		select
		<include refid="Base_All_Column_List" />
		from base_product,res_file 
		WHERE 1 = 1 
		  AND base_product.fbx_file_id = res_file.id 
		  AND base_product.is_deleted = 0
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code like
			CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code like
			CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		</if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code like
			CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and
			#{sysCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="creator !=  null and creator !=  ''   "> and creator = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator like
			CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator like
			CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		</if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator like
			CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		</if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and
			#{creatorEnd,jdbcType=VARCHAR}
		</if>
		<if test="gmtCreate !=  null  ">
			and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
		</if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between
			#{gmtCreateStart,jdbcType=TIMESTAMP} and
			#{gmtCreateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier like
			CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier like
			CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		</if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier like
			CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		</if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and
			#{modifierEnd,jdbcType=VARCHAR}
		</if>
		<if test="gmtModified !=  null  ">
			and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
		</if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between
			#{gmtModifiedStart,jdbcType=TIMESTAMP} and
			#{gmtModifiedEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="isDeleted !=  null  "> and base_product.is_deleted =
			#{isDeleted,jdbcType=INTEGER} </if>
		<if test="spaceComonId !=  null  "> and spaceComon_id = #{spaceComonId,jdbcType=INTEGER} </if>
		<if test="productCode !=  null and productCode !=  ''   "> and product_code = #{productCode,jdbcType=VARCHAR} </if>
		<if test="sch_ProductCode_ !=  null and sch_ProductCode_ !=  ''   ">
			and product_code like
			CONCAT(CONCAT('%',#{sch_ProductCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductCode !=  null and sch_ProductCode !=  ''   ">
			and product_code like
			CONCAT('%',#{sch_ProductCode,jdbcType=VARCHAR})
		</if>
		<if test="schProductCode_ !=  null and schProductCode_ !=  ''   ">
			and product_code like
			CONCAT(#{schProductCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productCodeStart !=  null and productCodeEnd!= null  ">
			and product_code between
			#{productCodeStart,jdbcType=VARCHAR} and
			#{productCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="productName !=  null and productName !=  ''   ">
			and product_name like
			CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR} ),'%')
		</if>
		<if test="sch_ProductName_ !=  null and sch_ProductName_ !=  ''   ">
			and product_name like
			CONCAT(CONCAT('%',#{sch_ProductName_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductName !=  null and sch_ProductName !=  ''   ">
			and product_name like
			CONCAT('%',#{sch_ProductName,jdbcType=VARCHAR})
		</if>
		<if test="schProductName_ !=  null and schProductName_ !=  ''   ">
			and product_name like
			CONCAT(#{schProductName_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productNameStart !=  null and productNameEnd!= null  ">
			and product_name between
			#{productNameStart,jdbcType=VARCHAR} and
			#{productNameEnd,jdbcType=VARCHAR}
		</if>
		<if test="brandId !=  null  "> and brand_id = #{brandId,jdbcType=INTEGER} </if>
		<if test="parentId !=  null  "> and parent_id = #{parentId,jdbcType=INTEGER} </if>
		<if test="materialFileId !=  null  "> and material_file_id = #{materialFileId,jdbcType=INTEGER}
		</if>
		<if test="proStyleId !=  null  "> and pro_style_id = #{proStyleId,jdbcType=INTEGER} </if>
		<if test="productSpec !=  null and productSpec !=  ''   "> and product_spec = #{productSpec,jdbcType=VARCHAR} </if>
		<if test="sch_ProductSpec_ !=  null and sch_ProductSpec_ !=  ''   ">
			and product_spec like
			CONCAT(CONCAT('%',#{sch_ProductSpec_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductSpec !=  null and sch_ProductSpec !=  ''   ">
			and product_spec like
			CONCAT('%',#{sch_ProductSpec,jdbcType=VARCHAR})
		</if>
		<if test="schProductSpec_ !=  null and schProductSpec_ !=  ''   ">
			and product_spec like
			CONCAT(#{schProductSpec_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productSpecStart !=  null and productSpecEnd!= null  ">
			and product_spec between
			#{productSpecStart,jdbcType=VARCHAR} and
			#{productSpecEnd,jdbcType=VARCHAR}
		</if>
		<if test="colorId !=  null  "> and color_id = #{colorId,jdbcType=INTEGER} </if>
		<if test="productLength !=  null and productLength !=  ''   "> and product_length = #{productLength,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductLength_ !=  null and sch_ProductLength_ !=  ''   ">
			and product_length like
			CONCAT(CONCAT('%',#{sch_ProductLength_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductLength !=  null and sch_ProductLength !=  ''   ">
			and product_length like
			CONCAT('%',#{sch_ProductLength,jdbcType=VARCHAR})
		</if>
		<if test="schProductLength_ !=  null and schProductLength_ !=  ''   ">
			and product_length like
			CONCAT(#{schProductLength_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productLengthStart !=  null and productLengthEnd!= null  ">
			and product_length between
			#{productLengthStart,jdbcType=VARCHAR} and
			#{productLengthEnd,jdbcType=VARCHAR}
		</if>
		<if test="productWidth !=  null and productWidth !=  ''   "> and product_width = #{productWidth,jdbcType=VARCHAR} </if>
		<if test="sch_ProductWidth_ !=  null and sch_ProductWidth_ !=  ''   ">
			and product_width like
			CONCAT(CONCAT('%',#{sch_ProductWidth_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductWidth !=  null and sch_ProductWidth !=  ''   ">
			and product_width like
			CONCAT('%',#{sch_ProductWidth,jdbcType=VARCHAR})
		</if>
		<if test="schProductWidth_ !=  null and schProductWidth_ !=  ''   ">
			and product_width like
			CONCAT(#{schProductWidth_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productWidthStart !=  null and productWidthEnd!= null  ">
			and product_width between
			#{productWidthStart,jdbcType=VARCHAR} and
			#{productWidthEnd,jdbcType=VARCHAR}
		</if>
		<if test="productHeight !=  null and productHeight !=  ''   "> and product_height = #{productHeight,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductHeight_ !=  null and sch_ProductHeight_ !=  ''   ">
			and product_height like
			CONCAT(CONCAT('%',#{sch_ProductHeight_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductHeight !=  null and sch_ProductHeight !=  ''   ">
			and product_height like
			CONCAT('%',#{sch_ProductHeight,jdbcType=VARCHAR})
		</if>
		<if test="schProductHeight_ !=  null and schProductHeight_ !=  ''   ">
			and product_height like
			CONCAT(#{schProductHeight_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productHeightStart !=  null and productHeightEnd!= null  ">
			and product_height between
			#{productHeightStart,jdbcType=VARCHAR} and
			#{productHeightEnd,jdbcType=VARCHAR}
		</if>
		<if test="salePrice !=  null  "> and sale_price = #{salePrice,jdbcType=DOUBLE} </if>
		<if test="picId !=  null  "> and pic_id = #{picId,jdbcType=INTEGER} </if>
		<if test="modelId !=  null  "> and model_id = #{modelId,jdbcType=INTEGER} </if>
		<if test="productDesc !=  null and productDesc !=  ''   "> and product_desc = #{productDesc,jdbcType=VARCHAR} </if>
		<if test="sch_ProductDesc_ !=  null and sch_ProductDesc_ !=  ''   ">
			and product_desc like
			CONCAT(CONCAT('%',#{sch_ProductDesc_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductDesc !=  null and sch_ProductDesc !=  ''   ">
			and product_desc like
			CONCAT('%',#{sch_ProductDesc,jdbcType=VARCHAR})
		</if>
		<if test="schProductDesc_ !=  null and schProductDesc_ !=  ''   ">
			and product_desc like
			CONCAT(#{schProductDesc_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productDescStart !=  null and productDescEnd!= null  ">
			and product_desc between
			#{productDescStart,jdbcType=VARCHAR} and
			#{productDescEnd,jdbcType=VARCHAR}
		</if>
		<if test="picIds !=  null and picIds !=  ''   "> and pic_ids = #{picIds,jdbcType=VARCHAR} </if>
		<if test="sch_PicIds_ !=  null and sch_PicIds_ !=  ''   ">
			and pic_ids like
			CONCAT(CONCAT('%',#{sch_PicIds_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_PicIds !=  null and sch_PicIds !=  ''   ">
			and pic_ids like
			CONCAT('%',#{sch_PicIds,jdbcType=VARCHAR})
		</if>
		<if test="schPicIds_ !=  null and schPicIds_ !=  ''   ">
			and pic_ids like
			CONCAT(#{schPicIds_,jdbcType=VARCHAR},'%')
		</if>
		<if test="picIdsStart !=  null and picIdsEnd!= null  ">
			and pic_ids between #{picIdsStart,jdbcType=VARCHAR} and
			#{picIdsEnd,jdbcType=VARCHAR}
		</if>
		<if test="material3dPicIds !=  null and material3dPicIds !=  ''   "> and material3d_pic_ids =
			#{material3dPicIds,jdbcType=VARCHAR}
		</if>
		<if test="materialPicIds !=  null and materialPicIds !=  ''   "> and material_pic_ids = #{materialPicIds,jdbcType=VARCHAR}
		</if>
		<if test="sch_MaterialPicIds_ !=  null and sch_MaterialPicIds_ !=  ''   ">
			and material_pic_ids like
			CONCAT(CONCAT('%',#{sch_MaterialPicIds_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_MaterialPicIds !=  null and sch_MaterialPicIds !=  ''   ">
			and material_pic_ids like
			CONCAT('%',#{sch_MaterialPicIds,jdbcType=VARCHAR})
		</if>
		<if test="schMaterialPicIds_ !=  null and schMaterialPicIds_ !=  ''   ">
			and material_pic_ids like
			CONCAT(#{schMaterialPicIds_,jdbcType=VARCHAR},'%')
		</if>
		<if test="materialPicIdsStart !=  null and materialPicIdsEnd!= null  ">
			and material_pic_ids between
			#{materialPicIdsStart,jdbcType=VARCHAR} and
			#{materialPicIdsEnd,jdbcType=VARCHAR}
		</if>
		<if test="houseTypeValues !=  null and houseTypeValues !=  ''   "> and house_type_values =
			#{houseTypeValues,jdbcType=VARCHAR}
		</if>
		<if test="sch_HouseTypeValues_ !=  null and sch_HouseTypeValues_ !=  ''   ">
			and house_type_values like
			CONCAT(CONCAT('%',#{sch_HouseTypeValues_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_HouseTypeValues !=  null and sch_HouseTypeValues !=  ''   ">
			and house_type_values like
			CONCAT('%',#{sch_HouseTypeValues,jdbcType=VARCHAR})
		</if>
		<if test="schHouseTypeValues_ !=  null and schHouseTypeValues_ !=  ''   ">
			and house_type_values like
			CONCAT(#{schHouseTypeValues_,jdbcType=VARCHAR},'%')
		</if>
		<if test="houseTypeValuesStart !=  null and  houseTypeValuesEnd!= null  ">
			and house_type_values between
			#{houseTypeValuesStart,jdbcType=VARCHAR} and
			#{houseTypeValuesEnd,jdbcType=VARCHAR}
		</if>
		<if test="inHouseType !=  null and inHouseType !=  ''   ">
			and POSITION(CONCAT(CONCAT(',',#{inHouseType}),',') IN
			CONCAT(CONCAT(',',house_type_values),',')) >0
		</if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and product_type_value =
			#{productTypeValue,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductTypeValue_ !=  null and sch_ProductTypeValue_ !=  ''   ">
			and product_type_value like
			CONCAT(CONCAT('%',#{sch_ProductTypeValue_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductTypeValue !=  null and sch_ProductTypeValue !=  ''   ">
			and product_type_value like
			CONCAT('%',#{sch_ProductTypeValue,jdbcType=VARCHAR})
		</if>
		<if test="schProductTypeValue_ !=  null and schProductTypeValue_ !=  ''   ">
			and product_type_value like
			CONCAT(#{schProductTypeValue_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productTypeValueStart !=  null and productTypeValueEnd!= null  ">
			and product_type_value between
			#{productTypeValueStart,jdbcType=VARCHAR} and
			#{productTypeValueEnd,jdbcType=VARCHAR}
		</if>

		<if test="productTypeMark !=  null and productTypeMark !=  ''   "> and product_type_mark =
			#{productTypeMark,jdbcType=VARCHAR}
		</if>
		<if test="sch_ProductTypeMark_ !=  null and sch_ProductTypeMark_ !=  ''   ">
			and product_type_value like
			CONCAT(CONCAT('%',#{sch_ProductTypeMark_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductTypeMark !=  null and sch_ProductTypeMark !=  ''   ">
			and product_type_mark like
			CONCAT('%',#{sch_ProductTypeMark,jdbcType=VARCHAR})
		</if>
		<if test="schProductTypeMark_ !=  null and schProductTypeMark_ !=  ''   ">
			and product_type_mark like
			CONCAT(#{schProductTypeMark_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productTypeMarkStart !=  null and productTypeMarkEnd!= null  ">
			and product_type_mark between
			#{productTypeMarkStart,jdbcType=VARCHAR} and
			#{productTypeMarkEnd,jdbcType=VARCHAR}
		</if>
		<if test="productSmallTypeMark !=  null and productSmallTypeMark !=  ''   "> and product_small_type_mark =
			#{productSmallTypeMark,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductSmallTypeMark_ !=  null and sch_ProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark like
			CONCAT(CONCAT('%',#{sch_ProductSmallTypeMark_,jdbcType=VARCHAR}),'%')
		</if>
		<if
			test="sch_ProductSmallTypeMark !=  null and sch_ProductSmallTypeMark !=  ''   ">
			and product_small_type_mark like
			CONCAT('%',#{sch_ProductSmallTypeMark,jdbcType=VARCHAR})
		</if>
		<if
			test="schProductSmallTypeMark_ !=  null and schProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark like
			CONCAT(#{schProductSmallTypeMark_,jdbcType=VARCHAR},'%')
		</if>
		<if
			test="productSmallTypeMarkStart !=  null and productSmallTypeMarkEnd!= null  ">
			and product_small_type_mark between
			#{productSmallTypeMarkStart,jdbcType=VARCHAR} and
			#{productSmallTypeMarkEnd,jdbcType=VARCHAR}
		</if>

		<if test="productShortCode !=  null and productShortCode !=  ''   "> and product_short_code =
			#{productShortCode,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_ProductShortCode_ !=  null and sch_ProductShortCode_ !=  ''   ">
			and product_short_code like
			CONCAT(CONCAT('%',#{sch_ProductShortCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductShortCode !=  null and sch_ProductShortCode !=  ''   ">
			and product_short_code like
			CONCAT('%',#{sch_ProductShortCode,jdbcType=VARCHAR})
		</if>
		<if test="schProductShortCode_ !=  null and schProductShortCode_ !=  ''   ">
			and product_short_code like
			CONCAT(#{schProductShortCode_,jdbcType=VARCHAR},'%')
		</if>
		<if test="productShortCodeStart !=  null and productShortCodeEnd!= null  ">
			and product_short_code between
			#{productShortCodeStart,jdbcType=VARCHAR} and
			#{productShortCodeEnd,jdbcType=VARCHAR}
		</if>

		<if test="bmIds !=  null and bmIds !=  ''   "> and bm_ids = #{bmIds,jdbcType=VARCHAR} </if>
		<if test="originalProductCode !=  null and originalProductCode !=  ''   "> and original_product_code =
			#{originalProductCode,jdbcType=VARCHAR}
		</if>
		<if
			test="sch_OriginalProductCode_ !=  null and sch_OriginalProductCode_ !=  ''   ">
			and original_product_code like
			CONCAT(CONCAT('%',#{sch_OriginalProductCode_,jdbcType=VARCHAR}),'%')
		</if>
		<if
			test="sch_OriginalProductCode !=  null and sch_OriginalProductCode !=  ''   ">
			and original_product_code like
			CONCAT('%',#{sch_OriginalProductCode,jdbcType=VARCHAR})
		</if>
		<if
			test="schOriginalProductCode_ !=  null and schOriginalProductCode_ !=  ''   ">
			and original_product_code like
			CONCAT(#{schOriginalProductCode_,jdbcType=VARCHAR},'%')
		</if>
		<if
			test="originalProductCodeStart !=  null and originalProductCodeEnd!= null  ">
			and original_product_code between
			#{originalProductCodeStart,jdbcType=VARCHAR} and
			#{originalProductCodeEnd,jdbcType=VARCHAR}
		</if>
		<if test="codeNumber!= null"> and code_number = #{codeNumber,jdbcType=INTEGER} </if>
		<if test="designTempletId!= null"> and designTemplet_id =
			#{designTempletId,jdbcType=INTEGER}
		</if>
		<if test="u3dModelId !=  null and u3dModelId !=  ''   "> and u3dmodel_Id = #{u3dModelId,jdbcType=VARCHAR} </if>
		<if test="sch_U3dModelId_ !=  null and sch_U3dModelId_ !=  ''   ">
			and u3dmodel_Id like
			CONCAT(CONCAT('%',#{sch_U3dModelId_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_U3dModelId !=  null and sch_U3dModelId !=  ''   ">
			and u3dmodel_Id like
			CONCAT('%',#{sch_U3dModelId,jdbcType=VARCHAR})
		</if>
		<if test="schU3dModelId_ !=  null and schU3dModelId_ !=  ''   ">
			and u3dmodel_Id like
			CONCAT(#{schU3dModelId_,jdbcType=VARCHAR},'%')
		</if>
		<if test="u3dModelIdStart !=  null and u3dModelIdEnd!= null  ">
			and u3dmodel_Id between
			#{u3dModelIdStart,jdbcType=VARCHAR} and
			#{u3dModelIdEnd,jdbcType=VARCHAR}
		</if>
		<if test="mergeProductIds !=  null and mergeProductIds !=  ''   "> and merge_product_ids =
			#{mergeProductIds,jdbcType=VARCHAR}
		</if>

		<if test="dateAtt1 !=  null  ">
			and date_att1 = #{dateAtt1,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt1Start !=  null and dateAtt1End!= null  ">
			and date_att1 between #{dateAtt1Start,jdbcType=TIMESTAMP}
			and #{dateAtt1End,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt2 !=  null  ">
			and date_att2 = #{dateAtt2,jdbcType=TIMESTAMP}
		</if>
		<if test="dateAtt2Start !=  null and dateAtt2End!= null  ">
			and date_att2 between #{dateAtt2Start,jdbcType=TIMESTAMP}
			and #{dateAtt2End,jdbcType=TIMESTAMP}
		</if>
		<if test="productSmallTypeValue !=  null  "> and product_small_type_value =
			#{productSmallTypeValue,jdbcType=INTEGER}
		</if>
		<if test="putawayState !=  null  "> and putaway_state = #{putawayState,jdbcType=INTEGER} </if>
		<if test="fbxState!= null"> and fbx_state = #{fbxState,jdbcType=INTEGER} </if>
		<if test="fbxFileId!= null"> and fbx_file_id = #{fbxFileId,jdbcType=INTEGER} </if>
		<if test="fbxTexture!= null"> and fbx_texture = #{fbxTexture,jdbcType=VARCHAR} </if>
		<if test="numAtt3 !=  null  "> and num_att3 = #{numAtt3,jdbcType=DOUBLE} </if>
		<if test="numAtt4 !=  null  "> and num_att4 = #{numAtt4,jdbcType=DOUBLE} </if>
		<if test="remark !=  null and remark !=  ''   "> and remark = #{remark,jdbcType=VARCHAR} </if>
		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark like
			CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		</if>
		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		</if>
		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and
			#{remarkEnd,jdbcType=VARCHAR}
		</if>
		<if test="productModelNumber!= null"> product_model_number =
			#{productModelNumber,jdbcType=VARCHAR},
		</if>
		<if test="order != null and  order !=''  ">
			order by ${order}
			<if test="orderNum != null and  orderNum !='' ">${orderNum}</if>
		</if>
		<if test="orders != null and  orders !=''  "> order by #{orders}</if>
		<if test="order == null and  orders == null "> order by id desc</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>
	
	<!-- 分页汇总 -->
	<select id="selectCount" resultType="int"
		parameterType="com.nork.product.model.search.BaseProductSearch">
		select count(*)
		from base_product
		where 1=1
		<if test="spellingFlowerFileId!= null">and spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}  </if>
		<if test="spaceComonId !=  null  ">			and spaceComon_id  = #{spaceComonId,jdbcType=INTEGER} </if>
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code  = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="splitTexturesInfo !=  null and splitTexturesInfo !=  ''   "> and split_textures_info  = #{splitTexturesInfo,jdbcType=VARCHAR} </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code  like CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code  like CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		 </if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code  like CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and #{sysCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="creator !=  null and creator !=  ''   "> and creator  = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator  like CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator  like CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		 </if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator  like CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and #{creatorEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtCreate !=  null  ">
			and gmt_create  = #{gmtCreate,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between #{gmtCreateStart,jdbcType=TIMESTAMP} and #{gmtCreateEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier  = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier  like CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier  like CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		 </if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier  like CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and #{modifierEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtModified !=  null  ">
			and gmt_modified  = #{gmtModified,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between #{gmtModifiedStart,jdbcType=TIMESTAMP} and #{gmtModifiedEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="isDeleted !=  null  ">			and is_deleted  = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="productCode !=  null and productCode !=  ''   "> and product_code  = #{productCode,jdbcType=VARCHAR} </if>
		<if test="sch_ProductCode_ !=  null and sch_ProductCode_ !=  ''   ">
			and product_code  like CONCAT(CONCAT('%',#{sch_ProductCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductCode !=  null and sch_ProductCode !=  ''   ">
			and product_code  like CONCAT('%',#{sch_ProductCode,jdbcType=VARCHAR})
		 </if>
		<if test="schProductCode_ !=  null and schProductCode_ !=  ''   ">
			and product_code  like CONCAT(#{schProductCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productCodeStart !=  null and productCodeEnd!= null  ">
			and product_code between #{productCodeStart,jdbcType=VARCHAR} and #{productCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="productName !=  null and productName !=  ''   ">
			and product_name like CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR}),'%')
		</if>
		<if test="sch_ProductName_ !=  null and sch_ProductName_ !=  ''   ">
			and product_name  like CONCAT(CONCAT('%',#{sch_ProductName_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductName !=  null and sch_ProductName !=  ''   ">
			and product_name  like CONCAT('%',#{sch_ProductName,jdbcType=VARCHAR})
		 </if>
		<if test="schProductName_ !=  null and schProductName_ !=  ''   ">
			and product_name  like CONCAT(#{schProductName_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productNameStart !=  null and productNameEnd!= null  ">
			and product_name between #{productNameStart,jdbcType=VARCHAR} and #{productNameEnd,jdbcType=VARCHAR}
		 </if>
		<if test="brandId !=  null  ">			and brand_id  = #{brandId,jdbcType=INTEGER} </if>
		<if test="parentId !=  null  ">			and parent_id  = #{parentId,jdbcType=INTEGER} </if>
		<if test="materialFileId !=  null  ">			and material_file_id  = #{materialFileId,jdbcType=INTEGER} </if>
		<if test="proStyleId !=  null  ">			and pro_style_id  = #{proStyleId,jdbcType=INTEGER} </if>
		<if test="productSpec !=  null and productSpec !=  ''   "> and product_spec  = #{productSpec,jdbcType=VARCHAR} </if>
		<if test="sch_ProductSpec_ !=  null and sch_ProductSpec_ !=  ''   ">
			and product_spec  like CONCAT(CONCAT('%',#{sch_ProductSpec_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductSpec !=  null and sch_ProductSpec !=  ''   ">
			and product_spec  like CONCAT('%',#{sch_ProductSpec,jdbcType=VARCHAR})
		 </if>
		<if test="schProductSpec_ !=  null and schProductSpec_ !=  ''   ">
			and product_spec  like CONCAT(#{schProductSpec_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productSpecStart !=  null and productSpecEnd!= null  ">
			and product_spec between #{productSpecStart,jdbcType=VARCHAR} and #{productSpecEnd,jdbcType=VARCHAR}
		 </if>
		<if test="colorId !=  null  ">			and color_id  = #{colorId,jdbcType=INTEGER} </if>
		<if test="productLength !=  null and productLength !=  ''   "> and product_length  = #{productLength,jdbcType=VARCHAR} </if>
		<if test="sch_ProductLength_ !=  null and sch_ProductLength_ !=  ''   ">
			and product_length  like CONCAT(CONCAT('%',#{sch_ProductLength_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductLength !=  null and sch_ProductLength !=  ''   ">
			and product_length  like CONCAT('%',#{sch_ProductLength,jdbcType=VARCHAR})
		 </if>
		<if test="schProductLength_ !=  null and schProductLength_ !=  ''   ">
			and product_length  like CONCAT(#{schProductLength_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productLengthStart !=  null and productLengthEnd!= null  ">
			and product_length between #{productLengthStart,jdbcType=VARCHAR} and #{productLengthEnd,jdbcType=VARCHAR}
		 </if>
		<if test="productWidth !=  null and productWidth !=  ''   "> and product_width  = #{productWidth,jdbcType=VARCHAR} </if>
		<if test="sch_ProductWidth_ !=  null and sch_ProductWidth_ !=  ''   ">
			and product_width  like CONCAT(CONCAT('%',#{sch_ProductWidth_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductWidth !=  null and sch_ProductWidth !=  ''   ">
			and product_width  like CONCAT('%',#{sch_ProductWidth,jdbcType=VARCHAR})
		 </if>
		<if test="schProductWidth_ !=  null and schProductWidth_ !=  ''   ">
			and product_width  like CONCAT(#{schProductWidth_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productWidthStart !=  null and productWidthEnd!= null  ">
			and product_width between #{productWidthStart,jdbcType=VARCHAR} and #{productWidthEnd,jdbcType=VARCHAR}
		 </if>
		<if test="productHeight !=  null and productHeight !=  ''   "> and product_height  = #{productHeight,jdbcType=VARCHAR} </if>
		<if test="sch_ProductHeight_ !=  null and sch_ProductHeight_ !=  ''   ">
			and product_height  like CONCAT(CONCAT('%',#{sch_ProductHeight_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductHeight !=  null and sch_ProductHeight !=  ''   ">
			and product_height  like CONCAT('%',#{sch_ProductHeight,jdbcType=VARCHAR})
		 </if>
		<if test="schProductHeight_ !=  null and schProductHeight_ !=  ''   ">
			and product_height  like CONCAT(#{schProductHeight_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productHeightStart !=  null and productHeightEnd!= null  ">
			and product_height between #{productHeightStart,jdbcType=VARCHAR} and #{productHeightEnd,jdbcType=VARCHAR}
		 </if>
		<if test="salePrice !=  null  ">			and sale_price  = #{salePrice,jdbcType=DOUBLE} </if>
		<if test="picId !=  null  ">			and pic_id  = #{picId,jdbcType=INTEGER} </if>
		<if test="modelId !=  null  ">			and model_id  = #{modelId,jdbcType=INTEGER} </if>
		<if test="productDesc !=  null and productDesc !=  ''   "> and product_desc  = #{productDesc,jdbcType=VARCHAR} </if>
		<if test="sch_ProductDesc_ !=  null and sch_ProductDesc_ !=  ''   ">
			and product_desc  like CONCAT(CONCAT('%',#{sch_ProductDesc_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductDesc !=  null and sch_ProductDesc !=  ''   ">
			and product_desc  like CONCAT('%',#{sch_ProductDesc,jdbcType=VARCHAR})
		 </if>
		<if test="schProductDesc_ !=  null and schProductDesc_ !=  ''   ">
			and product_desc  like CONCAT(#{schProductDesc_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productDescStart !=  null and productDescEnd!= null  ">
			and product_desc between #{productDescStart,jdbcType=VARCHAR} and #{productDescEnd,jdbcType=VARCHAR}
		 </if>
		<if test="picIds !=  null and picIds !=  ''   "> and pic_ids  = #{picIds,jdbcType=VARCHAR} </if>
		<if test="sch_PicIds_ !=  null and sch_PicIds_ !=  ''   ">
			and pic_ids  like CONCAT(CONCAT('%',#{sch_PicIds_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_PicIds !=  null and sch_PicIds !=  ''   ">
			and pic_ids  like CONCAT('%',#{sch_PicIds,jdbcType=VARCHAR})
		 </if>
		<if test="schPicIds_ !=  null and schPicIds_ !=  ''   ">
			and pic_ids  like CONCAT(#{schPicIds_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="picIdsStart !=  null and picIdsEnd!= null  ">
			and pic_ids between #{picIdsStart,jdbcType=VARCHAR} and #{picIdsEnd,jdbcType=VARCHAR}
		 </if>
		<if test="material3dPicIds !=  null and material3dPicIds !=  ''   "> and material3d_pic_ids  = #{material3dPicIds,jdbcType=VARCHAR} </if>
		<if test="sch_MaterialPicIds_ !=  null and sch_MaterialPicIds_ !=  ''   ">
			and material_pic_ids  like CONCAT(CONCAT('%',#{sch_MaterialPicIds_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_MaterialPicIds !=  null and sch_MaterialPicIds !=  ''   ">
			and material_pic_ids  like CONCAT('%',#{sch_MaterialPicIds,jdbcType=VARCHAR})
		 </if>
		<if test="schMaterialPicIds_ !=  null and schMaterialPicIds_ !=  ''   ">
			and material_pic_ids  like CONCAT(#{schMaterialPicIds_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="materialPicIdsStart !=  null and materialPicIdsEnd!= null  ">
			and material_pic_ids between #{materialPicIdsStart,jdbcType=VARCHAR} and #{materialPicIdsEnd,jdbcType=VARCHAR}
		 </if>
		<if test="houseTypeValues !=  null and houseTypeValues !=  ''   "> and house_type_values  = #{houseTypeValues,jdbcType=VARCHAR} </if>
		<if test="sch_HouseTypeValues_ !=  null and sch_HouseTypeValues_ !=  ''   ">
			and house_type_values  like CONCAT(CONCAT('%',#{sch_HouseTypeValues_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_HouseTypeValues !=  null and sch_HouseTypeValues !=  ''   ">
			and house_type_values  like CONCAT('%',#{sch_HouseTypeValues,jdbcType=VARCHAR})
		 </if>
		<if test="schHouseTypeValues_ !=  null and schHouseTypeValues_ !=  ''   ">
			and house_type_values  like CONCAT(#{schHouseTypeValues_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="houseTypeValuesStart !=  null and  houseTypeValuesEnd!= null  ">
			and house_type_values between #{houseTypeValuesStart,jdbcType=VARCHAR} and #{houseTypeValuesEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="inHouseType !=  null and inHouseType !=  ''   ">
			and POSITION(CONCAT(CONCAT(',',#{inHouseType}),',') IN CONCAT(CONCAT(',',house_type_values),',')) >0
		 </if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and product_type_value  = #{productTypeValue,jdbcType=VARCHAR} </if>
		<if test="sch_ProductTypeValue_ !=  null and sch_ProductTypeValue_ !=  ''   ">
			and product_type_value  like CONCAT(CONCAT('%',#{sch_ProductTypeValue_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductTypeValue !=  null and sch_ProductTypeValue !=  ''   ">
			and product_type_value  like CONCAT('%',#{sch_ProductTypeValue,jdbcType=VARCHAR})
		 </if>
		<if test="schProductTypeValue_ !=  null and schProductTypeValue_ !=  ''   ">
			and product_type_value  like CONCAT(#{schProductTypeValue_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productTypeValueStart !=  null and productTypeValueEnd!= null  ">
			and product_type_value between #{productTypeValueStart,jdbcType=VARCHAR} and #{productTypeValueEnd,jdbcType=VARCHAR}
		 </if>
		 
		 <if test="productTypeMark !=  null and productTypeMark !=  ''   "> and product_type_mark  = #{productTypeMark,jdbcType=VARCHAR} </if>
		<if test="sch_ProductTypeMark_ !=  null and sch_ProductTypeMark_ !=  ''   ">
			and product_type_value  like CONCAT(CONCAT('%',#{sch_ProductTypeMark_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductTypeMark !=  null and sch_ProductTypeMark !=  ''   ">
			and product_type_mark  like CONCAT('%',#{sch_ProductTypeMark,jdbcType=VARCHAR})
		 </if>
		<if test="schProductTypeMark_ !=  null and schProductTypeMark_ !=  ''   ">
			and product_type_mark  like CONCAT(#{schProductTypeMark_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productTypeMarkStart !=  null and productTypeMarkEnd!= null  ">
			and product_type_mark between #{productTypeMarkStart,jdbcType=VARCHAR} and #{productTypeMarkEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="productSmallTypeMark !=  null and productSmallTypeMark !=  ''   "> and product_small_type_mark  = #{productSmallTypeMark,jdbcType=VARCHAR} </if>
		<if test="sch_ProductSmallTypeMark_ !=  null and sch_ProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark  like CONCAT(CONCAT('%',#{sch_ProductSmallTypeMark_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductSmallTypeMark !=  null and sch_ProductSmallTypeMark !=  ''   ">
			and product_small_type_mark  like CONCAT('%',#{sch_ProductSmallTypeMark,jdbcType=VARCHAR})
		 </if>
		<if test="schProductSmallTypeMark_ !=  null and schProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark  like CONCAT(#{schProductSmallTypeMark_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productSmallTypeMarkStart !=  null and productSmallTypeMarkEnd!= null  ">
			and product_small_type_mark between #{productSmallTypeMarkStart,jdbcType=VARCHAR} and #{productSmallTypeMarkEnd,jdbcType=VARCHAR}
		 </if>
		 
		<if test="productShortCode !=  null and productShortCode !=  ''   "> and product_short_code  = #{productShortCode,jdbcType=VARCHAR} </if>
		<if test="sch_ProductShortCode_ !=  null and sch_ProductShortCode_ !=  ''   ">
			and product_short_code  like CONCAT(CONCAT('%',#{sch_ProductShortCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductShortCode !=  null and sch_ProductShortCode !=  ''   ">
			and product_short_code  like CONCAT('%',#{sch_ProductShortCode,jdbcType=VARCHAR})
		 </if>
		<if test="schProductShortCode_ !=  null and schProductShortCode_ !=  ''   ">
			and product_short_code  like CONCAT(#{schProductShortCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productShortCodeStart !=  null and productShortCodeEnd!= null  ">
			and product_short_code between #{productShortCodeStart,jdbcType=VARCHAR} and #{productShortCodeEnd,jdbcType=VARCHAR}
		 </if>
		 
		<if test="bmIds !=  null and bmIds !=  ''   "> and bm_ids  = #{bmIds,jdbcType=VARCHAR} </if>
		<if test="originalProductCode !=  null and originalProductCode !=  ''   "> and original_product_code  = #{originalProductCode,jdbcType=VARCHAR} </if>
		<if test="sch_OriginalProductCode_ !=  null and sch_OriginalProductCode_ !=  ''   ">
			and original_product_code  like CONCAT(CONCAT('%',#{sch_OriginalProductCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_OriginalProductCode !=  null and sch_OriginalProductCode !=  ''   ">
			and original_product_code  like CONCAT('%',#{sch_OriginalProductCode,jdbcType=VARCHAR})
		 </if>
		<if test="schOriginalProductCode_ !=  null and schOriginalProductCode_ !=  ''   ">
			and original_product_code  like CONCAT(#{schOriginalProductCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="originalProductCodeStart !=  null and originalProductCodeEnd!= null  ">
			and original_product_code between #{originalProductCodeStart,jdbcType=VARCHAR} and #{originalProductCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="codeNumber!= null">  and code_number = #{codeNumber,jdbcType=INTEGER} </if> 
		<if test="designTempletId!= null">  and designTemplet_id = #{designTempletId,jdbcType=INTEGER} </if> 
		<if test="u3dModelId !=  null and u3dModelId !=  ''   "> and u3dmodel_Id  = #{u3dModelId,jdbcType=VARCHAR} </if>
		<if test="sch_U3dModelId_ !=  null and sch_U3dModelId_ !=  ''   ">
			and u3dmodel_Id  like CONCAT(CONCAT('%',#{sch_U3dModelId_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_U3dModelId !=  null and sch_U3dModelId !=  ''   ">
			and u3dmodel_Id  like CONCAT('%',#{sch_U3dModelId,jdbcType=VARCHAR})
		 </if>
		<if test="schU3dModelId_ !=  null and schU3dModelId_ !=  ''   ">
			and u3dmodel_Id  like CONCAT(#{schU3dModelId_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="u3dModelIdStart !=  null and u3dModelIdEnd!= null  ">
			and u3dmodel_Id between #{u3dModelIdStart,jdbcType=VARCHAR} and #{u3dModelIdEnd,jdbcType=VARCHAR}
		 </if>
		<if test="mergeProductIds !=  null and mergeProductIds !=  ''   "> and merge_product_ids  = #{mergeProductIds,jdbcType=VARCHAR} </if>
		
		<if test="putawayModified !=  null  ">
			and putaway_modified  = #{putawayModified,jdbcType=TIMESTAMP}
		 </if>
		<if test="putawayModifiedStart !=  null and putawayModifiedEnd!= null  ">
			and putaway_modified between #{putawayModifiedStart,jdbcType=TIMESTAMP} and #{putawayModifiedEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="dateAtt2 !=  null  ">
			and date_att2  = #{dateAtt2,jdbcType=TIMESTAMP}
		 </if>
		<if test="dateAtt2Start !=  null and dateAtt2End!= null  ">
			and date_att2 between #{dateAtt2Start,jdbcType=TIMESTAMP} and #{dateAtt2End,jdbcType=TIMESTAMP}
		 </if>
		<if test="productSmallTypeValue !=  null  ">			and product_small_type_value  = #{productSmallTypeValue,jdbcType=INTEGER} </if>
		<if test="putawayState !=  null  ">			and putaway_state  = #{putawayState,jdbcType=INTEGER} </if>
		<if test="numAtt3 !=  null  ">			and num_att3  = #{numAtt3,jdbcType=DOUBLE} </if>
		<if test="numAtt4 !=  null  ">			and num_att4  = #{numAtt4,jdbcType=DOUBLE} </if>
		<if test="remark !=  null and remark !=  ''   "> and remark  = #{remark,jdbcType=VARCHAR} </if>		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark  like CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		 </if>		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark  like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		 </if>		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark  like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		 </if>		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and #{remarkEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="productModelNumber!= null"> product_model_number = #{productModelNumber,jdbcType=VARCHAR},</if>
	</select>
	
	<!-- 分页查询 ,可在BaseProductSearch中自定义查询条件-->
	<select id="selectPaginatedList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.search.BaseProductSearch">
		select
		<include refid="All_Column_List" />
	    from base_product
		where 1=1	
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code  = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="splitTexturesInfo !=  null and splitTexturesInfo !=  ''   "> and split_textures_info  = #{splitTexturesInfo,jdbcType=VARCHAR} </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code  like CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code  like CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		 </if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code  like CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and #{sysCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="creator !=  null and creator !=  ''   "> and creator  = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator  like CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator  like CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		 </if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator  like CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and #{creatorEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtCreate !=  null  ">
			and gmt_create  = #{gmtCreate,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between #{gmtCreateStart,jdbcType=TIMESTAMP} and #{gmtCreateEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier  = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier  like CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier  like CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		 </if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier  like CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and #{modifierEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtModified !=  null  ">
			and gmt_modified  = #{gmtModified,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between #{gmtModifiedStart,jdbcType=TIMESTAMP} and #{gmtModifiedEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="isDeleted !=  null  ">			and is_deleted  = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="spaceComonId !=  null  ">			and spaceComon_id  = #{spaceComonId,jdbcType=INTEGER} </if>
		<if test="productCode !=  null and productCode !=  ''   "> and product_code  = #{productCode,jdbcType=VARCHAR} </if>
		
		<if test="sch_ProductCode_ !=  null and sch_ProductCode_ !=  ''   ">
			and product_code  like CONCAT(CONCAT('%',#{sch_ProductCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductCode !=  null and sch_ProductCode !=  ''   ">
			and product_code  like CONCAT('%',#{sch_ProductCode,jdbcType=VARCHAR})
		 </if>
		<if test="schProductCode_ !=  null and schProductCode_ !=  ''   ">
			and product_code  like CONCAT(#{schProductCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productCodeStart !=  null and productCodeEnd!= null  ">
			and product_code between #{productCodeStart,jdbcType=VARCHAR} and #{productCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="productName !=  null and productName !=  ''   ">
			and product_name like CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR} ),'%')
		</if>
		<if test="sch_ProductName_ !=  null and sch_ProductName_ !=  ''   ">
			and product_name  like CONCAT(CONCAT('%',#{sch_ProductName_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductName !=  null and sch_ProductName !=  ''   ">
			and product_name  like CONCAT('%',#{sch_ProductName,jdbcType=VARCHAR})
		 </if>
		<if test="schProductName_ !=  null and schProductName_ !=  ''   ">
			and product_name  like CONCAT(#{schProductName_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productNameStart !=  null and productNameEnd!= null  ">
			and product_name between #{productNameStart,jdbcType=VARCHAR} and #{productNameEnd,jdbcType=VARCHAR}
		 </if>
		<if test="brandId !=  null  ">			and brand_id  = #{brandId,jdbcType=INTEGER} </if>
		<if test="parentId !=  null  ">			and parent_id  = #{parentId,jdbcType=INTEGER} </if>
		<if test="materialFileId !=  null  ">			and material_file_id  = #{materialFileId,jdbcType=INTEGER} </if>
		<if test="proStyleId !=  null  ">			and pro_style_id  = #{proStyleId,jdbcType=INTEGER} </if>
		<if test="productSpec !=  null and productSpec !=  ''   "> and product_spec  = #{productSpec,jdbcType=VARCHAR} </if>
		<if test="sch_ProductSpec_ !=  null and sch_ProductSpec_ !=  ''   ">
			and product_spec  like CONCAT(CONCAT('%',#{sch_ProductSpec_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductSpec !=  null and sch_ProductSpec !=  ''   ">
			and product_spec  like CONCAT('%',#{sch_ProductSpec,jdbcType=VARCHAR})
		 </if>
		<if test="schProductSpec_ !=  null and schProductSpec_ !=  ''   ">
			and product_spec  like CONCAT(#{schProductSpec_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productSpecStart !=  null and productSpecEnd!= null  ">
			and product_spec between #{productSpecStart,jdbcType=VARCHAR} and #{productSpecEnd,jdbcType=VARCHAR}
		 </if>
		<if test="colorId !=  null  ">			and color_id  = #{colorId,jdbcType=INTEGER} </if>
		<if test="productLength !=  null and productLength !=  ''   "> and product_length  = #{productLength,jdbcType=VARCHAR} </if>
		<if test="sch_ProductLength_ !=  null and sch_ProductLength_ !=  ''   ">
			and product_length  like CONCAT(CONCAT('%',#{sch_ProductLength_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductLength !=  null and sch_ProductLength !=  ''   ">
			and product_length  like CONCAT('%',#{sch_ProductLength,jdbcType=VARCHAR})
		 </if>
		<if test="schProductLength_ !=  null and schProductLength_ !=  ''   ">
			and product_length  like CONCAT(#{schProductLength_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productLengthStart !=  null and productLengthEnd!= null  ">
			and product_length between #{productLengthStart,jdbcType=VARCHAR} and #{productLengthEnd,jdbcType=VARCHAR}
		 </if>
		<if test="productWidth !=  null and productWidth !=  ''   "> and product_width  = #{productWidth,jdbcType=VARCHAR} </if>
		<if test="sch_ProductWidth_ !=  null and sch_ProductWidth_ !=  ''   ">
			and product_width  like CONCAT(CONCAT('%',#{sch_ProductWidth_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductWidth !=  null and sch_ProductWidth !=  ''   ">
			and product_width  like CONCAT('%',#{sch_ProductWidth,jdbcType=VARCHAR})
		 </if>
		<if test="schProductWidth_ !=  null and schProductWidth_ !=  ''   ">
			and product_width  like CONCAT(#{schProductWidth_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productWidthStart !=  null and productWidthEnd!= null  ">
			and product_width between #{productWidthStart,jdbcType=VARCHAR} and #{productWidthEnd,jdbcType=VARCHAR}
		 </if>
		<if test="productHeight !=  null and productHeight !=  ''   "> and product_height  = #{productHeight,jdbcType=VARCHAR} </if>
		<if test="sch_ProductHeight_ !=  null and sch_ProductHeight_ !=  ''   ">
			and product_height  like CONCAT(CONCAT('%',#{sch_ProductHeight_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductHeight !=  null and sch_ProductHeight !=  ''   ">
			and product_height  like CONCAT('%',#{sch_ProductHeight,jdbcType=VARCHAR})
		 </if>
		<if test="schProductHeight_ !=  null and schProductHeight_ !=  ''   ">
			and product_height  like CONCAT(#{schProductHeight_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productHeightStart !=  null and productHeightEnd!= null  ">
			and product_height between #{productHeightStart,jdbcType=VARCHAR} and #{productHeightEnd,jdbcType=VARCHAR}
		 </if>
		<if test="salePrice !=  null  ">			and sale_price  = #{salePrice,jdbcType=DOUBLE} </if>
		<if test="picId !=  null  ">			and pic_id  = #{picId,jdbcType=INTEGER} </if>
		<if test="modelId !=  null  ">			and model_id  = #{modelId,jdbcType=INTEGER} </if>
		<if test="productDesc !=  null and productDesc !=  ''   "> and product_desc  = #{productDesc,jdbcType=VARCHAR} </if>
		<if test="sch_ProductDesc_ !=  null and sch_ProductDesc_ !=  ''   ">
			and product_desc  like CONCAT(CONCAT('%',#{sch_ProductDesc_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductDesc !=  null and sch_ProductDesc !=  ''   ">
			and product_desc  like CONCAT('%',#{sch_ProductDesc,jdbcType=VARCHAR})
		 </if>
		<if test="schProductDesc_ !=  null and schProductDesc_ !=  ''   ">
			and product_desc  like CONCAT(#{schProductDesc_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productDescStart !=  null and productDescEnd!= null  ">
			and product_desc between #{productDescStart,jdbcType=VARCHAR} and #{productDescEnd,jdbcType=VARCHAR}
		 </if>
		<if test="picIds !=  null and picIds !=  ''   "> and pic_ids  = #{picIds,jdbcType=VARCHAR} </if>
		<if test="sch_PicIds_ !=  null and sch_PicIds_ !=  ''   ">
			and pic_ids  like CONCAT(CONCAT('%',#{sch_PicIds_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_PicIds !=  null and sch_PicIds !=  ''   ">
			and pic_ids  like CONCAT('%',#{sch_PicIds,jdbcType=VARCHAR})
		 </if>
		<if test="schPicIds_ !=  null and schPicIds_ !=  ''   ">
			and pic_ids  like CONCAT(#{schPicIds_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="picIdsStart !=  null and picIdsEnd!= null  ">
			and pic_ids between #{picIdsStart,jdbcType=VARCHAR} and #{picIdsEnd,jdbcType=VARCHAR}
		 </if>
		<if test="material3dPicIds !=  null and material3dPicIds !=  ''   "> and material3d_pic_ids  = #{material3dPicIds,jdbcType=VARCHAR} </if>
		<if test="materialPicIds !=  null and materialPicIds !=  ''   "> and material_pic_ids  = #{materialPicIds,jdbcType=VARCHAR} </if>
		<if test="sch_MaterialPicIds_ !=  null and sch_MaterialPicIds_ !=  ''   ">
			and material_pic_ids  like CONCAT(CONCAT('%',#{sch_MaterialPicIds_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_MaterialPicIds !=  null and sch_MaterialPicIds !=  ''   ">
			and material_pic_ids  like CONCAT('%',#{sch_MaterialPicIds,jdbcType=VARCHAR})
		 </if>
		<if test="schMaterialPicIds_ !=  null and schMaterialPicIds_ !=  ''   ">
			and material_pic_ids  like CONCAT(#{schMaterialPicIds_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="materialPicIdsStart !=  null and materialPicIdsEnd!= null  ">
			and material_pic_ids between #{materialPicIdsStart,jdbcType=VARCHAR} and #{materialPicIdsEnd,jdbcType=VARCHAR}
		 </if>
		<if test="houseTypeValues !=  null and houseTypeValues !=  ''   "> and house_type_values  = #{houseTypeValues,jdbcType=VARCHAR} </if>
		<if test="sch_HouseTypeValues_ !=  null and sch_HouseTypeValues_ !=  ''   ">
			and house_type_values  like CONCAT(CONCAT('%',#{sch_HouseTypeValues_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_HouseTypeValues !=  null and sch_HouseTypeValues !=  ''   ">
			and house_type_values  like CONCAT('%',#{sch_HouseTypeValues,jdbcType=VARCHAR})
		 </if>
		<if test="schHouseTypeValues_ !=  null and schHouseTypeValues_ !=  ''   ">
			and house_type_values  like CONCAT(#{schHouseTypeValues_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="houseTypeValuesStart !=  null and  houseTypeValuesEnd!= null  ">
			and house_type_values between #{houseTypeValuesStart,jdbcType=VARCHAR} and #{houseTypeValuesEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="inHouseType !=  null and inHouseType !=  ''   ">
			and POSITION(CONCAT(CONCAT(',',#{inHouseType}),',') IN CONCAT(CONCAT(',',house_type_values),',')) >0
		 </if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and product_type_value  = #{productTypeValue,jdbcType=VARCHAR} </if>
		<if test="sch_ProductTypeValue_ !=  null and sch_ProductTypeValue_ !=  ''   ">
			and product_type_value  like CONCAT(CONCAT('%',#{sch_ProductTypeValue_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductTypeValue !=  null and sch_ProductTypeValue !=  ''   ">
			and product_type_value  like CONCAT('%',#{sch_ProductTypeValue,jdbcType=VARCHAR})
		 </if>
		<if test="schProductTypeValue_ !=  null and schProductTypeValue_ !=  ''   ">
			and product_type_value  like CONCAT(#{schProductTypeValue_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productTypeValueStart !=  null and productTypeValueEnd!= null  ">
			and product_type_value between #{productTypeValueStart,jdbcType=VARCHAR} and #{productTypeValueEnd,jdbcType=VARCHAR}
		 </if>
		 
		 <if test="productTypeMark !=  null and productTypeMark !=  ''   "> and product_type_mark  = #{productTypeMark,jdbcType=VARCHAR} </if>
		<if test="sch_ProductTypeMark_ !=  null and sch_ProductTypeMark_ !=  ''   ">
			and product_type_value  like CONCAT(CONCAT('%',#{sch_ProductTypeMark_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductTypeMark !=  null and sch_ProductTypeMark !=  ''   ">
			and product_type_mark  like CONCAT('%',#{sch_ProductTypeMark,jdbcType=VARCHAR})
		 </if>
		<if test="schProductTypeMark_ !=  null and schProductTypeMark_ !=  ''   ">
			and product_type_mark  like CONCAT(#{schProductTypeMark_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productTypeMarkStart !=  null and productTypeMarkEnd!= null  ">
			and product_type_mark between #{productTypeMarkStart,jdbcType=VARCHAR} and #{productTypeMarkEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="productSmallTypeMark !=  null and productSmallTypeMark !=  ''   "> and product_small_type_mark  = #{productSmallTypeMark,jdbcType=VARCHAR} </if>
		<if test="sch_ProductSmallTypeMark_ !=  null and sch_ProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark  like CONCAT(CONCAT('%',#{sch_ProductSmallTypeMark_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductSmallTypeMark !=  null and sch_ProductSmallTypeMark !=  ''   ">
			and product_small_type_mark  like CONCAT('%',#{sch_ProductSmallTypeMark,jdbcType=VARCHAR})
		 </if>
		<if test="schProductSmallTypeMark_ !=  null and schProductSmallTypeMark_ !=  ''   ">
			and product_small_type_mark  like CONCAT(#{schProductSmallTypeMark_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productSmallTypeMarkStart !=  null and productSmallTypeMarkEnd!= null  ">
			and product_small_type_mark between #{productSmallTypeMarkStart,jdbcType=VARCHAR} and #{productSmallTypeMarkEnd,jdbcType=VARCHAR}
		 </if>
		 
		 <if test="productShortCode !=  null and productShortCode !=  ''   "> and product_short_code  = #{productShortCode,jdbcType=VARCHAR} </if>
		<if test="sch_ProductShortCode_ !=  null and sch_ProductShortCode_ !=  ''   ">
			and product_short_code  like CONCAT(CONCAT('%',#{sch_ProductShortCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductShortCode !=  null and sch_ProductShortCode !=  ''   ">
			and product_short_code  like CONCAT('%',#{sch_ProductShortCode,jdbcType=VARCHAR})
		 </if>
		<if test="schProductShortCode_ !=  null and schProductShortCode_ !=  ''   ">
			and product_short_code  like CONCAT(#{schProductShortCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="productShortCodeStart !=  null and productShortCodeEnd!= null  ">
			and product_short_code between #{productShortCodeStart,jdbcType=VARCHAR} and #{productShortCodeEnd,jdbcType=VARCHAR}
		 </if>
		 
		<if test="bmIds !=  null and bmIds !=  ''   "> and bm_ids  = #{bmIds,jdbcType=VARCHAR} </if>
		<if test="originalProductCode !=  null and originalProductCode !=  ''   "> and original_product_code  = #{originalProductCode,jdbcType=VARCHAR} </if>
		<if test="sch_OriginalProductCode_ !=  null and sch_OriginalProductCode_ !=  ''   ">
			and original_product_code  like CONCAT(CONCAT('%',#{sch_OriginalProductCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_OriginalProductCode !=  null and sch_OriginalProductCode !=  ''   ">
			and original_product_code  like CONCAT('%',#{sch_OriginalProductCode,jdbcType=VARCHAR})
		 </if>
		<if test="schOriginalProductCode_ !=  null and schOriginalProductCode_ !=  ''   ">
			and original_product_code  like CONCAT(#{schOriginalProductCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="originalProductCodeStart !=  null and originalProductCodeEnd!= null  ">
			and original_product_code between #{originalProductCodeStart,jdbcType=VARCHAR} and #{originalProductCodeEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="codeNumber!= null">  and code_number = #{codeNumber,jdbcType=INTEGER} </if>
		 <if test="designTempletId!= null">  and designTemplet_id = #{designTempletId,jdbcType=INTEGER} </if>
		<if test="u3dModelId !=  null and u3dModelId !=  ''   "> and u3dmodel_Id  = #{u3dModelId,jdbcType=VARCHAR} </if>
		<if test="sch_U3dModelId_ !=  null and sch_U3dModelId_ !=  ''   ">
			and u3dmodel_Id  like CONCAT(CONCAT('%',#{sch_U3dModelId_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_U3dModelId !=  null and sch_U3dModelId !=  ''   ">
			and u3dmodel_Id  like CONCAT('%',#{sch_U3dModelId,jdbcType=VARCHAR})
		 </if>
		<if test="schU3dModelId_ !=  null and schU3dModelId_ !=  ''   ">
			and u3dmodel_Id  like CONCAT(#{schU3dModelId_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="u3dModelIdStart !=  null and u3dModelIdEnd!= null  ">
			and u3dmodel_Id between #{u3dModelIdStart,jdbcType=VARCHAR} and #{u3dModelIdEnd,jdbcType=VARCHAR}
		 </if>
		<if test="mergeProductIds !=  null and mergeProductIds !=  ''   "> and merge_product_ids  = #{mergeProductIds,jdbcType=VARCHAR} </if>
		
		<if test="putawayModified !=  null  ">
			and putaway_modified  = #{putawayModified,jdbcType=TIMESTAMP}
		 </if>
		<if test="putawayModifiedStart !=  null and putawayModifiedEnd!= null  ">
			and putaway_modified between #{putawayModifiedStart,jdbcType=TIMESTAMP} and #{putawayModifiedEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="dateAtt2 !=  null  ">
			and date_att2  = #{dateAtt2,jdbcType=TIMESTAMP}
		 </if>
		<if test="dateAtt2Start !=  null and dateAtt2End!= null  ">
			and date_att2 between #{dateAtt2Start,jdbcType=TIMESTAMP} and #{dateAtt2End,jdbcType=TIMESTAMP}
		 </if>
		<if test="productSmallTypeValue !=  null  ">			and product_small_type_value  = #{productSmallTypeValue,jdbcType=INTEGER} </if>
		<if test="putawayState !=  null  ">			and putaway_state  = #{putawayState,jdbcType=INTEGER} </if>
		<if test="numAtt3 !=  null  ">			and num_att3  = #{numAtt3,jdbcType=DOUBLE} </if>
		<if test="numAtt4 !=  null  ">			and num_att4  = #{numAtt4,jdbcType=DOUBLE} </if>
		<if test="remark !=  null and remark !=  ''   "> and remark  = #{remark,jdbcType=VARCHAR} </if>		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark  like CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		 </if>		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark  like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		 </if>		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark  like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		 </if>		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and #{remarkEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="productModelNumber!= null"> product_model_number = #{productModelNumber,jdbcType=VARCHAR},</if>
		<if test="order != null and  order !=''  ">
			order by ${order} <if test="orderNum != null and  orderNum !='' ">${orderNum}</if>
		</if>
		<if test="orders != null and  orders !=''  ">  order by #{orders}</if>
		<if test="order == null and  orders == null ">  order by id desc</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>
	

    <!-- 其他Map等查询方式 -->
    <select id="selestProductStyle"  resultMap="AllResultMap" parameterType="java.lang.Integer">
		SELECT  DISTINCT pro.pro_style_id 
		FROM    base_product pro,design_plan_product plan
		where pro.id  =  plan.product_id
		AND   plan.plan_id=#{planId}
    </select>
     <!-- end-->

	<!-- 分类关联产品搜索结果 -->
	<resultMap id="productSearchResultMap" type="com.nork.product.model.CategoryProductResult">
		<id column="product_id" property="productId" jdbcType="INTEGER"/>
		<result column="product_name" property="productName" jdbcType="VARCHAR"/>
		<result column="category_id" property="categoryId" jdbcType="VARCHAR"/>
		<result column="category_name" property="categoryName" jdbcType="VARCHAR"/>
		<result column="pro_style_id" property="proStyleId" jdbcType="VARCHAR"/>
		<result column="color_id" property="colorId" jdbcType="VARCHAR"/>
		<result column="product_spec" property="productSpec" jdbcType="VARCHAR"/>
		<result column="product_width" property="productWidth" jdbcType="VARCHAR"/>
		<result column="product_height" property="productHeight" jdbcType="VARCHAR"/>
		<result column="sale_price" property="salePrice" jdbcType="VARCHAR"/>
		<result column="brand_id" property="brandId" jdbcType="INTEGER"/>
		<result column="parent_id" property="parentId" jdbcType="INTEGER"/>
		<result column="material_file_id" property="materialFileId" jdbcType="INTEGER"/>
		<result column="brand_name" property="brandName" jdbcType="VARCHAR"/>
		<result column="pic_path" property="picPath" jdbcType="VARCHAR"/>
		<result column="collectState" property="collectState" jdbcType="INTEGER"/>
		<result column="name" property="salePriceValueName" jdbcType="VARCHAR"/>
	</resultMap>

	<!-- 多表关联查询 -->
	<select id="selectProductByNameAndBrandId" resultMap="productSearchResultMap"
			parameterType="com.nork.product.model.BaseProduct">
		SELECT DISTINCT(bp.id) product_id,bp.product_name,bb.brand_name,bb.id as brand_id,bp.sale_price,bp.pro_style_id,bp.color_id,bp.product_spec,rp.pic_path,
		CASE WHEN t1.id IS NOT NULL THEN 1 ELSE 0 END collectState,bp.id
		FROM base_product bp
		LEFT JOIN base_brand bb ON bb.id = bp.brand_id
		LEFT JOIN res_pic rp ON bp.pic_id = rp.id
		LEFT JOIN (SELECT upc.id,upc.product_id FROM user_product_collect upc where 1=1
		<if test="userId != null and userId != ''">
			AND user_id = #{userId,jdbcType=INTEGER}
		</if>
		) t1 ON t1.product_id = bp.id
		WHERE 1=1
<!-- 		AND bp.putaway_state = 1  以前已经上架显示，现在是已发布的显示 -->
			AND bp.putaway_state = 3
		<if test="productName != null and productName != ''">
			AND bp.product_name LIKE CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR}),'%')
		</if>
		<if test="brandId != null and brandId != ''">
			AND bb.id = #{brandId,jdbcType=INTEGER}
		</if>
		<if test="(brandId == null or brandId == '' ) and brandIds !=  null and  brandIds.size > 0  ">
			and bb.id in
			<foreach collection="brandIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<!-- <if test="configTypeValueList !=  null and  configTypeValueList.size > 0  ">
			and if(
				((select huangsd.valuekey from sys_dictionary huangsd where huangsd.type="productType" and huangsd.value=(select huangbp.product_type_value from base_product huangbp where huangbp.id=product_id))
			in
			<foreach collection="configTypeValueList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
			),(
				品牌
				<if test="configBrandIdList !=  null and  configBrandIdList.size > 0  ">
					(select huangbp2.brand_id from base_product huangbp2 where huangbp2.id=product_id) in
					<foreach collection="configBrandIdList" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				小类
				<if test="configSmallTypeIdList !=  null and  configSmallTypeIdList.size > 0  ">
					(select huangsd2.id from sys_dictionary huangsd2 where huangsd2.type=huangsd.valuekey and huangsd2.value=huangbp.product_small_type_value) in
					<foreach collection="configSmallTypeIdList" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				产品id
				<if test="configProductIdList !=  null and  configProductIdList.size > 0  ">
					 product_id in
					<foreach collection="configProductIdList" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
			),(1=1))
		</if> -->
		<if test="orders != null and  orders !=''  ">  order by #{orders} </if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>

	<select id="selectProductByNameAndBrandCount" resultType="int"
			parameterType="com.nork.product.model.BaseProduct">
		SELECT count(DISTINCT(bp.id))
		FROM base_product bp
		LEFT JOIN base_brand bb ON bb.id = bp.brand_id
		LEFT JOIN res_pic rp ON bp.pic_id = rp.id
		LEFT JOIN (SELECT upc.id,upc.product_id FROM user_product_collect upc where 1=1
		<if test="userId != null and userId != ''">
			AND user_id = #{userId,jdbcType=INTEGER}
		</if>
		) t1 ON t1.product_id = bp.id
		WHERE 1=1
<!-- 		AND bp.putaway_state = 1 以前已经上架显示，现在是已发布的显示-->
			AND bp.putaway_state = 3 
		<if test="productName != null and productName != ''">
			AND bp.product_name LIKE CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR}),'%')
		</if>
		<if test="brandId != null and brandId != ''">
			AND bb.id = #{brandId,jdbcType=INTEGER}
		</if>
		<if test="brandIds !=  null and  brandIds.size > 0  ">
			and bb.id in
			<foreach collection="brandIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="orders != null and  orders !=''  ">  order by #{orders} </if>
	</select>
	
		<!-- findAllName -->
	<select id="findAllName" resultType="java.lang.String">
		select
		b.product_name 
		from base_product b
	</select>
	
	<select id="findAllCode" resultType="java.lang.String" parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT	product_code FROM base_product WHERE 1=1
		<if test="schProductCode_ !=  null and schProductCode_ !=  ''   ">
			AND product_code  LIKE CONCAT(#{schProductCode_,jdbcType=VARCHAR},'%')
		 </if>
		 LIMIT 1
	</select>
	
	<!-- 硬装产品编码 -->
	<select id="findHardMountedProductCode" resultType="java.lang.String" parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT	MAX(REPLACE(p.product_code,CONCAT(
		(SELECT brand_referred FROM base_brand WHERE 1=1 and id = #{brandId,jdbcType=INTEGER}),'_',(SELECT space_code FROM space_common WHERE 1=1 and id = #{spaceComonId,jdbcType=INTEGER}),'_' 
		, (SELECT s2.valuekey FROM sys_dictionary s1,sys_dictionary s2  WHERE 1=1 and s1.value = p.product_type_value and s1.type = 'productType' and s2.type=s1.valuekey and s2.value = p.product_small_type_value),'_'),'')) 
		FROM base_product p WHERE 1=1
		 <if test="brandId != null and brandId != ''">		AND p.brand_id = #{brandId,jdbcType=INTEGER}	</if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and p.product_type_value  = #{productTypeValue,jdbcType=VARCHAR} </if>
		<if test="spaceComonId !=  null and spaceComonId !=  ''   "> and p.spaceComon_id  = #{spaceComonId,jdbcType=INTEGER} </if>
		<if test="productSmallTypeValue !=  null  ">			and p.product_small_type_value  = #{productSmallTypeValue,jdbcType=INTEGER} </if>
		<if test="productSmallTypeValue !=  null  and spaceComonId !=  null and spaceComonId !=  '' and brandId != null and brandId != ''">
		and	REPLACE(p.product_code,CONCAT(
		(SELECT brand_referred FROM base_brand WHERE 1=1 and id = #{brandId,jdbcType=INTEGER}),'_'
		,(SELECT space_code FROM space_common WHERE 1=1 and id = #{spaceComonId,jdbcType=INTEGER}),'_' 
		, (SELECT s2.valuekey FROM sys_dictionary s1,sys_dictionary s2  WHERE 1=1 and s1.value = p.product_type_value and s1.type = 'productType' and s2.type=s1.valuekey and s2.value = p.product_small_type_value),'_'),'') REGEXP '^[0-9]+$'
		</if>
	</select>
	
	<!-- 硬装产品编码 -->
	<select id="findTempletHardMountedProductCode" resultType="java.lang.String" parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT	MAX(REPLACE(p.product_code,CONCAT(
		(SELECT brand_referred FROM base_brand WHERE 1=1 and id = #{brandId,jdbcType=INTEGER}),'_',(SELECT design_code FROM design_templet WHERE 1=1 and id = #{designTempletId,jdbcType=INTEGER}),'_' 
		, (SELECT s2.valuekey FROM sys_dictionary s1,sys_dictionary s2  WHERE 1=1 and s1.value = p.product_type_value and s1.type = 'productType' and s2.type=s1.valuekey and s2.value = p.product_small_type_value),'_'),'')) 
		FROM base_product p WHERE 1=1
		 <if test="brandId != null and brandId != ''">		AND p.brand_id = #{brandId,jdbcType=INTEGER}	</if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and p.product_type_value  = #{productTypeValue,jdbcType=VARCHAR} </if>
		<if test="designTempletId !=  null and designTempletId !=  ''   "> and p.designTemplet_id  = #{designTempletId,jdbcType=INTEGER} </if>
		<if test="productSmallTypeValue !=  null  ">			and p.product_small_type_value  = #{productSmallTypeValue,jdbcType=INTEGER} </if>
		<if test="productSmallTypeValue !=  null  and spaceComonId !=  null and spaceComonId !=  '' and brandId != null and brandId != ''">
		and	REPLACE(p.product_code,CONCAT(
		(SELECT brand_referred FROM base_brand WHERE 1=1 and id = #{brandId,jdbcType=INTEGER}),'_'
		,(SELECT design_code FROM design_templet WHERE 1=1 and id = #{designTempletId,jdbcType=INTEGER}),'_' 
		, (SELECT s2.valuekey FROM sys_dictionary s1,sys_dictionary s2  WHERE 1=1 and s1.value = p.product_type_value and s1.type = 'productType' and s2.type=s1.valuekey and s2.value = p.product_small_type_value),'_'),'') REGEXP '^[0-9]+$'
		</if>
	</select>
	
	
	<!--硬装白模编码-->
	<select id="findHardMountedWhiteMoldCoding" resultType="java.lang.String" parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT	MAX(REPLACE(p.product_code,CONCAT(
		'baimo_',(SELECT space_code FROM space_common WHERE 1=1 and id = #{spaceComonId,jdbcType=INTEGER}),'_' 
		, (SELECT s.valuekey FROM sys_dictionary s WHERE 1=1  and s.value = #{productTypeValue,jdbcType=VARCHAR} and s.type = 'productType'),'_'),'')
		) 
		FROM base_product p WHERE 1=1
		AND p.brand_id = -1
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and p.product_type_value  = #{productTypeValue,jdbcType=VARCHAR} </if>
		<!-- <if test="productSmallTypeValue !=  null  ">			and p.product_small_type_value  = #{productSmallTypeValue,jdbcType=INTEGER} </if> -->
		<if test="spaceComonId !=  null and spaceComonId !=  ''   "> and p.spaceComon_id  = #{spaceComonId,jdbcType=INTEGER} </if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''  and spaceComonId !=  null and spaceComonId !=  '' ">
			and REPLACE(p.product_code,CONCAT('baimo_',(SELECT space_code FROM space_common WHERE 1=1 and id = #{spaceComonId,jdbcType=INTEGER}),'_' 
			, (SELECT s.valuekey FROM sys_dictionary s WHERE 1=1  and s.value = #{productTypeValue,jdbcType=VARCHAR} and s.type = 'productType'),'_'),'') REGEXP '^[0-9]+$'
		</if>
	</select>
	
	
	<!-- 软装产品编码 -->
	<select id="findSoftloadingProductCode" resultType="java.lang.String" parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT MAX(REPLACE(p.product_code,CONCAT(
		(SELECT brand_referred FROM base_brand WHERE 1=1 and id = #{brandId,jdbcType=INTEGER}),'_' ,
		(SELECT s2.valuekey FROM sys_dictionary s1,sys_dictionary s2  WHERE 1=1 and s1.value = p.product_type_value and s1.type = 'productType' and s2.type=s1.valuekey and s2.value = p.product_small_type_value),'_'),'')) 
		FROM base_product p WHERE 1=1 
		 <if test="brandId != null and brandId != ''">		AND p.brand_id = #{brandId,jdbcType=INTEGER}	</if>
		 <if test="productTypeValue !=  null and productTypeValue !=  ''   "> and p.product_type_value  = #{productTypeValue,jdbcType=VARCHAR} </if>
		<if test="productSmallTypeValue !=  null  ">			and p.product_small_type_value  = #{productSmallTypeValue,jdbcType=INTEGER} </if>
		<if test="productSmallTypeValue !=  null  and brandId != null and brandId != ''">
			and REPLACE(p.product_code,CONCAT(
		(SELECT brand_referred FROM base_brand WHERE 1=1 and id = #{brandId,jdbcType=INTEGER}),'_' ,
		(SELECT s2.valuekey FROM sys_dictionary s1,sys_dictionary s2  WHERE 1=1 and s1.value = p.product_type_value and s1.type = 'productType' and s2.type=s1.valuekey and s2.value = p.product_small_type_value),'_'),'') REGEXP '^[0-9]+$'
		</if>
	</select>
	
	
	<!-- 软装白模编码 -->
	<!-- <select id="findSoftFittedWhiteMoldCoding" resultType="java.lang.String" parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT	MAX(REPLACE(p.product_code,CONCAT(
		'baimo_', (SELECT s2.valuekey FROM sys_dictionary s1,sys_dictionary s2  WHERE 1=1 and s1.value = p.product_type_value and s1.type = 'productType' and s2.type=s1.valuekey and s2.value = p.product_small_type_value),'_'),'')) 
		FROM base_product p WHERE 1=1 AND p.brand_id = -1
		<if test="productSmallTypeValue !=  null  ">			and p.product_small_type_value  = #{productSmallTypeValue,jdbcType=INTEGER} </if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and p.product_type_value  = #{productTypeValue,jdbcType=VARCHAR} </if>
		<if test="productSmallTypeValue !=  null ">
		 and REPLACE(p.product_code,CONCAT(
		'baimo_', (SELECT s2.valuekey FROM sys_dictionary s1,sys_dictionary s2  WHERE 1=1 and s1.value = p.product_type_value and s1.type = 'productType' and s2.type=s1.valuekey and s2.value = p.product_small_type_value),'_'),'') REGEXP '^[0-9]+$'
		</if>
	</select> -->
	
<!-- 软装白模编码 -->
	<select id="findSoftFittedWhiteMoldCoding" resultType="java.lang.String" parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT	MAX(REPLACE(p.product_code,CONCAT(
		'baimo_', replace((SELECT s2.valuekey FROM sys_dictionary s1,sys_dictionary s2  WHERE 1=1 and s1.value = p.product_type_value and s1.type = 'productType' and s2.type=s1.valuekey and s2.value = p.product_small_type_value),'basic_',''),'_'),'')) 
		FROM base_product p WHERE 1=1 AND p.brand_id = -1
		<if test="productSmallTypeValue !=  null  ">			and p.product_small_type_value  = #{productSmallTypeValue,jdbcType=INTEGER} </if>
		<if test="productTypeValue !=  null and productTypeValue !=  ''   "> and p.product_type_value  = #{productTypeValue,jdbcType=VARCHAR} </if>
		<if test="productSmallTypeValue !=  null ">
		 and REPLACE(p.product_code,CONCAT(
		'baimo_', replace((SELECT s2.valuekey FROM sys_dictionary s1,sys_dictionary s2  WHERE 1=1 and s1.value = p.product_type_value and s1.type = 'productType' and s2.type=s1.valuekey and s2.value = p.product_small_type_value),'basic_',''),'_'),'') REGEXP '^[0-9]+$'
		</if>
	</select>
	
	<resultMap id="productReportResultMap" type="com.nork.product.model.ProductWeekReport">
		<result column="totalProductCount" property="totalProductCount" jdbcType="INTEGER"/>
		<result column="putawayCount" property="putawayCount" jdbcType="INTEGER"/>
		<result column="thisWeekAddedCount" property="thisWeekAddedCount" jdbcType="INTEGER"/>
		<result column="thisWeekAddedModelCount" property="thisWeekAddedModelCount" jdbcType="INTEGER"/>
		<result column="thisWeekAddedPutawayCount" property="thisWeekAddedPutawayCount" jdbcType="INTEGER"/>
		<result column="totalDecorationCount" property="totalDecorationCount" jdbcType="INTEGER"/>
		<result column="thisWeekAddedDecorationCount" property="thisWeekAddedDecorationCount" jdbcType="INTEGER"/>
		<result column="unfinishedProportion" property="unfinishedProportion" jdbcType="VARCHAR"/>
	</resultMap>

	<!--(thisWeekAddedCount-thisWeekAddedPutawayCount)/thisWeekAddedCount-->
	<!-- 产品组工作周报表 -->
	<!-- <select id="productExecutionReport" resultMap="productReportResultMap" parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT *,CASE WHEN (thisWeekAddedCount-thisWeekAddedPutawayCount)/thisWeekAddedCount IS NOT NULL THEN CONCAT(ROUND(((thisWeekAddedCount - thisWeekAddedPutawayCount) / thisWeekAddedCount)*100,2),'%') ELSE 0 END AS unfinishedProportion FROM(
		SELECT COUNT(bp.id) totalProductCount,
		(SELECT COUNT(a.id) FROM base_product a WHERE a.putaway_state = 1) putawayCount,
		(SELECT COUNT(b.id) FROM base_product b  WHERE b.gmt_create BETWEEN DATE_FORMAT(#{gmtCreateStartStr,jdbcType=TIMESTAMP},'%Y-%c-%d %H:%i:%s') AND DATE_FORMAT(#{gmtCreateEndStr,jdbcType=TIMESTAMP},'%Y-%c-%d %H:%i:%s')) thisWeekAddedCount,
		(SELECT COUNT(m.id) FROM res_model m WHERE m.file_key like '%product.baseProduct%' AND
		m.gmt_create BETWEEN DATE_FORMAT(#{gmtCreateStartStr,jdbcType=TIMESTAMP},'%Y-%c-%d %H:%i:%s') AND DATE_FORMAT(#{gmtCreateEndStr,jdbcType=TIMESTAMP},'%Y-%c-%d %H:%i:%s')) thisWeekAddedModelCount,
		(SELECT COUNT(b.id) FROM base_product b  WHERE b.putaway_state = 1 AND b.gmt_create BETWEEN DATE_FORMAT(#{gmtCreateStartStr,jdbcType=TIMESTAMP},'%Y-%c-%d %H:%i:%s') AND DATE_FORMAT(#{gmtCreateEndStr,jdbcType=TIMESTAMP},'%Y-%c-%d %H:%i:%s')) thisWeekAddedPutawayCount,
		(SELECT COUNT(pd.id) FROM product_decoration pd) totalDecorationCount,
		(SELECT COUNT(pd1.id) FROM product_decoration pd1 WHERE pd1.gmt_create BETWEEN DATE_FORMAT(#{gmtCreateStartStr,jdbcType=TIMESTAMP},'%Y-%c-%d %H:%i:%s') AND DATE_FORMAT(#{gmtCreateEndStr,jdbcType=TIMESTAMP},'%Y-%c-%d %H:%i:%s')) thisWeekAddedDecorationCount
		FROM base_product bp
		) productReport
	</select> -->
	<select id="productExecutionReport" resultMap="productReportResultMap" parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT *,CASE WHEN (thisWeekAddedCount-thisWeekAddedPutawayCount)/thisWeekAddedCount IS NOT NULL THEN CONCAT(ROUND(((thisWeekAddedCount - thisWeekAddedPutawayCount) / thisWeekAddedCount)*100,2),'%') ELSE 0 END AS unfinishedProportion FROM(
		<!-- 总产品数量 -->
		SELECT COUNT(bp.id) totalProductCount,
		<!-- 上架产品数量 -->
<!-- 		以前已经上架显示，现在是已发布的显示 -->
<!-- 		(SELECT COUNT(a.id) FROM base_product a WHERE a.putaway_state = 1) putawayCount,  -->
			(SELECT COUNT(a.id) FROM base_product a WHERE a.putaway_state = 3) putawayCount,
		<!-- 新增产品数量 -->
		(SELECT COUNT(b.id) FROM base_product b  WHERE b.gmt_create between #{startDateD,jdbcType=TIMESTAMP} and #{endDateD,jdbcType=TIMESTAMP} 
		<if test="usernames!=null and usernames.size() > 0">  
            AND b.creator IN  
            <foreach collection="usernames" item="username" open="(" separator="," close=")">
                #{username}  
            </foreach>  
        </if>
		) thisWeekAddedCount,
		<!-- 新增产品模型数量 -->
		(SELECT COUNT(m.id) FROM res_model m WHERE m.file_key like '%product.baseProduct%' AND
		m.gmt_create between #{startDateD,jdbcType=TIMESTAMP} and #{endDateD,jdbcType=TIMESTAMP} 
		<if test="usernames!=null and usernames.size() > 0">  
            AND m.creator IN  
            <foreach collection="usernames" item="username" open="(" separator="," close=")">
                #{username}  
            </foreach>  
        </if>
		) thisWeekAddedModelCount,
		<!-- 新增上架产品数量 -->
<!-- 		以前已经上架显示，现在是已发布的显示 -->
<!-- 		(SELECT COUNT(b.id) FROM base_product b  WHERE b.putaway_state = 1 AND b.gmt_create between #{startDateD,jdbcType=TIMESTAMP} and #{endDateD,jdbcType=TIMESTAMP} -->
		(SELECT COUNT(b.id) FROM base_product b  WHERE b.putaway_state = 3 AND b.gmt_create between #{startDateD,jdbcType=TIMESTAMP} and #{endDateD,jdbcType=TIMESTAMP}
		<if test="usernames!=null and usernames.size() > 0">  
            AND b.creator IN  
            <foreach collection="usernames" item="username" open="(" separator="," close=")">
                #{username}  
            </foreach>  
        </if>
		) thisWeekAddedPutawayCount,
		<!-- 总饰品数量 -->
		(SELECT COUNT(pd.id) FROM product_decoration pd) totalDecorationCount,
		<!-- 新增饰品数量 -->
		(SELECT COUNT(pd1.id) FROM product_decoration pd1 WHERE pd1.gmt_create between #{startDateD,jdbcType=TIMESTAMP} and #{endDateD,jdbcType=TIMESTAMP}
		<if test="usernames!=null and usernames.size() > 0">  
            AND pd1.creator IN  
            <foreach collection="usernames" item="username" open="(" separator="," close=")">
                #{username}  
            </foreach>  
        </if>
		) thisWeekAddedDecorationCount
		FROM base_product bp
		) productReport
	</select>
	<!-- 查询所有空间硬装产品 -->
	<select id="findAllSpaceStuffProductList" resultMap="AllResultMap">
		SELECT
		 <include refid="All_Column_List" /> 
		 FROM base_product WHERE  (spaceComon_id is not null or spaceComon_id > 0) and  product_code NOT LIKE'baimo%' ORDER BY id DESC
	</select>
	<!-- 授权产品列表 -->
	<select id="authorizedProductList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.search.BaseProductSearch">
		select
		<include refid="All_Column_List" />
	    from base_product
<!-- 	    以前已经上架显示，现在是已发布的显示 -->
<!-- 		where putaway_state=1	 -->
		where putaway_state=3	
		<if test="sch_ProductCode_ !=  null and sch_ProductCode_ !=  ''   ">
			and product_code  like CONCAT(CONCAT('%',#{sch_ProductCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductName_ !=  null and sch_ProductName_ !=  ''   ">
			and product_name  like CONCAT(CONCAT('%',#{sch_ProductName_,jdbcType=VARCHAR}),'%')
		 </if>
		 
		 <if test="brands !=  null and brands != '' ">	
		 	 AND FIND_IN_SET(brand_id, #{brands,jdbcType=VARCHAR})
		 </if>
		<if test="bigType !=  null and bigType !=  '' ">
			 AND FIND_IN_SET(product_type_mark, #{bigType,jdbcType=VARCHAR})  
		</if>
		<if test="smallType !=  null and smallType !=  ''   "> 
			AND FIND_IN_SET(product_small_type_mark, #{smallType,jdbcType=VARCHAR})
		</if>
		<if test="order != null and  order !=''  ">
			order by ${order} <if test="orderNum != null and  orderNum !='' ">${orderNum}</if>
		</if>
		<if test="orders != null and  orders !=''  ">  order by #{orders}</if>
		<if test="order == null and  orders == null ">  order by id desc</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>
	
	<select id="authorizedProductCount" resultType="int"
		parameterType="com.nork.product.model.search.BaseProductSearch">
		select count(*)
	    from base_product
<!-- 	    以前已经上架显示，现在是已发布的显示 -->
<!-- 		where putaway_state = 1	 -->
			where putaway_state = 3
		<if test="sch_ProductCode_ !=  null and sch_ProductCode_ !=  ''   ">
			and product_code  like CONCAT(CONCAT('%',#{sch_ProductCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_ProductName_ !=  null and sch_ProductName_ !=  ''   ">
			and product_name  like CONCAT(CONCAT('%',#{sch_ProductName_,jdbcType=VARCHAR}),'%')
		 </if>
		 
		 <if test="brands !=  null and brands != '' ">	
		 	 AND FIND_IN_SET(brand_id, #{brands,jdbcType=VARCHAR})
		 </if>
		<if test="bigType !=  null and bigType !=  '' ">
			 AND FIND_IN_SET(product_type_mark, #{bigType,jdbcType=VARCHAR})  
		</if>
		<if test="smallType !=  null and smallType !=  ''   "> 
			AND FIND_IN_SET(product_small_type_mark, #{smallType,jdbcType=VARCHAR})
		</if>
	</select>

	<!-- **结果定义** -->
	<resultMap id="ProductEntityResultMap" type="com.nork.sync.model.ProductEntity">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result  column="sys_code" property="sysCode" jdbcType="VARCHAR" />
		<result  column="split_textures_info" property="splitTexturesInfo" jdbcType="VARCHAR" />
		<result  column="creator" property="creator" jdbcType="VARCHAR" />
		<result  column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result  column="modifier" property="modifier" jdbcType="VARCHAR" />
		<result  column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
		<result  column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result  column="product_code" property="productCode" jdbcType="VARCHAR" />
		<result  column="product_name" property="productName" jdbcType="VARCHAR" />
		<result  column="brand_id" property="brandId" jdbcType="INTEGER" />
		<result  column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result  column="material_file_id" property="materialFileId" jdbcType="INTEGER" />
		<result  column="spaceComon_id" property="spaceComonId" jdbcType="INTEGER" />
		<result  column="pro_style_id" property="proStyleId" jdbcType="INTEGER" />
		<result  column="product_spec" property="productSpec" jdbcType="VARCHAR" />
		<result  column="color_id" property="colorId" jdbcType="INTEGER" />
		<result  column="product_length" property="productLength" jdbcType="VARCHAR" />
		<result  column="product_width" property="productWidth" jdbcType="VARCHAR" />
		<result  column="product_height" property="productHeight" jdbcType="VARCHAR" />
		<result  column="sale_price" property="salePrice" jdbcType="DOUBLE" />
		<result  column="pic_id" property="picId" jdbcType="INTEGER" />
		<result  column="model_id" property="modelId" jdbcType="INTEGER" />
		<result  column="product_desc" property="productDesc" jdbcType="VARCHAR" />
		<result  column="pic_ids" property="picIds" jdbcType="VARCHAR" />
		<result  column="material_pic_ids" property="materialPicIds" jdbcType="VARCHAR" />
		<result  column="material3d_pic_ids" property="material3dPicIds" jdbcType="VARCHAR" />
		<result  column="house_type_values" property="houseTypeValues" jdbcType="VARCHAR" />
		<result  column="product_type_value" property="productTypeValue" jdbcType="VARCHAR" />
		<result  column="product_type_mark" property="productTypeMark" jdbcType="VARCHAR" />
		<result  column="product_small_type_mark" property="productSmallTypeMark" jdbcType="VARCHAR" />
		<result  column="product_short_code" property="productShortCode" jdbcType="VARCHAR" />
		<result  column="original_product_code" property="originalProductCode" jdbcType="VARCHAR" />
		<result  column="bm_ids" property="bmIds" jdbcType="VARCHAR" />
		<result  column="code_number" property="codeNumber" jdbcType="INTEGER" />
		<result  column="designTemplet_id" property="designTempletId" jdbcType="INTEGER" />
		<result  column="u3dmodel_Id" property="u3dModelId" jdbcType="VARCHAR" />
		<result  column="ipad_u3dmodel_id" property="ipadU3dModelId" jdbcType="INTEGER" />
		<result  column="ios_u3dmodel_id" property="iosU3dModelId" jdbcType="INTEGER" />
		<result  column="android_u3dmodel_id" property="androidU3dModelId" jdbcType="INTEGER" />
		<result  column="macbook_u3dmodel_id" property="macBookU3dModelId" jdbcType="INTEGER" />
		<result  column="windows_u3dmodel_id" property="windowsU3dModelId" jdbcType="INTEGER" />
		<result  column="merge_product_ids" property="mergeProductIds" jdbcType="VARCHAR" />
		<result  column="decoration_id" property="decorationId" jdbcType="VARCHAR" />
		<result  column="designer_id" property="designerId" jdbcType="INTEGER" />
		<result  column="modeling_id" property="modelingId" jdbcType="INTEGER" />
		<result  column="rendering_id" property="renderingId" jdbcType="INTEGER" />
		<result  column="putaway_modified" property="putawayModified" jdbcType="TIMESTAMP" />
		<result  column="date_att2" property="dateAtt2" jdbcType="TIMESTAMP" />
		<result  column="product_small_type_value" property="productSmallTypeValue" jdbcType="INTEGER" />
		<result  column="putaway_state" property="putawayState" jdbcType="INTEGER" />
		<result  column="num_att3" property="numAtt3" jdbcType="DOUBLE" />
		<result  column="num_att4" property="numAtt4" jdbcType="DOUBLE" />
		<result  column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectProductEntity" resultMap="ProductEntityResultMap"
			parameterType="java.lang.Integer">
		select
		<include refid="All_Column_List" />
		from base_product
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- 分页汇总 -->
	<select id="sameTypeProductCount" resultType="int"
		parameterType="com.nork.product.model.BaseProduct">
		select count(*)
		from base_product
		where 1=1
<!-- 		<if test="parentId !=  null  "> and	id != #{parentId,jdbcType=INTEGER}	and parent_id  = #{parentId,jdbcType=INTEGER} </if> -->
		<if test="parentId !=  null  "> and parent_id  = #{parentId,jdbcType=INTEGER} </if>
		<if test="productTypeValue!= null and productSmallTypeValue!= null">
		  or (
			   product_type_value = #{productTypeValue,jdbcType=VARCHAR}
			   and product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}
			   and bm_ids IS NULL
			)
		</if>
		<!-- 内部用户有两个上架状态 1上架，2测试上架状态 3 发布状态-->
		<if test="isInternalUser != null and isInternalUser == 'yes'">
			AND  (putaway_state = 1 or putaway_state = 2  or putaway_state = 3)
		</if>
		<if test="isInternalUser == null or isInternalUser == ''">
<!-- 			AND  putaway_state = 1 以前已经上架显示，现在是已发布的显示  -->
				AND  putaway_state = 3
		</if>
	</select>
	
	<!-- 分页查询 ,可在BaseProductSearch中自定义查询条件-->
	<select id="sameTypeProductList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.BaseProduct">
		select
		<include refid="All_Column_List" />
	    from base_product
		where 1=1	
		<if test="parentId !=  null or productTypeValue!= null and productSmallTypeValue!= null ">
		  and (parent_id  = #{parentId,jdbcType=INTEGER}
		  or (
			   product_type_value = #{productTypeValue,jdbcType=VARCHAR}
			   and product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}
			   and bm_ids IS NULL
			))
		</if>
		<!-- 内部用户有两个上架状态 1上架，2测试上架状态 -->
		<if test="isInternalUser != null and isInternalUser == 'yes'">
			AND  (putaway_state = 1 or putaway_state = 2 or putaway_state = 3)
		</if>
		<if test="isInternalUser == null or isInternalUser == ''">
		<!-- 			AND  putaway_state = 1 以前已经上架显示，现在是已发布的显示  -->
				AND  putaway_state = 3
		</if>
		<if test="order != null and  order !=''  ">
			order by ${order} <if test="orderNum != null and  orderNum !='' ">${orderNum}</if>
		</if>
		<if test="orders != null and  orders !=''  ">  order by ${orders}</if>
		<if test="order == null and  orders == null ">  order by id desc</if>
	</select>
	
	<!-- 多表关联查询 -->
	<select id="selectBrandProductsList" resultMap="productSearchResultMap"
			parameterType="com.nork.product.model.BaseProduct">
		SELECT DISTINCT(bp.id) product_id,bp.product_name,bb.brand_name,bb.id as brand_id,bp.sale_price,bp.pro_style_id,bp.color_id,bp.product_spec,rp.pic_path,
		CASE WHEN t1.id IS NOT NULL THEN 1 ELSE 0 END collectState,bp.id,sd.name
		FROM base_product bp
		LEFT JOIN base_brand bb ON bb.id = bp.brand_id
		LEFT JOIN res_pic rp ON bp.pic_id = rp.id
		LEFT JOIN (SELECT upc.id,upc.product_id FROM user_product_collect upc where 1=1
		<if test="userId != null and userId != ''">
			AND user_id = #{userId,jdbcType=INTEGER}
		</if>
		) t1 ON t1.product_id = bp.id
		LEFT JOIN sys_dictionary sd ON sd.type='productUnitPrice' AND sd.value = bp.sale_price_value
		WHERE 1=1
		and LOCATE('baimo', bp.product_code) = 0
		AND bp.is_deleted = 0
		<choose>
			<when test="isInternalUser != null and isInternalUser == 'yes'">
				AND  (bp.putaway_state = 1 or bp.putaway_state = 2  or bp.putaway_state = 3)
			</when>
			<otherwise>
				and bp.putaway_state = 3
			</otherwise>
		</choose>
		<if test="productName != null and productName != ''">
			AND bp.product_name LIKE CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR}),'%')
		</if>
		<if test="brandId != null and brandId != ''">
			AND bp.brand_id = #{brandId,jdbcType=INTEGER}
		</if>
		<!--<if test="(brandId == null or brandId == '' ) and brandIds !=  null and  brandIds.size > 0  ">
			and bb.id in
			<foreach collection="brandIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>-->
		<if test="brandIndustryModelList != null and  brandIndustryModelList.size > 0 ">
			AND
			<foreach collection="brandIndustryModelList" index="index" item="item" open="(" separator="or" close=")">
				(
				<if test="item.brandId != null and item.brandId > 0">
					(bp.brand_id = #{item.brandId}
					<choose>
						<when test="item.authorizedProductIdList!=null and item.authorizedProductIdList.size>0">
							and (bp.id in
							<foreach collection="item.authorizedProductIdList" index="indexProductId"
									 item="itemProductId" open="(" separator="," close=")">
								#{itemProductId}
							</foreach>
							)
						</when>
						<otherwise>
							<if test="item.authorizedProductTypeValue != null and item.authorizedProductTypeValue != '' ">
								and bp.product_type_value=#{item.authorizedProductTypeValue}
							</if>
							<if test="item.authorizedProductSmallTypeValue != null and item.authorizedProductSmallTypeValue != '' ">
								and bp.product_small_type_value=#{item.authorizedProductSmallTypeValue}
							</if>
						</otherwise>
					</choose>
					)
				</if>
				<if test="item.productSmallValueList != null and item.productSmallValueList.size > 0">
					OR
					<foreach collection="item.productSmallValueList" index="index" item="productValueItem" open="(" separator="and" close=")">
						!(bp.product_type_value = ${productValueItem.bigTypeValue}
						and bp.product_small_type_value = ${productValueItem.smallTypeValue})
					</foreach>
				</if>
				<if test="item.nonBrandId != null and item.nonBrandId > 0">
					and bp.brand_id != #{item.nonBrandId}
				</if>
				)
			</foreach>
		</if>
		<if test="orders != null and  orders !=''  ">  order by #{orders} </if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>

	<select id="selectBrandProductsCount" resultType="int"
			parameterType="com.nork.product.model.BaseProduct">
		SELECT count(DISTINCT(bp.id))
		FROM base_product bp
		WHERE
		LOCATE('baimo', bp.product_code) = 0
		AND bp.is_deleted = 0
		<!-- AND bp.putaway_state = 1    以前已经上架显示，现在是已发布的显示 -->
		<if test="isInternalUser != null and isInternalUser == 'yes'">
			AND  (bp.putaway_state = 1 or bp.putaway_state = 2  or bp.putaway_state = 3)
		</if>
		<if test="isInternalUser == null or isInternalUser == ''"><!-- 以前已经上架显示，现在是已发布的显示   -->
		and bp.putaway_state = 3
		</if>
		<if test="productName != null and productName != ''">
			AND bp.product_name LIKE CONCAT(CONCAT('%',#{productName,jdbcType=VARCHAR}),'%')
		</if>
		<if test="brandId != null and brandId != ''">
			AND bp.brand_id = #{brandId,jdbcType=INTEGER}
		</if>
		<!--<if test="brandIds !=  null and  brandIds.size > 0  ">
			and bb.id in
			<foreach collection="brandIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>-->
		<if test="brandIndustryModelList != null and  brandIndustryModelList.size > 0 ">
			AND
			<foreach collection="brandIndustryModelList" index="index" item="item" open="(" separator="or" close=")">
				(
				<if test="item.brandId != null and item.brandId > 0">
					(bp.brand_id = #{item.brandId}
					<choose>
						<when test="item.authorizedProductIdList!=null and item.authorizedProductIdList.size>0">
							and (bp.id in
							<foreach collection="item.authorizedProductIdList" index="indexProductId"
									 item="itemProductId" open="(" separator="," close=")">
								#{itemProductId}
							</foreach>
							)
						</when>
						<otherwise>
							<if test="item.authorizedProductTypeValue != null and item.authorizedProductTypeValue != '' ">
								and bp.product_type_value=#{item.authorizedProductTypeValue}
							</if>
							<if test="item.authorizedProductSmallTypeValue != null and item.authorizedProductSmallTypeValue != '' ">
								and bp.product_small_type_value=#{item.authorizedProductSmallTypeValue}
							</if>
						</otherwise>
					</choose>
					)
				</if>
				<if test="item.productSmallValueList != null and item.productSmallValueList.size > 0">
					OR
					<foreach collection="item.productSmallValueList" index="index" item="productValueItem" open="(" separator="and" close=")">
						!(bp.product_type_value = ${productValueItem.bigTypeValue}
						and bp.product_small_type_value = ${productValueItem.smallTypeValue})
					</foreach>
				</if>
				<if test="item.nonBrandId != null and item.nonBrandId > 0">
					and bp.brand_id != #{item.nonBrandId}
				</if>
				)
			</foreach>
		</if>
	</select>
	
		<!-- **结果定义** -->
	<!-- <resultMap id="AllResultMapMoreInfo" type="com.nork.product.model.BaseProduct">
		<id column="bp.id" property="id" jdbcType="INTEGER" />
		<result  column="bp.sys_code" property="sysCode" jdbcType="VARCHAR" />
		<result  column="bp.split_textures_info" property="splitTexturesInfo" jdbcType="VARCHAR" />
		<result  column="bp.product_code" property="productCode" jdbcType="VARCHAR" />
		<result  column="bp.product_name" property="productName" jdbcType="VARCHAR" />
		<result  column="bp.brand_id" property="brandId" jdbcType="INTEGER" />
		<result  column="bp.parent_id" property="parentId" jdbcType="INTEGER" />
		<result  column="bp.material_file_id" property="materialFileId" jdbcType="INTEGER" />
		<result  column="bp.spaceComon_id" property="spaceComonId" jdbcType="INTEGER" />
		<result  column="bp.pro_style_id" property="proStyleId" jdbcType="INTEGER" />
		<result  column="bp.color_id" property="colorId" jdbcType="INTEGER" />
		<result  column="bp.product_length" property="productLength" jdbcType="VARCHAR" />
		<result  column="bp.product_width" property="productWidth" jdbcType="VARCHAR" />
		<result  column="bp.product_height" property="productHeight" jdbcType="VARCHAR" />
		<result  column="bp.min_height" property="minHeight" jdbcType="VARCHAR" />
		<result  column="bp.full_pave_length" property="fullPaveLength" jdbcType="VARCHAR" />
		<result  column="bp.sale_price" property="salePrice" jdbcType="DOUBLE" />
		<result  column="bp.pic_id" property="picId" jdbcType="INTEGER" />
		<result  column="bp.pic_ids" property="picIds" jdbcType="VARCHAR" />
		<result  column="bp.material_pic_ids" property="materialPicIds" jdbcType="VARCHAR" />
		<result  column="bp.house_type_values" property="houseTypeValues" jdbcType="VARCHAR" />
		<result  column="bp.product_type_value" property="productTypeValue" jdbcType="VARCHAR" />
		<result  column="bp.bm_ids" property="bmIds" jdbcType="VARCHAR" />
		<result  column="bp.code_number" property="codeNumber" jdbcType="INTEGER" />
		<result  column="bp.designTemplet_id" property="designTempletId" jdbcType="INTEGER" />
		<result  column="bp.ipad_u3dmodel_id" property="ipadU3dModelId" jdbcType="INTEGER" />
		<result  column="bp.ios_u3dmodel_id" property="iosU3dModelId" jdbcType="INTEGER" />
		<result  column="bp.android_u3dmodel_id" property="androidU3dModelId" jdbcType="INTEGER" />
		<result  column="bp.macbook_u3dmodel_id" property="macBookU3dModelId" jdbcType="INTEGER" />
		<result  column="bp.windows_u3dmodel_id" property="windowsU3dModelId" jdbcType="INTEGER" />
		<result  column="bp.decoration_id" property="decorationId" jdbcType="VARCHAR" />
		<result  column="bp.putaway_modified" property="putawayModified" jdbcType="TIMESTAMP" />
		<result  column="bp.product_small_type_value" property="productSmallTypeValue" jdbcType="INTEGER" />
		<result column="bp.fbx_state" property="fbxState" jdbcType="INTEGER" />
		<result column="bp.fbx_file_id" property="fbxFileId" jdbcType="INTEGER" />
		<result column="bp.fbx_texture" property="fbxTexture" jdbcType="VARCHAR" />
		<result column="bp.config_id" property="configId" jdbcType="INTEGER" />
		<result column="bp.file_path" property="filePath" jdbcType="VARCHAR" />
		<result  column="bp.num_att3" property="numAtt3" jdbcType="DOUBLE" />
		<result  column="bp.num_att4" property="numAtt4" jdbcType="DOUBLE" />
		<result  column="bp.remark" property="remark" jdbcType="VARCHAR" />
		<result  column="bp.product_material_desc" property="productMaterialDesc" jdbcType="VARCHAR" />
		<result  column="bp.product_model_number" property="productModelNumber" jdbcType="VARCHAR" />
		<result  column="bp.sale_price_value" property="salePriceValue" jdbcType="INTEGER" />
		<result  column="bp.colors_long_code" property="colorsLongCode" jdbcType="VARCHAR" />
	</resultMap> -->
		
	<resultMap id="AllResultMapMoreInfo" type="com.nork.product.model.BaseProduct">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result  column="sys_code" property="sysCode" jdbcType="VARCHAR" />
		<result  column="split_textures_info" property="splitTexturesInfo" jdbcType="VARCHAR" />
		<result  column="product_code" property="productCode" jdbcType="VARCHAR" />
		<result  column="product_name" property="productName" jdbcType="VARCHAR" />
		<result  column="brand_id" property="brandId" jdbcType="INTEGER" />
		<result  column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result  column="material_file_id" property="materialFileId" jdbcType="INTEGER" />
		<result  column="spaceComon_id" property="spaceComonId" jdbcType="INTEGER" />
		<result  column="pro_style_id" property="proStyleId" jdbcType="INTEGER" />
		<result  column="color_id" property="colorId" jdbcType="INTEGER" />
		<result  column="product_length" property="productLength" jdbcType="VARCHAR" />
		<result  column="product_width" property="productWidth" jdbcType="VARCHAR" />
		<result  column="product_height" property="productHeight" jdbcType="VARCHAR" />
		<result  column="min_height" property="minHeight" jdbcType="VARCHAR" />
		<result  column="full_pave_length" property="fullPaveLength" jdbcType="VARCHAR" />
		<result  column="sale_price" property="salePrice" jdbcType="DOUBLE" />
		<result  column="pic_id" property="picId" jdbcType="INTEGER" />
		<result  column="pic_ids" property="picIds" jdbcType="VARCHAR" />
		<result  column="material_pic_ids" property="materialPicIds" jdbcType="VARCHAR" />
		<result  column="house_type_values" property="houseTypeValues" jdbcType="VARCHAR" />
		<result  column="product_type_value" property="productTypeValue" jdbcType="VARCHAR" />
		<result  column="bm_ids" property="bmIds" jdbcType="VARCHAR" />
		<result  column="code_number" property="codeNumber" jdbcType="INTEGER" />
		<result  column="designTemplet_id" property="designTempletId" jdbcType="INTEGER" />
		<result  column="ipad_u3dmodel_id" property="ipadU3dModelId" jdbcType="INTEGER" />
		<result  column="ios_u3dmodel_id" property="iosU3dModelId" jdbcType="INTEGER" />
		<result  column="android_u3dmodel_id" property="androidU3dModelId" jdbcType="INTEGER" />
		<result  column="macbook_u3dmodel_id" property="macBookU3dModelId" jdbcType="INTEGER" />
		<result  column="windows_u3dmodel_id" property="windowsU3dModelId" jdbcType="INTEGER" />
		<result  column="decoration_id" property="decorationId" jdbcType="VARCHAR" />
		<result  column="putaway_modified" property="putawayModified" jdbcType="TIMESTAMP" />
		<result  column="product_small_type_value" property="productSmallTypeValue" jdbcType="INTEGER" />
		<result column="fbx_state" property="fbxState" jdbcType="INTEGER" />
		<result column="fbx_file_id" property="fbxFileId" jdbcType="INTEGER" />
		<result column="fbx_texture" property="fbxTexture" jdbcType="VARCHAR" />
		<result column="config_id" property="configId" jdbcType="INTEGER" />
		<result  column="product_model_number" property="productModelNumber" jdbcType="VARCHAR" />
		<result  column="sale_price_value" property="salePriceValue" jdbcType="INTEGER" />
		<result  column="colors_long_code" property="colorsLongCode" jdbcType="VARCHAR" />
		<result  column="bigTypeValueKey" property="bigTypeValueKey" jdbcType="VARCHAR" />
		<result  column="bigTypeName" property="bigTypeName" jdbcType="VARCHAR" />
		<result  column="smallTypeValueKey" property="smallTypeValueKey" jdbcType="VARCHAR" />
		<result  column="smallTypeName" property="smallTypeName" jdbcType="VARCHAR" />
		<result  column="groupCount" property="groupCount" jdbcType="INTEGER" />
		<result  column="smallTypeAtt1" property="smallTypeAtt1" jdbcType="VARCHAR" />
		<result  column="mediaTypeModelPath" property="mediaTypeModelPath" jdbcType="VARCHAR" />
		<result  column="collectState" property="collectState" jdbcType="INTEGER" />
	</resultMap>
	
	
	<!-- getInfoById -->
	<select id="getInfoById" resultMap="AllResultMapMoreInfo"
		parameterType="java.util.Map">
		select
		 <!-- bp.id -->
		 bp.id as id,bp.sys_code as sys_code,split_textures_info,product_code,product_name,bp.brand_id,parent_id,material_file_id,spaceComon_id,pro_style_id,color_id,
		 product_length,product_width,product_height,min_height,full_pave_length,sale_price,bp.pic_id as pic_id,pic_ids,material_pic_ids,house_type_values,
		 product_type_value,bm_ids,code_number,designTemplet_id,ipad_u3dmodel_id,ios_u3dmodel_id,android_u3dmodel_id,macbook_u3dmodel_id,
		 windows_u3dmodel_id,decoration_id,putaway_modified,product_small_type_value,fbx_state,fbx_file_id,fbx_texture,config_id,
		 product_model_number,sale_price_value,colors_long_code,
		 
		<!-- sdbig.value as bigTypeValue, -->
		sdbig.valuekey as bigTypeValueKey,
		sdbig.name as bigTypeName,
		<!-- sdsmall.value as smallTypeValue, -->
		sdsmall.valuekey as smallTypeValueKey,
		sdsmall.name as smallTypeName,
		count(G.id) as groupCount,
		sdsmall.att1 smallTypeAtt1
		
		from base_product bp 
		left join sys_dictionary sdbig on sdbig.type = "productType" and sdbig.value = bp.product_type_value
		left join sys_dictionary sdsmall on sdsmall.type = sdbig.valuekey and sdsmall.value = bp.product_small_type_value
		LEFT JOIN (SELECT gpd.id,gpd.product_id FROM group_product_details gpd
		LEFT JOIN group_product gp ON gp.id = gpd.`group_id` WHERE gp.design_templet_id = #{designTempletId,jdbcType=INTEGER} AND gpd.`is_main` = 1) G
		ON G.product_id = bp.`id`
		where bp.id = #{id,jdbcType=INTEGER} ;
	</select>
	
	<select id="getDataAndModel" resultMap="AllResultMapMoreInfo"
		parameterType="com.nork.product.model.BaseProduct">
				select
				bp.id,bp.sys_code,bp.split_textures_info,bp.creator,bp.gmt_create,bp.modifier,bp.gmt_modified,bp.is_deleted,
bp.product_code,bp.product_name,bp.decoration_id,bp.spaceComon_id,bp.designer_id,bp.modeling_id,bp.min_height,
bp.full_pave_length,bp.rendering_id,bp.brand_id,bp.parent_id,bp.material_file_id,bp.pro_style_id,bp.product_spec,
bp.color_id,bp.product_length,bp.product_width,bp.product_height,bp.sale_price,bp.pic_id,bp.model_id,bp.product_desc,
bp.pic_ids,bp.material_pic_ids,bp.material3d_pic_ids,bp.house_type_values,bp.product_type_value,bp.product_type_mark,bp.product_small_type_mark,
bp.product_short_code,bp.original_product_code,bp.bm_ids,code_number,bp.designTemplet_id,bp.u3dmodel_Id,bp.ipad_u3dmodel_id,bp.ios_u3dmodel_id,bp.android_u3dmodel_id,
bp.macbook_u3dmodel_id,bp.windows_u3dmodel_id,bp.merge_product_ids,bp.putaway_modified,bp.date_att2,bp.product_small_type_value,bp.putaway_state,bp.num_att3,bp.num_att4,
bp.remark,bp.product_model_number,bp.sale_price_value,bp.product_material_desc,bp.colors_long_code,   rm.model_path   as  'mediaTypeModelPath'
from base_product as bp   left join res_model    as rm on
		
		<if test="mediaType == 3 ">
			(bp.windows_u3dmodel_id=rm.id)
		</if>
		<if test="mediaType == 4 ">
			(bp.macbook_u3dmodel_id=rm.id)
		</if>
		<if test="mediaType == 5 ">
			(bp.ios_u3dmodel_id=rm.id)
		</if>
		<if test="mediaType == 6 ">
			(bp.android_u3dmodel_id=rm.id)
		</if>
		<if test="mediaType == 7 ">
			(bp.ipad_u3dmodel_id=rm.id)
		</if>
		<if test="mediaType == ''  or mediaType == null or mediaType == 2 ">
			(bp.windows_u3dmodel_id=rm.id)
		</if>
		where bp.id = #{id}
		</select>
		
	<!-- getInfoByIdList -->
	<select id="getInfoByIdList" resultMap="AllResultMapMoreInfo"
		parameterType="java.util.Map">
		select
		 <!-- bp.id -->
		 bp.id as id,bp.sys_code as sys_code,split_textures_info,product_code,product_name,bp.brand_id,parent_id,material_file_id,spaceComon_id,pro_style_id,color_id,
		 product_length,product_width,product_height,min_height,full_pave_length,sale_price,bp.pic_id as pic_id,pic_ids,material_pic_ids,house_type_values,
		 product_type_value,bm_ids,code_number,designTemplet_id,ipad_u3dmodel_id,ios_u3dmodel_id,android_u3dmodel_id,macbook_u3dmodel_id,
		 windows_u3dmodel_id,decoration_id,putaway_modified,product_small_type_value,fbx_state,fbx_file_id,fbx_texture,config_id,
		 product_model_number,sale_price_value,colors_long_code,
		 
		<!-- sdbig.value as bigTypeValue, -->
		sdbig.valuekey as bigTypeValueKey,
		sdbig.name as bigTypeName,
		<!-- sdsmall.value as smallTypeValue, -->
		sdsmall.valuekey as smallTypeValueKey,
		sdsmall.name as smallTypeName,
		<!-- count(G.id) as groupCount, -->
		case 
		when G.id is null then 0
		else 1 	end as groupCount,
		sdsmall.att1 smallTypeAtt1,
		<!-- 收藏状态 -->
		CASE
		WHEN upc.id IS NOT NULL THEN
			1
		ELSE
			0
		END AS collectState
		from base_product bp 
		left join sys_dictionary sdbig on sdbig.type = "productType" and sdbig.value = bp.product_type_value
		left join sys_dictionary sdsmall on sdsmall.type = sdbig.valuekey and sdsmall.value = bp.product_small_type_value
		LEFT JOIN (SELECT gpd.id,gpd.product_id FROM group_product_details gpd
		LEFT JOIN group_product gp ON gp.id = gpd.group_id WHERE gp.design_templet_id = #{designTemplateId,jdbcType=INTEGER} AND gpd.is_main = 1 limit 0,1) G
		ON G.product_id = bp.id
		LEFT JOIN user_product_collect upc ON bp.id = upc.product_id and upc.user_id = #{userId,jdbcType=INTEGER}
		where bp.id in
		<foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<resultMap id="ProductPropsSimpleMap" type="com.nork.productprops.model.ProductPropsSimple">
		<result column="key" property="key" jdbcType="VARCHAR" />
		<result column="is_sort" property="isSort" jdbcType="INTEGER" />
		<result column="sort_value" property="sortValue" jdbcType="INTEGER" />
		<result column="value" property="value" jdbcType="INTEGER" />
	</resultMap>
	
	<select id="getProductPropsSimpleByProductId" resultMap="ProductPropsSimpleMap">
		select 
		ppp.code as "key",
		case 
		when ppp.filter_order = "filter" then 1
		else 0 end as is_sort,
		case
		when ppp.sequence_number is null then 99
		else ppp.sequence_number end as sort_value,
		ppc.prop_value as value
		from product_attribute pa
		left join product_props ppp on ppp.id = pa.attribute_id
		left join product_props ppc on ppc.id = pa.attribute_value_id
		where pa.product_id = #{productId,jdbcType=INTEGER}
		and ppp.id is not null
		and ppc.id is not null
	</select>

	<!--匹配设计方案模板产品数据-->
	<!--<select id="getTempletProductData" resultMap="AllResultMap"
			parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT bp.product_code FROM (
		select DISTINCT(pcr.product_id) from pro_category pc
		right join product_category_rel pcr on pcr.category_id = pc.id
		where pc.third_stage_code = #{productTypeCode,jdbcType=VARCHAR} and pc.is_deleted = 0
		&lt;!&ndash;SELECT product_id FROM product_category_rel&ndash;&gt;
		&lt;!&ndash;WHERE category_id IN (SELECT pc.id FROM pro_category pc WHERE pc.is_deleted = 0&ndash;&gt;
		&lt;!&ndash;AND pc.long_code LIKE CONCAT(CONCAT('%',#{productTypeCode,jdbcType=VARCHAR}),'%'))&ndash;&gt;
		) t1
		LEFT JOIN
		(
		select pro.* from base_product pro where pro.id in
		(SELECT product_id FROM design_plan_product WHERE plan_id = #{planId,jdbcType=INTEGER} AND is_deleted = 0)
		<if test="productTypeValue != null and productTypeValue != ''" >
			AND pro.product_type_value = #{productTypeValue,jdbcType=VARCHAR}
		</if>
		<if test="productSmallTypeValue != null and productSmallTypeValue != ''" >
			AND pro.product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}
		</if>
		) as bp ON t1.product_id = bp.id AND bp.is_deleted = 0
		&lt;!&ndash;LEFT JOIN base_brand bb ON bb.id = bp.brand_id and bb.is_deleted = 0&ndash;&gt;
		&lt;!&ndash;LEFT JOIN res_pic rp ON bp.pic_id = rp.id and rp.is_deleted = 0&ndash;&gt;
		&lt;!&ndash; 产品属性过滤 &ndash;&gt;
		<if test="attributeConditionList !=  null and  attributeConditionList.size > 0 ">
			RIGHT JOIN (
			SELECT id AS product_id FROM (
			<foreach collection="attributeConditionList" index="index" item="item" open="" separator="UNION ALL" close="">
				select pa.product_id AS id from product_attribute pa
				LEFT JOIN product_props pp ON pp.id = pa.attribute_value_id
				WHERE 1=1
				and ${item}
			</foreach>
			) products group by products.id having count(products.id) &gt;= #{attributeConditionSize,jdbcType=INTEGER}
			) t4 ON t4.product_id = bp.id
		</if>
		WHERE bp.id IS NOT NULL
		AND   bp.is_deleted = 0
		AND  LOCATE('baimo',bp.product_code)=0
		&lt;!&ndash;diy分类搜索过滤同类型新增产品只显示主产品&ndash;&gt;
		AND ( bp.parent_id IS NULL OR bp.parent_id = bp.id)
		<if test="putawayStateList != null  and  putawayStateList.size > 0  ">
			AND
			<foreach collection="putawayStateList" index="index" item="item" open="(" separator="or" close=")">
				bp.putaway_state = #{item}
			</foreach>
		</if>
		<if test="bmIds != null and bmIds != ''" >
			AND bp.bm_ids = #{bmIds,jdbcType=VARCHAR}
		</if>
		<if test="styleId != null and styleId != ''" >
			AND bp.style_id = #{styleId,jdbcType=INTEGER}
		</if>
		<if test="isBeijing == true">
			&lt;!&ndash; 过滤背景墙产品长度 &ndash;&gt;
			<if test="startLength != null and endLength != null">
				AND  bp.product_length between #{startLength,jdbcType=INTEGER} and #{endLength,jdbcType=INTEGER}
			</if>
			&lt;!&ndash; 过滤背景墙产品高度 &ndash;&gt;
			<if test="stretchHeight != null and stretchHeight != ''">
				<choose>
					<when test="stretchHeight == '30' or stretchHeight == '50'">
						AND  (bp.product_height = #{stretchHeight,jdbcType=INTEGER})
					</when>
					<otherwise>
						AND  (bp.product_height = #{stretchHeight,jdbcType=INTEGER} or (bp.product_height &lt; 230 and bp.product_height &gt; 50))
					</otherwise>
				</choose>
			</if>

		</if>
		&lt;!&ndash;窗帘、一字淋浴屏过滤长高&ndash;&gt;
		<if test="isStretch == true">
			<if test="stretchHeight != null">
				and  bp.product_height = #{stretchHeight,jdbcType=INTEGER}
			</if>
			<if test="startLength != null and endLength != null">
				and bp.product_length between #{startLength,jdbcType=INTEGER} and #{endLength,jdbcType=INTEGER}
			</if>
		</if>
		&lt;!&ndash; 过滤特殊分类的产品长和高 如：门、门框&ndash;&gt;
		<if test="productLength != null and productLength != '' and productHeight != null and productHeight != '' ">
			AND bp.product_length = #{productLength,jdbcType=VARCHAR}
			AND bp.product_height = #{productHeight,jdbcType=VARCHAR}
		</if>
		&lt;!&ndash; 过滤特殊分类的产品长和宽 如：地毯&ndash;&gt;
		<if test="productLength != null and productLength != '' and productWidth != null and productWidth != '' ">
			AND bp.product_length &lt;= #{productLength,jdbcType=VARCHAR}
			AND bp.product_width &lt;= #{productWidth,jdbcType=VARCHAR}
		</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>-->

	<!--匹配设计方案模板产品数据-->
	<select id="getTempletProductData" resultMap="AllResultMap"
			parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT bp.product_code FROM  pro_category pc
		LEFT join product_category_rel pcr on pcr.category_id = pc.id
		left join base_product bp on bp.id = pcr.product_id
		LEFT JOIN
		(SELECT dpp.product_id FROM base_product b
		left join design_plan_product dpp ON b.`id` = dpp.`init_product_id`
		WHERE dpp.plan_id = #{planId,jdbcType=INTEGER} AND dpp.is_deleted = 0
		<if test="productTypeValue != null and productTypeValue != ''" >
			AND b.product_type_value = #{productTypeValue,jdbcType=VARCHAR}
		</if>
		<if test="productSmallTypeValue != null and productSmallTypeValue != ''" >
			AND b.product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}
		</if>
		) as dbp ON dbp.product_id = bp.id AND bp.is_deleted = 0
		<!-- 产品属性过滤 -->
		<if test="attributeConditionList !=  null and  attributeConditionList.size > 0 ">
			RIGHT JOIN (
			SELECT id AS product_id FROM (
			<foreach collection="attributeConditionList" index="index" item="item" open="" separator="UNION ALL" close="">
				select pa.product_id AS id from product_attribute pa
				LEFT JOIN product_props pp ON pp.id = pa.attribute_value_id
				WHERE 1=1
				and ${item}
			</foreach>
			) products group by products.id having count(products.id) &gt;= #{attributeConditionSize,jdbcType=INTEGER}
			) t4 ON t4.product_id = bp.id
		</if>
		WHERE dbp.product_id is not null
		AND pc.third_stage_code = #{productTypeCode,jdbcType=VARCHAR}
		AND pcr.id is not null
		AND   bp.is_deleted = 0
		AND  LOCATE('baimo',bp.product_code)=0
		<!--diy分类搜索过滤同类型新增产品只显示主产品-->
		<if test="putawayStateList != null  and  putawayStateList.size > 0  ">
			AND
			<foreach collection="putawayStateList" index="index" item="item" open="(" separator="or" close=")">
				bp.putaway_state = #{item}
			</foreach>
		</if>
		<if test="bmIds != null and bmIds != ''" >
			AND bp.bm_ids = #{bmIds,jdbcType=VARCHAR}
		</if>
		<if test="styleId != null and styleId != ''" >
			AND bp.style_id = #{styleId,jdbcType=INTEGER}
		</if>
		<if test="isBeijing == true">
			<!-- 过滤背景墙产品长度 -->
			<if test="startLength != null and endLength != null">
				AND  bp.product_length between #{startLength,jdbcType=INTEGER} and #{endLength,jdbcType=INTEGER}
			</if>
			<!-- 过滤背景墙产品高度 -->
			<if test="stretchHeight != null and stretchHeight != ''">
				<choose>
					<when test="stretchHeight == '30' or stretchHeight == '50'">
						AND  (bp.product_height = #{stretchHeight,jdbcType=INTEGER})
					</when>
					<otherwise>
						AND  (bp.product_height = #{stretchHeight,jdbcType=INTEGER} or (bp.product_height &lt; 230 and bp.product_height &gt; 50))
					</otherwise>
				</choose>
			</if>

		</if>
		<!--窗帘、一字淋浴屏过滤长高-->
		<if test="isStretch == true or isShrink == true ">
<!-- 		<if test="isStretch == true"> -->
			<if test="stretchHeight != null">
				and  bp.product_height = #{stretchHeight,jdbcType=INTEGER}
			</if>
			<if test="startLength != null and endLength != null">
				and bp.product_length between #{startLength,jdbcType=INTEGER} and #{endLength,jdbcType=INTEGER}
			</if>
		</if>
		<!-- 过滤特殊分类的产品长和高 如：门、门框-->
		<if test="productLength != null and productLength != '' and productHeight != null and productHeight != '' ">
			AND bp.product_length = #{productLength,jdbcType=VARCHAR}
			AND bp.product_height = #{productHeight,jdbcType=VARCHAR}
		</if>
		<!-- 过滤特殊分类的产品长和宽 如：地毯-->
		<if test="productLength != null and productLength != '' and productWidth != null and productWidth != '' ">
			AND bp.product_length &lt;= #{productLength,jdbcType=VARCHAR}
			AND bp.product_width &lt;= #{productWidth,jdbcType=VARCHAR}
		</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>
	
	<!--匹配同分类产品数据-->
	<select id="getProductData" resultMap="AllResultMap"
			parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT DISTINCT bp.product_code
		<!-- ,CASE WHEN bp.id is null THEN 1
		通过比较款式风格和型号排序
		<if test="styleId != null and styleId > 0 
		and productStyleIdInfo != null and productStyleIdInfo !='' 
		and productModelNumber != null and productModelNumber !=''
		and  orderSmallTypeValue != null">
			WHEN
			bp.style_id = #{styleId,jdbcType=INTEGER}
			and bp.product_style_id_info = #{productStyleIdInfo,jdbcType=VARCHAR}
			and bp.product_model_number = #{productModelNumber,jdbcType=VARCHAR}
			and bp.product_small_type_value = #{orderSmallTypeValue}
			THEN 12
		</if>
		<if test="styleId != null and styleId > 0 
		and  orderSmallTypeValue != null">
			WHEN
			bp.style_id = #{styleId,jdbcType=INTEGER}
			and bp.product_small_type_value = #{orderSmallTypeValue}
			THEN 11
		</if>
		<if test="styleId != null and styleId > 0 and productModelNumber != null and productModelNumber !='' ">
			WHEN
			bp.style_id = #{styleId,jdbcType=INTEGER}
			and bp.product_model_number = #{productModelNumber,jdbcType=VARCHAR}
			THEN 10
		</if>
		<if test="styleId != null and styleId > 0 and productStyleIdInfo != null and productStyleIdInfo !=''">
			WHEN
			bp.style_id = #{styleId,jdbcType=INTEGER}
			and bp.product_style_id_info = #{productStyleIdInfo,jdbcType=VARCHAR}
			THEN 9
		</if>
		<if test="styleId != null and styleId > 0">
			WHEN bp.style_id = #{styleId,jdbcType=INTEGER} THEN 8
		</if>
		<if test="productModelNumber != null and productModelNumber !='' and productStyleIdInfo != null and productStyleIdInfo !=''">
			WHEN
			bp.product_model_number = #{productModelNumber,jdbcType=VARCHAR}
			and bp.product_style_id_info = #{productStyleIdInfo,jdbcType=VARCHAR}
			THEN 7
		</if>
		<if test="productModelNumber != null and productModelNumber !=''">
			WHEN  bp.product_model_number = #{productModelNumber,jdbcType=VARCHAR} THEN 6
		</if>
		<if test="productStyleIdInfo != null and productStyleIdInfo !=''">
			WHEN  bp.product_style_id_info = #{productStyleIdInfo,jdbcType=VARCHAR} THEN 5
		</if>
		ELSE 2  END AS order_type -->
		FROM
		<!--(
		select DISTINCT(pcr.product_id) from pro_category pc
		right join product_category_rel pcr on pcr.category_id = pc.id
		where pc.third_stage_code = #{productTypeCode,jdbcType=VARCHAR} and pc.is_deleted = 0
		) t1-->

		 base_product bp
		<!-- 产品属性过滤 -->
		<if test="attributeConditionList !=  null and  attributeConditionList.size > 0 ">
			LEFT JOIN product_attribute pa ON  pa.product_id = bp.id AND  pa.is_deleted = 0
			RIGHT JOIN (
			SELECT id AS product_id FROM (
			<foreach collection="attributeConditionList" index="index" item="item" open="" separator="UNION ALL" close="">
				select pa.product_id AS id from product_attribute pa
				LEFT JOIN product_props pp ON pp.id = pa.attribute_value_id
				WHERE 1=1
				and ${item}
			</foreach>
			) products group by products.id having count(products.id) &gt;= #{attributeConditionSize,jdbcType=INTEGER}
			) t4 ON t4.product_id = bp.id
		</if>
		WHERE bp.id IS NOT NULL
		AND   bp.is_deleted = 0
		AND  LOCATE('baimo',bp.product_code)=0
		<!--diy分类搜索过滤同类型新增产品只显示主产品-->
		AND ( bp.parent_id IS NULL OR bp.parent_id = bp.id)
		<if test="putawayStateList != null  and  putawayStateList.size > 0  ">
			AND bp.putaway_state in
			<foreach collection="putawayStateList" item="item" open="(" close=")" separator=",">
				 #{item}
			</foreach>
		</if>
		<if test="productTypeValue != null and productTypeValue != ''" >
			AND bp.product_type_value = #{productTypeValue,jdbcType=VARCHAR}
		</if>
		<if test="productSmallTypeValue != null and productSmallTypeValue != ''" >
			AND bp.product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}
		</if>
		<if test="smallTypeValueListForShowAll != null and smallTypeValueListForShowAll.size != 0">
			and bp.product_small_type_value in
			<foreach collection="smallTypeValueListForShowAll" open="(" close=")" separator="," item="smallTypeValueListItem">
				#{smallTypeValueListItem}
			</foreach>
		</if>		
		<if test="bmIds != null and bmIds != ''" >
			AND bp.bm_ids = #{bmIds,jdbcType=VARCHAR}
		</if>
		<if test="isBeijing == true">
			<!-- 过滤背景墙产品长度 -->
			<if test="startLength != null and endLength != null">
				AND  bp.product_length between #{startLength,jdbcType=INTEGER} and #{endLength,jdbcType=INTEGER}
			</if>
			<!-- 过滤背景墙产品高度 -->
			<if test="stretchHeight != null and stretchHeight != ''">
				<choose>
					<when test="stretchHeight == '30' or stretchHeight == '50'">
						AND  (bp.product_height = #{stretchHeight,jdbcType=INTEGER})
					</when>
					<otherwise>
						AND  (bp.product_height = #{stretchHeight,jdbcType=INTEGER} or (bp.product_height &lt; 230 and bp.product_height &gt; 50))
					</otherwise>
				</choose>
			</if>
		</if>
		<!--窗帘、一字淋浴屏过滤长高-->
		<if test="isStretch == true">
<!-- 		<if test="isStretch == true"> -->
			<if test="stretchHeight != null">
				and  (bp.product_height = #{stretchHeight,jdbcType=INTEGER})
			</if>
			<if test="startLength != null and endLength != null">
				and bp.product_length between #{startLength,jdbcType=INTEGER} and #{endLength,jdbcType=INTEGER}
			</if>
		</if>
		<!-- 过滤特殊分类的产品长和高 如：门、门框-->
		<if test="productLength != null and productLength != '' and productHeight != null and productHeight != '' ">
			AND bp.product_length = #{productLength,jdbcType=VARCHAR}
			AND bp.product_height = #{productHeight,jdbcType=VARCHAR}
		</if>
		<!-- 过滤特殊分类的产品长和宽 如：地毯-->
		<if test="productLength != null and productLength != '' and productWidth != null and productWidth != '' ">
			AND bp.product_length &lt;= #{productLength,jdbcType=VARCHAR}
			AND bp.product_width &lt;= #{productWidth,jdbcType=VARCHAR}
		</if>
		<if test="measureCode != null and measureCode != ''">
			and bp.measure_code = #{measureCode,jdbcType=VARCHAR}
		</if>
		<if test="styleId != null">
			and  bp.style_id = #{styleId,jdbcType=INTEGER}
		</if>
		<if test="orderSmallTypeValue != null">
			and bp.product_small_type_value = #{orderSmallTypeValue,jdbcType=INTEGER}
		</if>
		<if test="productModelNumber != null and productModelNumber != ''">
			and bp.product_model_number = #{productModelNumber,jdbcType=VARCHAR}
		</if>
		<if test="productStyleIdInfo != null and productStyleIdInfo != ''">
			and bp.product_style_id_info = #{productStyleIdInfo,jdbcType=VARCHAR}
		</if>
		order by  bp.id desc
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>

	<!-- findIdListByStatus -->
	<select id="findIdListByStatus" resultType="java.lang.Integer">
		select id from base_product where putaway_state in 
		<foreach collection="productStatusList" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="limit > 0 ">
			LIMIT #{limit,jdbcType=INTEGER}
		</if>
	</select>


	<select id="getProductListByStatus" resultType="java.lang.Integer">
		select id from base_product where putaway_state = #{productStatus,jdbcType=INTEGER}

	</select>
	
	<!-- updateStatus -->
	<update id="updateStatus">
		update base_product set putaway_state = #{newStatus,jdbcType=INTEGER}
		where putaway_state = #{oldStatus,jdbcType=INTEGER}
	</update>

	<!-- updateStatus -->
	<update id="updateBmProductStatus">
		update base_product set putaway_state = #{newStatus,jdbcType=INTEGER}
		where putaway_state = #{oldStatus,jdbcType=INTEGER} and LOCATE("baimo",product_code) = 1
	</update>

	<!-- updateProductStatus -->
	<update id="updateProductStatus">
		update base_product set putaway_state = #{newStatus,jdbcType=INTEGER}
	<!--,remark = CONCAT(IFNULL(remark,""),",pretreatment") -->
    where
    <if test="productIdList != null">
        id IN
        <foreach collection="productIdList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>
    and putaway_state = #{oldStatus,jdbcType=INTEGER}
</update>

<!-- getPreprocessProductIdByCategoryCode -->
	<!-- 取出所有有属性的产品的id组成list -->
	<select id="getPreprocessProductIdByCategoryCode" resultType="java.lang.Integer">
	select distinct(pcr.product_id) as product_id from product_category_rel pcr 
	left join pro_category pc on pc.id = pcr.category_id
	left join product_attribute pa on pa.product_id = pcr.product_id
	left join base_product bp on bp.id = pcr.product_id
	left join product_props ppp on ppp.id = pa.attribute_id
	left join product_props ppc on ppc.id = pa.attribute_value_id
	where 
	bp.is_deleted = 0
	and 
	<foreach collection="productStatusList" index="index" item="item" open="(" separator="or" close=")">
		bp.putaway_state = #{item}
	</foreach>
	and pc.third_stage_code = #{categoryCode,jdbcType=VARCHAR}
	<!-- 只要同类型产品的主产品 -->
	and (bp.parent_id is null or bp.parent_id = bp.id or bp.parent_id = 0)
	and bp.product_code not like "baimo_%"
	and pa.id is not null
	and ppp.id is not null
	and ppc.id is not null
	</select>
	
	<!-- getPreprocessBaimoProductIdByCategoryCode -->
	<select id="getPreprocessBaimoProductIdByCategoryCode" resultType="java.lang.Integer">
		select bp.id from base_product bp
		left join sys_dictionary sdbig on sdbig.type = "productType" and sdbig.value = bp.product_type_value
		LEFT JOIN product_attribute pa ON pa.product_id = bp.id
		LEFT JOIN product_props ppp ON ppp.id = pa.attribute_id
		LEFT JOIN product_props ppc ON ppc.id = pa.attribute_value_id
		where sdbig.valuekey = #{categoryCode,jdbcType=VARCHAR} and bp.product_code like "baimo_%"
		AND ppp.id IS NOT NULL
		AND ppc.id IS NOT NULL
	</select>
	
	<!-- getProductTypeValueByStatus -->
	<select id="getProductTypeValueByStatus" resultType="java.lang.Integer">
		select distinct(product_type_value) from base_product where putaway_state in 
		<foreach collection="productStatusList" open="(" close=")" item="item" separator=",">
			${item}
		</foreach>
	</select>
	
	<!-- getPropInfoByStatusListAndProductTypeValue -->
	<select id="getPropInfoByStatusListAndProductTypeValue" resultMap="AllResultMap">
		select 
		pa.product_id as id,
		bp.product_code,
		group_concat(
		concat(ppp.code, "," ,
		case 
		when ppp.filter_order = "filter" then 1
		else 0 end, "," ,
		case
		when ppp.sequence_number is null then 99
		else ppp.sequence_number end, "," ,
		ppc.prop_value) SEPARATOR ";"
		)as prop_info
		from product_attribute pa
		left join product_props ppp on ppp.id = pa.attribute_id
		left join product_props ppc on ppc.id = pa.attribute_value_id
		left join base_product bp on bp.id = pa.product_id
		where 1 = 1
		<if test="productStatusList != null and productStatusList.size > 0">
			and bp.putaway_state in
			<foreach collection="productStatusList" item="item" open="(" close=")" separator=",">
				${item}
			</foreach>
		</if>
		<if test="productTypeValue != null">
			and bp.product_type_value = #{productTypeValue,jdbcType=VARCHAR}
		</if>
		and ppp.id is not null
		and ppc.id is not null
		group by pa.product_id
	</select>

	<select id="findByPlanIdProductList" resultMap="AllResultMap">
		select <include refid="All_Column_List" /> from base_product
		WHERE id IN
		(
			SELECT dpp.product_id FROM base_product bp
			LEFT JOIN design_plan_product dpp ON bp.`id` = dpp.`init_product_id`
			WHERE dpp.plan_id = #{planId,jdbcType=INTEGER} AND dpp.is_deleted = 0
			<if test="productTypeValue != null and productTypeValue != ''">
				AND  bp.product_type_value = #{productTypeValue,jdbcType=VARCHAR}
			</if>
			<if test="productSmallTypeValue != null">
				AND bp.product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}
			</if>
		)
	</select>

	<select id="getCountRealTime" resultType="int"
		parameterType="com.nork.product.model.PrepProductSearchInfo">
		select
		count(distinct(bp.id))
		<if test="levelLimitCount>=0">
			 from (SELECT * FROM base_product LIMIT #{levelLimitCount}  ) bp  
		</if>
		<if test="levelLimitCount &lt; 0">
			 from base_product bp  
		</if>
		
		
		<!-- wait -->
		<!-- <if test="hasFilterProps == true">
			LEFT JOIN prep_product_props_info pppi on pppi.product_id = #{baimoProductId,jdbcType=INTEGER}
			and pppi.match_product_id = ppsi.product_id
		</if> -->
		
		left join product_category_rel pcr on pcr.product_id = bp.id

        <!-- 平台过滤 -->
        <if test="platformProductTable != null and platformId != null">
            LEFT JOIN ${platformProductTable} AS ppr ON ppr.product_id = bp.id
        </if>
		
		<if test="productModelOrBrandName != null and productModelOrBrandName != ''">
			left join base_brand bb on bb.id = bp.brand_id
		</if>
		
		left join pro_category pc on pc.id = pcr.category_id 

		<choose>
			<when test="firstStageCode != null and firstStageCode != ''">
				and pc.first_stage_code = #{firstStageCode,jdbcType=VARCHAR}
			</when>
			<otherwise>
				<choose>
					<when test="secondStageCode != null and secondStageCode != ''">
						and pc.second_stage_code = #{secondStageCode,jdbcType=VARCHAR}
					</when>
					<otherwise>
						<choose>
							<when test="thirdStageCode != null and thirdStageCode != ''">
								and pc.third_stage_code = #{thirdStageCode,jdbcType=VARCHAR}
							</when>
							<otherwise>
								<choose>
									<when test="fourthStageCode != null and fourthStageCode != ''">
										and pc.fourth_stage_code = #{fourthStageCode,jdbcType=VARCHAR}
									</when>
									<otherwise>
										<choose>
											<when test="fifthStageCode != null and fifthStageCode != ''">
												and pc.fifth_stage_code = #{fifthStageCode,jdbcType=VARCHAR}
											</when>
											<otherwise>
												and pc.long_code LIKE CONCAT('%',#{categoryLongCodeLike,jdbcType=VARCHAR},'%')
											</otherwise>
										</choose>
									</otherwise>
								</choose>
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</otherwise>
		</choose>
		
		and pc.is_deleted = 0
		AND  LOCATE('baimo',bp.product_code) = 0
		<!-- 产品属性过滤 -->
		<if test="attributeConditionList !=  null and  attributeConditionList.size > 0 ">
			RIGHT JOIN (
				SELECT id AS product_id FROM (
				<foreach collection="attributeConditionList" index="index" item="item" open="" separator="UNION ALL" close="">
					select pa.product_id AS id from product_attribute pa
					LEFT JOIN product_props pp ON pp.id = pa.attribute_value_id
					WHERE 1=1
					and ${item}
				</foreach>
				) products group by products.id having count(products.id) &gt;= #{attributeConditionSize,jdbcType=INTEGER}
			) t4 ON t4.product_id = bp.id
		</if>
		
		where 1=1
		
		and pc.id is not null

		<!-- 上架状态->start -->
		<if test="productStatus != null">
			and bp.putaway_state = #{productStatus,jdbcType=INTEGER}
		</if>
		<!-- 上架状态->end -->
		
		and bp.is_deleted = 0
		
		<!-- 款式过滤 -->
		<if test="beijingStyleId != null">
			and bp.style_id = #{beijingStyleId}
		</if>
		<!-- 天花布局过滤 -->
		<if test="productSmallpoxIdentify != null">
			and bp.product_smallpox_identify_str = #{productSmallpoxIdentify,jdbcType=VARCHAR}
		</if>
		<!-- 天花布局List过滤 -->
		<if test="identifyList != null and identifyList.size != 0">
			and bp.product_smallpox_identify_str in
			<foreach collection="identifyList" item="identifyListItem" open="(" close=")" separator=",">
				#{identifyListItem, jdbcType = VARCHAR}
			</foreach>
		</if>
		<!-- 分类过滤->start -->
		
		<if test="bigTypeValue !=null">
			and bp.product_type_value = #{bigTypeValue,jdbcType=INTEGER}
		</if>
		<if test="excludeSmallTypeValue != null and excludeSmallTypeValue.size > 0">
			and bp.product_small_type_value not in
			<foreach collection="excludeSmallTypeValue" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		
		<!-- 修改为:小类list 2017.5.3 by huangsongbo ->start -->
		<!--<if test="smallTypeValueList != null and smallTypeValueList.size > 0">
			and bp.product_small_type_value in
			<foreach collection="smallTypeValueList" item="smallTypeValueListItem" open="(" close=")" separator=",">
				${smallTypeValueListItem}
			</foreach>
		</if>-->
		<!-- 修改为:小类list 2017.5.3 by huangsongbo ->end -->

		<!-- 修改为:小类list 2017.11.22 by xiaoxc ->start -->
		<choose>
			<when test="isProductInfoFilter == true">
				<if test="productInfoModelList != null and productInfoModelList.size > 0">
					and
					<foreach collection="productInfoModelList" item="productItem" open="(" separator="or" close=")">
						(bp.product_small_type_value = ${productItem.smallTypeValue}
						<if test="productItem.productLengthStart != null and productItem.productLengthStart > 0">
							and bp.product_length between ${productItem.productLengthStart} and ${productItem.productLengthEnd}
						</if>
						<if test="productItem.productHeight != null and productItem.productHeight > 0">
							and  bp.product_height = ${productItem.productHeight}
						</if>
						)
					</foreach>
				</if>
			</when>
			<otherwise>
				<if test="smallTypeValueList != null and smallTypeValueList.size > 0">
					and bp.product_small_type_value in
					<foreach collection="smallTypeValueList" item="smallTypeValueListItem" open="(" close=")" separator=",">
						${smallTypeValueListItem}
					</foreach>
				</if>
			</otherwise>
		</choose>
		<!-- 修改为:小类list 2017.11.22 by xiaoxc ->end -->
		<choose>
			<when test="isInternalUser != null and isInternalUser == 'yes'">
				and bp.putaway_state in (1, 2, 3, 5)
			</when>
			<otherwise>
				and  bp.putaway_state=3
			</otherwise>
		</choose>
		<!-- 分类过滤->end -->
		
		<!-- 长宽高过滤->start -->
		<if test="productLength != null">
			and bp.product_length = #{productLength,jdbcType=INTEGER}
		</if>
		<if test="productWidth != null">
			and bp.product_width = #{productWidth,jdbcType=INTEGER}
		</if>
		<if test="productHeight != null">
			and bp.product_height = #{productHeight,jdbcType=INTEGER}
		</if>
		<if test="lessProductLength != null">
			and bp.product_length &lt;= #{lessProductLength,jdbcType=INTEGER}
		</if>
		<if test="lessProductWidth != null">
			and bp.product_width &lt;= #{lessProductWidth,jdbcType=INTEGER}
		</if>
		<!-- 长宽高过滤->end -->
		
		<!-- 空间类型过滤->start -->
		<if test="houseTypeList != null and houseTypeList.size > 0">
			and (
			<foreach collection="houseTypeList" index="index" item="item">
				<choose>
					<when test="index== 0">
						concat("," , bp.house_type_values , ",") like
						concat("%," ,#{item,jdbcType=VARCHAR}, ",%")
					</when>
					<otherwise>
						or concat("," , bp.house_type_values , ",") like
						concat("%," ,#{item,jdbcType=VARCHAR}, ",%")
					</otherwise>
				</choose>
			</foreach>
			)
		</if>
		<!-- 空间类型过滤->end -->
		
		<!-- 型号/品牌名称过滤->start -->
		<if test="productModelOrBrandName != null and productModelOrBrandName != ''">
			and (bb.brand_name like concat("%" ,#{productModelOrBrandName,jdbcType=VARCHAR}, "%")
			or bp.product_model_number like concat("%" ,#{productModelOrBrandName,jdbcType=VARCHAR}, "%")
			or bp.product_code like concat("%" ,#{productModelOrBrandName,jdbcType=VARCHAR}, "%"))
		</if>
		<!-- 型号/品牌名称过滤->end -->
		
		<!-- 定制过滤->start -->
		and (
		
			1 != 1 
			<!-- 只搜素通用 -->
			<if test="isTianh == false">
				or (bp.bm_ids IS NULL
				<!--tianh产品走这个逻辑搜索-->
				<if test="bigTypeValue == 1">
					<choose>
						<when test="measureCode != null and measureCode != ''">
							and bp.measure_code = #{measureCode,jdbcType=VARCHAR}
						</when>
						<otherwise>
							and  bp.product_small_type_value = 8
						</otherwise>
					</choose>
				</if>
				<if test="isBeijing == true">
					<if test="beijingHeight != null">
						<choose>
							<when test="beijingHeight == '30' or beijingHeight == '50'">
								and  (bp.product_height = #{beijingHeight,jdbcType=INTEGER})
							</when>
							<otherwise>
								and  (bp.product_height = #{beijingHeight,jdbcType=INTEGER} or (bp.product_height &lt; 230 and bp.product_height &gt; 50))
							</otherwise>
						</choose>
					</if>
					<if test="beijingLengthStart != null and beijingLengthEnd != null">
						and bp.product_length between #{beijingLengthStart,jdbcType=INTEGER} and #{beijingLengthEnd,jdbcType=INTEGER}
					</if>
				</if>
				<!--背景墙、窗帘、一字淋浴屏过滤长高-->
				<if test="isStretch == true and isProductInfoFilter == false">
					<if test="beijingHeight != null">
						and  bp.product_height = #{beijingHeight,jdbcType=INTEGER}
					</if>
					<if test="beijingLengthStart != null and beijingLengthEnd != null">
						and bp.product_length between #{beijingLengthStart,jdbcType=INTEGER} and #{beijingLengthEnd,jdbcType=INTEGER}
					</if>
				</if>
				<!-- 不太懂为什么加了这个 -->
				<!--全铺长度为空不显示通用产品-->
				<if test="beijingLengthStart == 0">
					and bp.id = -1
				</if>
				)
			</if>
		<if test="baimoId != null">
			or 
			(bp.bm_ids is not null and 
			<choose>
				<when test="baimoIdList != null and baimoIdList.size > 0">
					bp.bm_ids in
					<foreach collection="baimoIdList" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</when>
				<otherwise>bp.bm_ids = #{baimoId,jdbcType=INTEGER} </otherwise>
			</choose>
			and (bp.spaceComon_id = #{spaceCommonId,jdbcType=INTEGER} or
			bp.designTemplet_id = #{designTempletId,jdbcType=INTEGER}))
		</if>
		<!-- 户型绘制特殊逻辑(搜扣板天花) ->start -->
		<if test="isFromDraw == true">
			or (bp.material_pic_ids != "" and (bp.windows_u3dmodel_id is null or bp.windows_u3dmodel_id = "") and product_small_type_value = 2)
		</if>
		<!-- 户型绘制特殊逻辑(搜扣板天花) ->end -->
		)

		<!-- wait -->
		<!-- <if test="hasFilterProps == true">
			AND pppi.id IS NOT NULL
		</if> -->
		
		<!-- 授权码逻辑(品牌,大类,小类,产品idList) -->
		<if test="baseProductList !=  null and  baseProductList.size > 0  ">
			and
			<foreach collection="baseProductList" index="index" item="item" open="(" separator="or" close=")">
				<choose>
					<when test="item.productIdList!=null and item.productIdList.size>0">
						(bp.id in
						<foreach collection="item.productIdList" index="indexProductId"
							item="itemProductId" open="(" separator="," close=")">
							#{itemProductId}
						</foreach>
						)
					</when>
					<otherwise>
						<!-- 品牌&&大小类 -->
						<choose>
							<when test=						
							"
							(item.brandId == null or item.brandId == 0)
							and (item.productTypeValue != null or item.productTypeValue != '' )
							and (item.productSmallTypeValue != null or item.productSmallTypeValue != '') 
							">
							(1 != 1)
							</when>
							<otherwise>
								(<!-- 1=1 -->
									<if test="item.brandId != null and item.brandId != 0 ">
										<!-- and -->
										bp.brand_id=#{item.brandId}
									</if>
									<if test="item.productTypeValue != null and item.productTypeValue != '' ">
										and bp.product_type_value=#{item.productTypeValue}
									</if>
									<if test="item.productSmallTypeValue != null and item.productSmallTypeValue != '' ">
										and bp.product_small_type_value=#{item.productSmallTypeValue}
									</if>
								)
							</otherwise>
						</choose>
						
						<!-- 20170425添加逻辑by huangsongbo ->start -->
						<!-- 比如授权码关联的东鹏公司是做墙面瓷砖的,则点击墙面搜索,瓷砖小类只显示东鹏的瓷砖+无品牌瓷砖,其他小类则显示全部 -->
						<if test="item.smallTypeValueListForShowAll != null and item.smallTypeValueListForShowAll.size > 0">
							or bp.product_small_type_value not in 
							<foreach collection="item.smallTypeValueListForShowAll" item="item2" close=")" open="(" separator=",">
								${item2}
							</foreach>
						</if>
						<if test="isShowWu == true">
							<if test="brandIdWuPinPai != null">
								or bp.brand_id = #{brandIdWuPinPai}
							</if>
						</if>
						<!-- 20170425添加逻辑by huangsongbo ->end -->
						
						<!-- 品牌||大小类 -->
					</otherwise>
				</choose>
			</foreach>
		</if>
		<!-- 授权码过滤逻辑(品牌,大类,小类,产品idList)->end -->
		
		<!-- 黑名单过滤 ->start -->
		<if test="prepProductSearchInfoListForBlackList != null and prepProductSearchInfoListForBlackList.size > 0">
			and
			<foreach collection="prepProductSearchInfoListForBlackList" item="prepProductSearchInfoListForBlackListItem" separator="and">
				!(bp.product_type_value = ${prepProductSearchInfoListForBlackListItem.bigTypeValue}
				and bp.product_small_type_value = ${prepProductSearchInfoListForBlackListItem.smallTypeValue})
			</foreach>
		</if>
		<!-- 黑名单过滤 ->end -->

		<!-- 异业联盟过滤 ->start -->
		<if test="brandIds != null and brandIds.size > 0">
			and bp.brand_id IN
			<foreach collection="brandIds" index="index"
					 item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<!-- 异业联盟过滤 ->end -->

		<!-- 平台过滤  ->  start -->
		<if test="platformProductTable != null and platformId != null">
			AND ppr.platform_id = #{platformId,jdbcType=INTEGER}
			AND ppr.putaway_state = 1
			AND ppr.allot_state = 1
		</if>
		<!-- 平台过滤  ->  end -->
	</select>
	
	<resultMap id="CategoryProductResultMap" type="com.nork.product.model.CategoryProductResult">
		<id column="product_id" property="productId" jdbcType="INTEGER"/>
		<result column="product_code" property="productCode" jdbcType="VARCHAR"/>
		<result column="pic_path" property="picPath" jdbcType="VARCHAR"/>
		<result column="product_type_value" property="productTypeValue" jdbcType="INTEGER"/>
		<result column="product_type_name" property="productTypeName" jdbcType="VARCHAR"/>
		<result column="product_type_code" property="productTypeCode" jdbcType="VARCHAR"/>
		<result column="product_small_type_value" property="productSmallTypeValue" jdbcType="INTEGER"/>
		<result column="product_small_type_name" property="productSmallTypeName" jdbcType="VARCHAR"/>
		<result column="product_small_type_code" property="productSmallTypeCode" jdbcType="VARCHAR"/>
		<result column="product_length" property="productLength" jdbcType="VARCHAR"/>
		<result column="product_width" property="productWidth" jdbcType="VARCHAR"/>
		<result column="product_height" property="productHeight" jdbcType="VARCHAR"/>
		<result column="u3d_model_path" property="u3dModelPath" jdbcType="VARCHAR"/>
		<result column="split_textures_info" property="splitTexturesInfoStr" jdbcType="VARCHAR"/>
		<result column="res_texture_id" property="materialPicId" jdbcType="INTEGER"/>
		<result column="res_texture_path" property="resTexturePath" jdbcType="INTEGER"/>
		<result column="texture_attr_value" property="textureAttrValue" jdbcType="INTEGER"/>
		<result column="texture_width" property="textureWidth" jdbcType="VARCHAR"/>
		<result column="texture_height" property="textureHeight" jdbcType="VARCHAR"/>
		<result column="lay_modes" property="laymodes" jdbcType="VARCHAR"/>
		<result column="is_customized" property="isCustomized" jdbcType="INTEGER"/>
		<result column="collect_state" property="collectState" jdbcType="INTEGER"/>
		<result column="small_type_att1" property="smallTypeAtt1" jdbcType="VARCHAR"/>
		<result column="is_main_product" property="isMainProduct" jdbcType="INTEGER"/>
		<result column="min_height" property="minHeight" jdbcType="VARCHAR"/>
		<result column="model_min_height" property="modelMinHeight" jdbcType="INTEGER"/>
		<result column="brand_id" property="brandId" jdbcType="INTEGER"/>
		<result column="product_smallpox_identify_str" property="productSmallpoxIdentify" jdbcType="VARCHAR"/>
		
		<result column="product_name" property="productName" jdbcType="VARCHAR"/>
		<result column="series_id" property="seriesId" jdbcType="INTEGER"/>
		<result column="brand_name" property="brandName" jdbcType="VARCHAR"/>
		<result column="product_model_number" property="productModelNumber" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- getProductIdListV2RealTime -->
	<select id="getProductIdListV2RealTime" parameterType="com.nork.product.model.PrepProductSearchInfo"
		resultMap="CategoryProductResultMap">
		select
		distinct(T.product_id) as product_id,
		bp.product_code as product_code,
		bp.product_name as product_name,
		bp.product_model_number as product_model_number,
		bp.brand_id as brand_id,
		rp.pic_path as pic_path,
		bp.product_type_value as product_type_value,
		sdbig.name as product_type_name,
		sdbig.valuekey as product_type_code,
		bp.product_small_type_value as product_small_type_value,
		sdsmall.name as product_small_type_name,
		sdsmall.valuekey as product_small_type_code,
		bp.product_length as product_length,
		bp.product_width as product_width,
		bp.product_height as product_height,
		bp.product_smallpox_identify_str as product_smallpox_identify_str,
		rm.model_path as u3d_model_path,
		bp.split_textures_info as split_textures_info,
 		bp.series_id,
		<!-- 单材质信息->start -->
		rt.id as res_texture_id,
		rtrp.pic_path as res_texture_path,
		rt.texture_attr_value as texture_attr_value,
		rt.file_width as texture_width,
		rt.file_height as texture_height,
		rt.lay_modes as lay_modes,
		<!-- 单材质信息->end -->
		T.is_custom as is_customized,
		T.gmt_modified,
		bb.brand_name as brand_name,
		case
		when upc.id is null then 0
		else 1 end as collect_state,
		sdsmall.att1 as small_type_att1,
		bp.min_height as min_height,
		case 
		when G.product_id is null then 0
		else 1 end as is_main_product,
		rm.min_height as model_min_height
		from 
		(
		select 
		bp.id as product_id,
		
		case
		when bp.bm_ids is null then 0
		else 1 end as is_custom,
		
		case
		when bp.brand_id = #{brandIdWuPinPai} then 1
		else 0
		end as brand_id_sort,
		bp.product_small_type_value,
		bp.gmt_modified
		<if test="levelLimitCount>=0">
			from (SELECT * FROM base_product LIMIT #{levelLimitCount}  ) bp 
		</if>
		<if test="levelLimitCount &lt; 0">
			from base_product bp 
		</if>
		<!-- wait -->
		<!-- <if test="hasFilterProps == true">
			LEFT JOIN prep_product_props_info pppi on pppi.product_id = #{baimoProductId,jdbcType=INTEGER}
			and pppi.match_product_id = ppsi.product_id
		</if> -->
		
		left join product_category_rel pcr on pcr.product_id = bp.id

		<!-- 平台过滤 -->
		<if test="platformProductTable != null and platformId != null">
			LEFT JOIN ${platformProductTable} AS ppr ON ppr.product_id = bp.id

		</if>
		
		<if test="productModelOrBrandName != null and productModelOrBrandName != ''">
			left join base_brand bb on bb.id = bp.brand_id
		</if>
		
		left join pro_category pc on pc.id = pcr.category_id 

		<choose>
			<when test="firstStageCode != null and firstStageCode != ''">
				and pc.first_stage_code = #{firstStageCode,jdbcType=VARCHAR}
			</when>
			<otherwise>
				<choose>
					<when test="secondStageCode != null and secondStageCode != ''">
						and pc.second_stage_code = #{secondStageCode,jdbcType=VARCHAR}
					</when>
					<otherwise>
						<choose>
							<when test="thirdStageCode != null and thirdStageCode != ''">
								and pc.third_stage_code = #{thirdStageCode,jdbcType=VARCHAR}
							</when>
							<otherwise>
								<choose>
									<when test="fourthStageCode != null and fourthStageCode != ''">
										and pc.fourth_stage_code = #{fourthStageCode,jdbcType=VARCHAR}
									</when>
									<otherwise>
										<choose>
											<when test="fifthStageCode != null and fifthStageCode != ''">
												and pc.fifth_stage_code = #{fifthStageCode,jdbcType=VARCHAR}
											</when>
											<otherwise>
												and pc.long_code LIKE CONCAT('%',#{categoryLongCodeLike,jdbcType=VARCHAR},'%')
											</otherwise>
										</choose>
									</otherwise>
								</choose>
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</otherwise>
		</choose>
		
		and pc.is_deleted = 0
		
		<!-- 产品属性过滤 -->
		<if test="attributeConditionList !=  null and  attributeConditionList.size > 0 ">
			RIGHT JOIN (
				SELECT id AS product_id FROM (
				<foreach collection="attributeConditionList" index="index" item="item" open="" separator="UNION ALL" close="">
					select pa.product_id AS id from product_attribute pa
					LEFT JOIN product_props pp ON pp.id = pa.attribute_value_id
					WHERE 1=1
					and ${item}
				</foreach>
				) products group by products.id having count(products.id) &gt;= #{attributeConditionSize,jdbcType=INTEGER}
			) t4 ON t4.product_id = bp.id
		</if>
		
		where 1=1
		and pc.id is not null
		AND  LOCATE('baimo',bp.product_code) = 0
		<!-- 上架状态->start -->
		<if test="productStatus != null">
			and bp.putaway_state = #{productStatus,jdbcType=INTEGER}
		</if>
		<!-- 上架状态->end -->
		
		and bp.is_deleted = 0
		
		<!-- 款式过滤 -->
		<if test="beijingStyleId != null">
			and bp.style_id = #{beijingStyleId}
		</if>
		<!-- 天花布局过滤 -->
		<if test="productSmallpoxIdentify != null">
			and bp.product_smallpox_identify_str = #{productSmallpoxIdentify,jdbcType=VARCHAR}
		</if>
		<!-- 天花布局List过滤 -->
		<if test="identifyList != null and identifyList.size != 0">
			and bp.product_smallpox_identify_str in
			<foreach collection="identifyList" item="identifyListItem" open="(" close=")" separator=",">
				#{identifyListItem, jdbcType = VARCHAR}
			</foreach>
		</if>
		<if test="bigTypeValue !=null">
			and bp.product_type_value = #{bigTypeValue,jdbcType=INTEGER}
		</if>
		
		<if test="excludeSmallTypeValue != null and excludeSmallTypeValue.size > 0">
			and bp.product_small_type_value not in
			<foreach collection="excludeSmallTypeValue" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		
		<!-- 修改为:小类list 2017.5.3 by huangsongbo ->start -->
		<!--<if test="smallTypeValueList != null and smallTypeValueList.size > 0">
			and bp.product_small_type_value in
			<foreach collection="smallTypeValueList" item="smallTypeValueListItem" open="(" close=")" separator=",">
				${smallTypeValueListItem}
			</foreach>
		</if>-->
		<!-- 修改为:小类list 2017.5.3 by huangsongbo ->end -->

		<!-- 修改为:小类list 2017.11.22 by xiaoxc ->start -->
		<choose>
			<when test="isProductInfoFilter == true">
				<if test="productInfoModelList != null and productInfoModelList.size > 0">
					and
					<foreach collection="productInfoModelList" item="productItem" open="(" separator="or" close=")">
						(bp.product_small_type_value = ${productItem.smallTypeValue}
						<if test="productItem.productLengthStart != null and productItem.productLengthStart > 0">
							and bp.product_length between ${productItem.productLengthStart} and ${productItem.productLengthEnd}
						</if>
						<if test="productItem.productHeight != null and productItem.productHeight > 0">
							and  bp.product_height = ${productItem.productHeight}
						</if>
						)
					</foreach>
				</if>
			</when>
			<otherwise>
				<if test="smallTypeValueList != null and smallTypeValueList.size > 0">
					and bp.product_small_type_value in
					<foreach collection="smallTypeValueList" item="smallTypeValueListItem" open="(" close=")" separator=",">
						${smallTypeValueListItem}
					</foreach>
				</if>
			</otherwise>
		</choose>
		<!-- 修改为:小类list 2017.11.22 by xiaoxc ->end -->

		<!-- 分类过滤->end -->
		
		<choose>
			<when test="isInternalUser != null and isInternalUser == 'yes'">
				and bp.putaway_state in (1, 2, 3, 5)
			</when>
			<otherwise>
				and  bp.putaway_state=3
			</otherwise>
		</choose>
		
		<!-- 空间类型过滤->start -->
		<if test="houseTypeList != null and houseTypeList.size > 0">
			and (
			<foreach collection="houseTypeList" index="index" item="item">
				<choose>
					<when test="index== 0">
						concat("," , bp.house_type_values , ",") like
						concat("%," ,#{item,jdbcType=VARCHAR}, ",%")
					</when>
					<otherwise>
						or concat("," , bp.house_type_values , ",") like
						concat("%," ,#{item,jdbcType=VARCHAR}, ",%")
					</otherwise>
				</choose>
			</foreach>
			)
		</if>
		<!-- 空间类型过滤->end -->
		
		<!-- 型号/品牌名称过滤->start -->
		<if test="productModelOrBrandName != null and productModelOrBrandName != ''">
			and (bb.brand_name like concat("%" ,#{productModelOrBrandName,jdbcType=VARCHAR}, "%")
			or bp.product_model_number like concat("%" ,#{productModelOrBrandName,jdbcType=VARCHAR}, "%")
			or bp.product_code like concat("%" ,#{productModelOrBrandName,jdbcType=VARCHAR}, "%"))
		</if>
		<!-- 型号/品牌名称过滤->end -->
		
		<!-- 长宽高过滤->start -->
		<if test="productLength != null">
			and bp.product_length = #{productLength,jdbcType=INTEGER}
		</if>
		<if test="productWidth != null">
			and bp.product_width = #{productWidth,jdbcType=INTEGER}
		</if>
		<if test="productHeight != null">
			and bp.product_height = #{productHeight,jdbcType=INTEGER}
		</if>
		<if test="lessProductLength != null">
			and bp.product_length &lt;= #{lessProductLength,jdbcType=INTEGER}
		</if>
		<if test="lessProductWidth != null">
			and bp.product_width &lt;= #{lessProductWidth,jdbcType=INTEGER}
		</if>
		<!-- 长宽高过滤->end -->
		
		<!-- 定制过滤->start -->
		and (
			1 != 1
			<!-- 只搜素定制 -->
			<if test="isTianh == false">
				or (bp.bm_ids IS NULL
				<!--tianh产品走这个逻辑搜索-->
				<if test="bigTypeValue == 1">
					<choose>
						<when test="measureCode != null and measureCode != ''">
							and bp.measure_code = #{measureCode,jdbcType=VARCHAR}
						</when>
						<otherwise>
							and  bp.product_small_type_value = 8
						</otherwise>
					</choose>
				</if>
				<!--背景墙过滤长高-->
				<if test="isBeijing == true">
					<if test="beijingHeight != null">
						<choose>
							<when test="beijingHeight == '30' or beijingHeight == '50'">
								and  (bp.product_height = #{beijingHeight,jdbcType=INTEGER})
							</when>
							<otherwise>
								and  (bp.product_height = #{beijingHeight,jdbcType=INTEGER} or (bp.product_height &lt; 230 and bp.product_height &gt; 50))
							</otherwise>
						</choose>
					</if>
					<if test="beijingLengthStart != null and beijingLengthEnd != null">
						and bp.product_length between #{beijingLengthStart,jdbcType=INTEGER} and #{beijingLengthEnd,jdbcType=INTEGER}
					</if>
				</if>
				<!--背景墙、窗帘、一字淋浴屏过滤长高-->
				<if test="isStretch == true and isProductInfoFilter == false ">
					<if test="beijingHeight != null">
						and  bp.product_height = #{beijingHeight,jdbcType=INTEGER}
					</if>
					<if test="beijingLengthStart != null and beijingLengthEnd != null">
						and bp.product_length between #{beijingLengthStart,jdbcType=INTEGER} and #{beijingLengthEnd,jdbcType=INTEGER}
					</if>
				</if>
				<!-- 不太懂为什么加了这个 -->
				<!--全铺长度为空不显示通用产品-->
				<if test="beijingLengthStart == 0">
					and bp.id = -1
				</if>
				)
			</if>
		<if test="baimoId != null">
			or 
			(bp.bm_ids is not null and 
			<choose>
				<when test="baimoIdList != null and baimoIdList.size > 0">
					bp.bm_ids in
					<foreach collection="baimoIdList" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</when>
				<otherwise>bp.bm_ids = #{baimoId,jdbcType=INTEGER} </otherwise>
			</choose>
			and (bp.spaceComon_id = #{spaceCommonId,jdbcType=INTEGER} or
			bp.designTemplet_id = #{designTempletId,jdbcType=INTEGER}))
		</if> 
		<!-- 户型绘制特殊逻辑(搜扣板天花) ->start -->
		<if test="isFromDraw == true">
			or (bp.material_pic_ids != "" and (bp.windows_u3dmodel_id is null or bp.windows_u3dmodel_id = "") and product_small_type_value = 2)
		</if>
		<!-- 户型绘制特殊逻辑(搜扣板天花) ->end -->
		)
		<if test="isShrink == true ">
			<if test="beijingHeight != null">
				and  bp.product_height = #{beijingHeight,jdbcType=INTEGER}
			</if>
			<if test="beijingLengthStart != null and beijingLengthEnd != null">
				and bp.product_length between #{beijingLengthStart,jdbcType=INTEGER} and #{beijingLengthEnd,jdbcType=INTEGER}
			</if>
		</if>
		<!-- 定制过滤->end -->
		
		<!-- 授权码逻辑(品牌,大类,小类,产品idList) -->
		<if test="baseProductList !=  null and  baseProductList.size > 0  ">
			and
			<foreach collection="baseProductList" index="index" item="item" open="(" separator="or" close=")">
				<choose>
					<when test="item.productIdList!=null and item.productIdList.size>0">
						(bp.id in
						<foreach collection="item.productIdList" index="indexProductId"
							item="itemProductId" open="(" separator="," close=")">
							#{itemProductId}
						</foreach>
						)
					</when>
					<otherwise>
						<!-- 品牌&&大小类 -->
						<choose>
							<when test=						
							"
							(item.brandId == null or item.brandId == 0)
							and (item.productTypeValue != null or item.productTypeValue != '' )
							and (item.productSmallTypeValue != null or item.productSmallTypeValue != '') 
							">
							(1 != 1)
							</when>
							<otherwise>
								(<!-- 1=1 -->
									<if test="item.brandId != null and item.brandId != 0 ">
										<!-- and -->
										bp.brand_id=#{item.brandId}
									</if>
									<if test="item.productTypeValue != null and item.productTypeValue != '' ">
										and bp.product_type_value=#{item.productTypeValue}
									</if>
									<if test="item.productSmallTypeValue != null and item.productSmallTypeValue != '' ">
										and bp.product_small_type_value=#{item.productSmallTypeValue}
									</if>
								)
							</otherwise>
						</choose>
						<!-- 品牌||大小类 -->
						
						<!-- 20170425添加逻辑by huangsongbo ->start -->
						<!-- 比如授权码关联的东鹏公司是做墙面瓷砖的,则点击墙面搜索,瓷砖小类只显示东鹏的瓷砖+无品牌瓷砖,其他小类则显示全部 -->
						<if test="item.smallTypeValueListForShowAll != null and item.smallTypeValueListForShowAll.size > 0">
							or bp.product_small_type_value not in 
							<foreach collection="item.smallTypeValueListForShowAll" item="item2" close=")" open="(" separator=",">
								${item2}
							</foreach>
						</if> 
						<if test="isShowWu == true">
							<if test="brandIdWuPinPai != null">
								or bp.brand_id = #{brandIdWuPinPai}
							</if>
						</if>
						<!-- 20170425添加逻辑by huangsongbo ->end -->
						
					</otherwise>
				</choose>
			</foreach>
		</if>
		<!-- 授权码过滤逻辑(品牌,大类,小类,产品idList)->end -->
		
		<!-- 黑名单过滤 ->start -->
		<if test="prepProductSearchInfoListForBlackList != null and prepProductSearchInfoListForBlackList.size > 0">
			and
			<foreach collection="prepProductSearchInfoListForBlackList" item="prepProductSearchInfoListForBlackListItem" separator="and">
				!(bp.product_type_value = ${prepProductSearchInfoListForBlackListItem.bigTypeValue}
				and bp.product_small_type_value = ${prepProductSearchInfoListForBlackListItem.smallTypeValue})
			</foreach>
		</if>
		<!-- 黑名单过滤 ->end -->

		<!-- 异业联盟过滤 ->start -->
		<if test="brandIds != null and brandIds.size > 0">
			and bp.brand_id IN
			<foreach collection="brandIds" index="index"
					 item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<!-- 异业联盟过滤 ->end -->

		<!-- 平台过滤 ->start -->
		<if test="platformProductTable != null and platformId != null">
			AND ppr.platform_id = #{platformId,jdbcType=INTEGER}
			AND ppr.putaway_state = 1
			AND ppr.allot_state = 1
		</if>
		<!-- 平台过滤 ->end -->
		group by bp.id
		
		<!-- 排序定制(倒)->属性(未加入)(倒)->使用量(倒)->价格(升) ->start -->
		order by 
		<!-- 小类优先排序 ->start -->
		<!-- <if test="sortSmallTypeValueList != null and sortSmallTypeValueList.size > 0">
			case
			when bp.product_small_type_value in 
			<foreach collection="sortSmallTypeValueList" index="index"
							item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
 			then bp.product_small_type_value
			else 0 end desc,
		</if> -->
		<!-- 小类优先排序 ->end -->
		<!-- brand_id_sort, -->
		is_custom desc,
		bp.gmt_modified desc
		
		<!-- 分页 -->
		limit #{start} , #{limit}
		) T
		left join base_product bp on T.product_id = bp.id
		left join base_brand bb on bb.id = bp.brand_id
		left join res_pic rp on bp.pic_id = rp.id
		left join sys_dictionary sdbig on sdbig.type = "productType" and sdbig.value = bp.product_type_value
		left join sys_dictionary sdsmall on sdsmall.type = sdbig.valuekey and sdsmall.value = bp.product_small_type_value
		left join base_product baimobp on baimobp.id = #{baimoId,jdbcType=INTEGER}
		left join res_texture rt on rt.id = bp.material_pic_ids
		left join res_pic rtrp on rtrp.id = rt.pic_id
		left join user_product_collect upc on upc.user_id = #{userId,jdbcType=INTEGER} and upc.product_id = T.product_id
		left join res_model rm on rm.id = 
		case
		when bp.windows_u3dmodel_id is null or bp.windows_u3dmodel_id &lt;= 0 then baimobp.windows_u3dmodel_id
		else bp.windows_u3dmodel_id end
		LEFT JOIN (SELECT gpd.product_id FROM group_product_details gpd
		LEFT JOIN group_product gp ON gp.id = gpd.group_id WHERE 
		<!-- gp.design_templet_id = #{designTempletId,jdbcType=INTEGER} AND  -->
		gpd.is_main = 1) G
		ON G.product_id = bp.id
		<!-- left join user_product_collect后导致排序错乱,所以加如下代码再次排序 create by huangsongbo 2017.4.27 -->
		<!-- order by T.brand_id_sort -->
		
		<!-- 排序定制(倒)->属性(未加入)(倒)->使用量(倒)->价格(升) ->start -->
		order by 
		<!-- 小类优先排序 ->start -->
		<!-- <if test="sortSmallTypeValueList != null and sortSmallTypeValueList.size > 0">
			case
			when T.product_small_type_value in 
			<foreach collection="sortSmallTypeValueList" index="index"
							item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
 			then T.product_small_type_value 
			else 0 end desc,
		</if> -->
		<!-- 小类优先排序 ->end -->
		<!-- T.brand_id_sort, -->
		T.is_custom desc,
		T.gmt_modified desc
		<!-- 排序定制(倒)->属性(未加入)(倒)->使用量(倒)->价格(升) ->end -->
	</select>
	
	<select id="getProductsByCodes" resultMap="AllResultMap">
		select
		bp.id,bp.product_code,bp.product_name,bp.min_height,
		bp.full_pave_length,bp.product_length,bp.product_width,bp.product_height,
		bp.product_type_value,bp.product_small_type_value,
		b.type as product_type_mark,b.valuekey product_small_type_mark
	    from base_product bp
		LEFT JOIN sys_dictionary a on a.is_deleted = 0 and a.type ='productType' and a.value = bp.product_type_value
		LEFT JOIN sys_dictionary b on b.is_deleted = 0 and b.type = a.valuekey and b.value =bp.product_small_type_value
		where bp.is_deleted = 0
			<if test="productCodes !=  null and  productCodes.size > 0  ">
			and bp.product_code in
			<foreach collection="productCodes" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>

	<select id="findDataByCode" resultMap="AllResultMap">
		select
		bp.id,bp.product_code,bp.product_name,bp.min_height,
		bp.full_pave_length,bp.product_length,bp.product_width,bp.product_height,
		bp.product_type_value,bp.product_small_type_value,bp.style_id,bp.color_id,bp.product_style_id_info,
		b.type as product_type_mark,b.valuekey product_small_type_mark
		from base_product bp
		LEFT JOIN sys_dictionary a on a.is_deleted = 0 and a.type ='productType' and a.value = bp.product_type_value
		LEFT JOIN sys_dictionary b on b.is_deleted = 0 and b.type = a.valuekey and b.value =bp.product_small_type_value
		where bp.is_deleted = 0 and bp.product_code = #{productCode,jdbcType=VARCHAR}
	</select>
	

	<!-- **结果定义** -->
	<resultMap id="DesignProductResultMap" type="com.nork.product.model.result.DesignProductResult">
		<id column="id" property="productId" jdbcType="INTEGER" />
		<result  column="product_code" property="productCode" jdbcType="VARCHAR" />
		<result  column="product_name" property="productName" jdbcType="VARCHAR" />
		<result  column="product_length" property="productLength" jdbcType="VARCHAR" />
		<result  column="product_width" property="productWidth" jdbcType="VARCHAR" />
		<result  column="product_height" property="productHeight" jdbcType="VARCHAR" />
		<result  column="min_height" property="minHeight" jdbcType="VARCHAR" />
		<result  column="full_pave_length" property="fullPaveLength" jdbcType="VARCHAR" />
		<result  column="product_type_value" property="bigTypeValue" jdbcType="VARCHAR" />
		<result  column="bigTypeKey" property="bigTypeKey" jdbcType="VARCHAR" />
		<result  column="product_small_type_value" property="smallTypeValue" jdbcType="INTEGER" />
		<result  column="smallTypeKey" property="smallTypeKey" jdbcType="VARCHAR" />
		<result  column="bmSmallTypeValue" property="bmSmallTypeValue" jdbcType="INTEGER" />
		<result  column="product_index" property="productIndex" jdbcType="INTEGER" />
		<result  column="style_id" property="styleId" jdbcType="INTEGER" />
		<result  column="color_id" property="colorId" jdbcType="INTEGER" />
		<result  column="product_style_id_info" property="productStyleIdInfo" jdbcType="VARCHAR" />
		<result  column="is_standard" property="isStandard" jdbcType="INTEGER" />
		<result  column="center" property="center" jdbcType="VARCHAR" />
		<result  column="region_mark" property="regionMark" jdbcType="VARCHAR" />
		<result  column="measure_code" property="measureCode" jdbcType="VARCHAR" />
		<result  column="is_main_structure_product" property="isMainStructureProduct" jdbcType="INTEGER" />
		<result  column="is_group_replace_way" property="isGroupReplaceWay" jdbcType="INTEGER" />
		<result  column="wall_orientation" property="wallOrientation" jdbcType="VARCHAR" />
		<result  column="wall_type" property="wallType" jdbcType="VARCHAR" />
		<result  column="pos_name" property="posName" jdbcType="VARCHAR" />
		<result  column="split_textures_choose_info" property="splitTexturesChooseInfo" jdbcType="VARCHAR" />
		<result  column="model_product_id" property="modelProductId" jdbcType="INTEGER" />
		<result  column="is_main_product" property="isMainProduct" jdbcType="INTEGER" />
		<result  column="plan_group_id" property="planGroupId" jdbcType="VARCHAR" />
		<result  column="product_group_id" property="productGroupId" jdbcType="INTEGER" />
		<result  column="group_type" property="groupType" jdbcType="INTEGER" />
		<result  column="bind_parent_productId" property="bindParentProductId" jdbcType="VARCHAR" />
		<result  column="pro_style_id" property="proStyleId" jdbcType="INTEGER" />
		<result  column="product_model_number" property="productModelNumber" jdbcType="INTEGER" />
	</resultMap>

	<select id="getTempletProductList" resultMap="DesignProductResultMap">
		SELECT
		bp.id,bp.product_code,bp.min_height,bp.full_pave_length,bp.product_length,bp.product_width,bp.product_height,
		bp.product_type_value,bp.product_small_type_value,b.type AS bigTypeKey,b.valuekey as smallTypeKey,
		dtp.`product_index`,bp.color_id,bp.product_style_id_info,dtp.is_standard,dtp.center,dtp.region_mark,dtp.measure_code,
		dtp.is_main_structure_product,dtp.is_group_replace_way,dtp.bind_parent_productId,dtp.style_id,
		dtp.wall_orientation,dtp.wall_type,dtp.pos_name,dtp.is_main_product,dtp.plan_group_id,dtp.product_group_id,dtp.group_type
		FROM base_product bp
		LEFT JOIN design_templet_product dtp ON dtp.product_id = bp.id AND dtp.`is_deleted` = 0
		LEFT JOIN sys_dictionary a ON a.is_deleted = 0 AND a.type ='productType' AND a.value = bp.product_type_value
		LEFT JOIN sys_dictionary b ON b.is_deleted = 0 AND b.type = a.valuekey AND b.value =bp.product_small_type_value
		WHERE dtp.`design_templet_id` = #{designTempletId,jdbcType=INTEGER} AND bp.is_deleted = 0
		<if test="posNameList !=  null and  posNameList.size > 0">
			and dtp.pos_name in
			<foreach collection="posNameList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>

	<select id="getPlanProductList" resultMap="DesignProductResultMap">
		SELECT
			bp1.id,bp1.product_code,bp1.product_length,bp1.product_width,bp1.`product_height`,bp1.`product_small_type_value`,bp1.product_type_value,
			bp2.`product_small_type_value` as bmSmallTypeValue,bp1.style_id as pro_style_id,dpp.product_index,bp1.color_id,bp1.product_style_id_info,dpp.is_standard,
			dpp.style_id,dpp.center,dpp.region_mark,dpp.measure_code,dpp.is_main_structure_product,dpp.is_group_replace_way,dpp.wall_orientation,
			dpp.wall_type,b.type AS bigTypeKey,b.valuekey as smallTypeKey,dpp.pos_name,dpp.is_main_product,dpp.plan_group_id,dpp.product_group_id,
			dpp.group_type,dpp.`split_textures_choose_info`,dpp.model_product_id
		FROM design_plan_product dpp
		LEFT JOIN base_product bp1 ON bp1.id = dpp.product_id AND bp1.`is_deleted` = 0
		LEFT JOIN base_product bp2 ON bp2.id = dpp.`init_product_id` AND bp2.`is_deleted` = 0
		LEFT JOIN sys_dictionary a ON a.is_deleted = 0 AND a.type ='productType' AND a.value = bp2.product_type_value
		LEFT JOIN sys_dictionary b ON b.is_deleted = 0 AND b.type = a.valuekey AND b.value =bp2.product_small_type_value
		WHERE dpp.plan_id = #{planId,jdbcType=INTEGER} AND dpp.`is_deleted` = 0
		order by product_type_value,region_mark,product_index ASC
	</select>
	
	
	<select id="getProductListByDesignPlanProductids" resultMap="AllResultMap">
			SELECT
		bp.id,
		bp.sys_code,
		bp.split_textures_info,
		bp.creator,
		bp.gmt_create,
		bp.modifier,
		bp.gmt_modified,
		bp.is_deleted,
		bp.product_code,
		bp.product_name,
		bp.decoration_id,
		bp.spaceComon_id,
		bp.designer_id,
		bp.modeling_id,
		bp.min_height,
		bp.full_pave_length,
		bp.rendering_id,
		bp.brand_id,
		bp.parent_id,
		bp.material_file_id,
		bp.pro_style_id,
		bp.product_spec,
		bp.color_id,
		bp.product_length,
		bp.product_width,
		bp.product_height,
		bp.sale_price,
		bp.pic_id,
		bp.model_id,
		bp.product_desc,
		bp.pic_ids,
		bp.material_pic_ids,
		bp.material3d_pic_ids,
		bp.house_type_values,
		bp.product_type_value,
		bp.product_type_mark,
		bp.product_small_type_mark,
		bp.product_short_code,
		bp.original_product_code,
		bp.bm_ids,
		bp.code_number,
		bp.designTemplet_id,
		bp.u3dmodel_Id,
		bp.ipad_u3dmodel_id,
		bp.ios_u3dmodel_id,
		bp.android_u3dmodel_id,
		bp.macbook_u3dmodel_id,
		bp.windows_u3dmodel_id,
		bp.merge_product_ids,
		bp.putaway_modified,
		bp.date_att2,
		bp.product_small_type_value,
		bp.putaway_state,
		bp.num_att3,
		bp.num_att4,
		bp.remark,
		bp.product_model_number,
		bp.sale_price_value,
		bp.product_material_desc,
		bp.colors_long_code,
		bp.product_style_id_info,
		bp.style_id,
		dpp.id as 'design_plan_product_id',
		dpp.product_index,
		sdbig.valuekey as 'product_type_code',
		sdsmall.valuekey as 'product_small_type_code',
		dpp.init_product_id as bm_ids
	FROM
		design_plan_product AS dpp
	LEFT JOIN base_product AS bp ON (dpp.init_product_id = bp.id)
	left join sys_dictionary sdbig on sdbig.type = "productType" and sdbig.value = bp.product_type_value
	left join sys_dictionary sdsmall on sdsmall.type = sdbig.valuekey and sdsmall.value = bp.product_small_type_value
	where 1 = 1
	and bp.is_deleted = 0
	and dpp.id in 
	<foreach collection="designPlanProductIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
	</foreach>
	</select>
	
	
	<select id="matchingProductList" resultMap="AllResultMap"  parameterType="com.nork.product.model.BaseProduct" >
		SELECT
			bp.id,
			bp.sys_code,
			bp.split_textures_info,
			bp.creator,
			bp.gmt_create,
			bp.modifier,
			bp.gmt_modified,
			bp.is_deleted,
			bp.product_code,
			bp.product_name,
			bp.decoration_id,
			bp.spaceComon_id,
			bp.designer_id,
			bp.modeling_id,
			bp.min_height,
			bp.full_pave_length,
			bp.rendering_id,
			bp.brand_id,
			bp.parent_id,
			bp.material_file_id,
			bp.pro_style_id,
			bp.product_spec,
			bp.color_id,
			bp.product_length,
			bp.product_width,
			bp.product_height,
			bp.sale_price,
			bp.pic_id,
			bp.model_id,
			bp.product_desc,
			bp.pic_ids,
			bp.material_pic_ids,
			bp.material3d_pic_ids,
			bp.house_type_values,
			bp.product_type_value,
			bp.product_type_mark,
			bp.product_small_type_mark,
			bp.product_short_code,
			bp.original_product_code,
			bp.bm_ids,
			bp.code_number,
			bp.designTemplet_id,
			bp.u3dmodel_Id,
			bp.ipad_u3dmodel_id,
			bp.ios_u3dmodel_id,
			bp.android_u3dmodel_id,
			bp.macbook_u3dmodel_id,
			bp.windows_u3dmodel_id,
			bp.merge_product_ids,
			bp.putaway_modified,
			bp.date_att2,
			bp.product_small_type_value,
			bp.putaway_state,
			bp.num_att3,
			bp.num_att4,
			bp.remark,
			bp.product_model_number,
			bp.sale_price_value,
			bp.product_material_desc,
			bp.colors_long_code,
			bp.product_style_id_info,
			bp.style_id,
			sdbig.valuekey as 'product_type_code',
			sdsmall.valuekey as 'product_small_type_code',
			sdsmall.att1 
		FROM
			base_product AS bp
		LEFT JOIN product_category_rel AS pcr ON (bp.id = pcr.product_id)
		LEFT JOIN pro_category AS pc ON (pcr.category_id = pc.id)
		left join sys_dictionary sdbig on sdbig.type = "productType" and sdbig.value = bp.product_type_value
		left join sys_dictionary sdsmall on sdsmall.type = sdbig.valuekey and sdsmall.value = bp.product_small_type_value
		WHERE
			1 = 1
		AND LOCATE('baimo', bp.product_code) = 0
		AND bp.is_deleted = 0
		AND pc.is_deleted = 0
		<if test="isInternalUser !=null and isInternalUser =='yes' ">
			AND ( bp.putaway_state = 1 or bp.putaway_state = 2 or bp.putaway_state = 3)
		</if>
		<if test="isInternalUser ==null or isInternalUser !='yes' ">
			AND bp.putaway_state = 3
		</if>
		<if test="productTypeCode !=null and productTypeCode !='' ">
			AND pc.third_stage_code = #{productTypeCode,jdbcType=VARCHAR}
		</if>
		<if test="styleId !=null and styleId !=0 ">
			AND bp.style_id = #{styleId,jdbcType=INTEGER}
		</if>
		<if test="productSmallTypeValue!= null and productSmallTypeValue!= 0 ">
			AND bp.product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}
		</if>
		<if test="productTypeValue!= null and productTypeValue!= '' ">  
			AND bp.product_type_value = #{productTypeValue,jdbcType=VARCHAR}
		 </if>
		<if test="isBeijing == true">
			<!-- 过滤背景墙产品长度 -->
			<if test="startLength != null and endLength != null">
				AND  bp.product_length between #{startLength,jdbcType=INTEGER} and #{endLength,jdbcType=INTEGER}
			</if>
			<!-- 过滤背景墙产品高度 -->
			<if test="stretchHeight != null and stretchHeight != ''">
				<choose>
					<when test="stretchHeight == '30' or stretchHeight == '50'">
						AND  (bp.product_height = #{stretchHeight,jdbcType=INTEGER})
					</when>
					<otherwise>
						AND  (bp.product_height = #{stretchHeight,jdbcType=INTEGER} or (bp.product_height &lt; 230 and bp.product_height &gt; 50))
					</otherwise>
				</choose>
			</if>
		</if>
	</select>
	
	<!-- getPlanProductRecommendedList -->
	<select id="getPlanProductRecommendedList" resultMap="DesignProductResultMap">
		SELECT
			bp1.id,bp1.product_code,bp1.product_length,bp1.product_width,bp1.`product_height`,bp1.`product_small_type_value`,bp1.product_type_value,
			bp2.`product_small_type_value` as bmSmallTypeValue,bp1.style_id as pro_style_id,dpp.product_index,bp1.color_id,bp1.product_style_id_info,dpp.is_standard,
			dpp.style_id,dpp.center,dpp.region_mark,dpp.measure_code,dpp.is_main_structure_product,dpp.is_group_replace_way,dpp.wall_orientation,
			dpp.wall_type,b.type AS bigTypeKey,b.valuekey as smallTypeKey,dpp.pos_name,dpp.is_main_product,dpp.plan_group_id,dpp.product_group_id,
			dpp.group_type,dpp.`split_textures_choose_info`,dpp.model_product_id,bp1.product_model_number
		FROM design_plan_recommended_product dpp
		LEFT JOIN base_product bp1 ON bp1.id = dpp.product_id AND bp1.`is_deleted` = 0
		LEFT JOIN base_product bp2 ON bp2.id = dpp.`init_product_id` AND bp2.`is_deleted` = 0
		LEFT JOIN sys_dictionary a ON a.is_deleted = 0 AND a.type ='productType' AND a.value = bp2.product_type_value
		LEFT JOIN sys_dictionary b ON b.is_deleted = 0 AND b.type = a.valuekey AND b.value =bp2.product_small_type_value
		WHERE dpp.plan_recommended_id = #{planRecommendedId,jdbcType=INTEGER} AND dpp.`is_deleted` = 0
		and !(product_group_id != 0 and group_type = 0)
		order by product_type_value,region_mark,product_index ASC
	</select>

	<resultMap id="SearchProductGroupResult" type="com.nork.product.model.result.SearchProductGroupDetail">
		<result  column="product_length" property="productLength" jdbcType="VARCHAR" />
		<result  column="product_width" property="productWidth" jdbcType="VARCHAR" />
		<result  column="product_height" property="productHeight" jdbcType="VARCHAR" />
		<result  column="product_id" property="productId" jdbcType="INTEGER" />
		<result  column="product_code" property="productCode" jdbcType="VARCHAR" />
		<result  column="split_textures_info" property="splitTexturesInfo" jdbcType="VARCHAR" />
		<result  column="materialPicIds" property="splitTexturesInfo" jdbcType="VARCHAR" />
		<result  column="windows_u3dmodel_id" property="u3dModelId" jdbcType="INTEGER" />
	</resultMap>

	<!-- 通过全铺长度和款式查询 -->
	<select id="getBgWallByFullPaveLengthAndStyle" resultMap="SearchProductGroupResult"  parameterType="com.nork.product.model.BaseProduct" >
		SELECT
		bp.product_length,
		bp.product_width,
		bp.product_height,
		bp.id product_id,
		bp.product_code,
		bp.split_textures_info,
		bp.product_small_type_value,
		bp.windows_u3dmodel_id,
		CASE WHEN bp.id is null THEN 1
		<!--通过款式和型号排序-->
		<if test="styleId != null and styleId > 0">
			WHEN bp.style_id = #{styleId,jdbcType=INTEGER} THEN 6
		</if>
		<if test="productModelNumber != null and productModelNumber !=''">
			WHEN  bp.product_model_number = #{productModelNumber,jdbcType=VARCHAR} THEN 5
		</if>
		ELSE 2  END AS order_type
		from base_product bp
		where 1=1
		AND LOCATE('baimo', bp.product_code) = 0
		AND bp.is_deleted = 0
		<if test="isInternalUser != null and isInternalUser == 'yes' ">
			AND ( bp.putaway_state = 1 or bp.putaway_state = 2 or bp.putaway_state = 3)
		</if>
		<if test="isInternalUser == null or isInternalUser != 'yes' ">
			AND bp.putaway_state = 3
		</if>
		<if test="productTypeValue != null">
			AND bp.product_type_value = #{productTypeValue,jdbcType=VARCHAR}
		</if>
		<if test="productSmallTypeValue != null">
			AND bp.product_small_type_value = #{productSmallTypeValue,jdbcType=VARCHAR}
		</if>
		<if test="smallTypeValueListForShowAll != null and smallTypeValueListForShowAll.size > 0">
			and bp.product_small_type_value in 
			<foreach collection="smallTypeValueListForShowAll" close=")" open="(" item="smallTypeValueListForShowAllItem" separator=",">
				#{smallTypeValueListForShowAllItem}
			</foreach>
		</if>
		<if test="isBeijing == true">
			<!-- 过滤背景墙产品长度 -->
			<if test="startLength != null and endLength != null">
				AND  bp.product_length between #{startLength,jdbcType=INTEGER} and #{endLength,jdbcType=INTEGER}
			</if>
			<!-- 过滤背景墙产品高度 -->
			<if test="stretchHeight != null and stretchHeight != ''">
				<choose>
					<when test="stretchHeight == '30' or stretchHeight == '50'">
						AND  (bp.product_height = #{stretchHeight,jdbcType=INTEGER})
					</when>
					<otherwise>
						AND  (bp.product_height = #{stretchHeight,jdbcType=INTEGER} or (bp.product_height &lt; 230 and bp.product_height &gt; 50))
					</otherwise>
				</choose>
			</if>
		</if>
		order by order_type DESC
	</select>
	
	<!-- selectProductEasy -->
	<select id="selectProductEasy" resultMap="AllResultMap" parameterType="com.nork.product.model.search.BaseProductSearch">
		select bp.id,
		bigsd.valuekey as big_type_valuekey,
		smallsd.valuekey as small_type_valuekey,
		bp.product_code,
		bp.product_length,
		bp.product_width,
		bp.product_height,
		bp.full_pave_length,
		bp.measure_code,
		bp.split_textures_info,
		bp.style_id
		from base_product bp

		left join sys_dictionary bigsd on bigsd.type = "productType" and bigsd.value = bp.product_type_value
		left join sys_dictionary smallsd on smallsd.type = bigsd.valuekey and smallsd.value = bp.product_small_type_value
		where bp.product_type_value = #{productTypeValue}
		<if test="productSmallTypeValue != null">
			and bp.product_small_type_value = #{productSmallTypeValue}
		</if>
		<if test="productLength != null">
			and bp.product_length = #{productLength}
		</if>
		<if test="productWidth != null">
			and bp.product_width = #{productWidth}
		</if>
		<if test="productHeight != null">
			<choose>
				<when test="isBeijing == true">
					<choose>
						<when test="productHeight == '30' or productHeight == '50'">
							AND  bp.product_height = #{productHeight}
						</when>
						<otherwise>
							AND  (bp.product_height = #{productHeight} or (CONVERT(bp.product_height, SIGNED) &lt; 230 and CONVERT(bp.product_height, SIGNED) &gt; 50))
						</otherwise>
					</choose>
				</when>
				<otherwise>
					and bp.product_height = #{productHeight}
				</otherwise>
			</choose>
		</if>
		<if test="productLengthStartInteger != null">
			and bp.product_length &gt;= #{productLengthStartInteger}
		</if>
		<if test="productLengthEndInteger != null">
			and bp.product_length &lt;= #{productLengthEndInteger}
		</if>
		<if test="measureCode != null">
			and bp.measure_code = #{measureCode}
		</if>
		<if test="styleId != null">
			and bp.style_id = #{styleId}
		</if>
		<if test="bmIds != null">
			and bp.bm_ids = #{bmIds}
		</if>
		<if test="wallType != null">
			and bp.wall_type = #{wallType}
		</if>
		<!-- setSmallTypeValueListForShowAll -->
		<if test="smallTypeValueListForShowAll != null and smallTypeValueListForShowAll.size != 0">
			and bp.product_small_type_value in
			<foreach collection="smallTypeValueListForShowAll" open="(" close=")" separator="," item="smallTypeValueListItem">
				#{smallTypeValueListItem}
			</foreach>
		</if>
		<!-- setSmallTypeValueListForShowAll -->
		<if test="excludeSmallTypeValueList != null and excludeSmallTypeValueList.size != 0">
			and bp.product_small_type_value not in
			<foreach collection="excludeSmallTypeValueList" open="(" close=")" separator="," item="excludeSmallTypeValueListItem">
				#{excludeSmallTypeValueListItem}
			</foreach>
		</if>
		<!-- 布局标识 -->
		<if test="productSmallpoxIdentify != null">
			and bp.product_smallpox_identify_str = #{productSmallpoxIdentify, jdbcType = VARCHAR}
		</if>
		<!-- 布局标识List -->
		<if test="identifyList != null and identifyList.size != 0">
			and bp.product_smallpox_identify_str in
			<foreach collection="identifyList" item="identifyListItem" open="(" close=")" separator=",">
				#{identifyListItem, jdbcType = VARCHAR}
			</foreach>
		</if>
		<!-- 产品系列 -->
		<if test="seriesId != null">
			and bp.series_id = #{seriesId}
		</if>
		and bp.putaway_state in (1,2,3,5)
		and bp.is_deleted = 0
		and bp.product_code not like "baimo_%"
		and bp.windows_u3dmodel_id is not null and bp.windows_u3dmodel_id != 0
		<!-- 产品过滤属性 -->
		<if test="productFilterPropList != null and productFilterPropList.size > 0">
			<foreach collection="productFilterPropList" item="productFilterPropListItem">
				and (
				select count(pa.id) from product_attribute pa 
				left join product_props ppp on ppp.id = pa.attribute_id
				left join product_props ppc on ppc.id = pa.attribute_value_id
				where pa.product_id = bp.id
				and ppp.filter_order = "filter"
				and ppp.code = #{productFilterPropListItem.key}
				and ppc.prop_value = #{productFilterPropListItem.value}) >= 1
			</foreach>
		</if>
		
		order by 
		<if test="orderStyleId != null">
			case
			when bp.style_id = #{orderStyleId} then 1
			else 0 end desc,
		</if>
		<if test="orderSmallTypeValue != null">
			case
			when bp.product_small_type_value = #{orderSmallTypeValue} then 1
			else 0 end desc,
		</if>
		<if test="orderProductModelNumber != null and orderProductModelNumber != ''">
			case
			when bp.product_model_number = #{orderProductModelNumber} then 1
			else 0
			end desc,
		</if>
		<if test="orderBrandId != null">
			case
			when bp.brand_id = #{orderBrandId} then 2
			<!-- 定死无品牌id是178 -->
			when bp.brand_id = 178 then 1
			else 0
			end desc,
		</if>
		<if test="orderProductSmallpoxIdentify != null">
			case
			when bp.product_smallpox_identify_str = #{orderProductSmallpoxIdentify, jdbcType = VARCHAR} then 1
			else 0
			end desc,
		</if>
		id desc
		<if test="start != null and limit != null">
			limit #{start},#{limit}
		</if>
	</select>
	
	<select id="getByDesignPlanId" resultMap="AllResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="All_Column_List" />
		from base_product
		where design_plan_id = #{designPlanId,jdbcType=INTEGER}
		and is_reduction = 0
	</select>
	
	<!-- getPropFilterInfo -->
	<select id="getPropFilterInfo" resultType="java.lang.String">
		select 
		group_concat(
		concat(ppp.code, "," ,
		case 
		when ppp.filter_order = "filter" then 1
		else 0 end, "," ,
		case
		when ppp.sequence_number is null then 99
		else ppp.sequence_number end, "," ,
		ppc.prop_value) SEPARATOR ";"
		)as prop_info
		from product_attribute pa
		left join product_props ppp on ppp.id = pa.attribute_id
		left join product_props ppc on ppc.id = pa.attribute_value_id
		left join base_product bp on bp.id = pa.product_id
		where bp.id = #{productId}
		and ppp.id is not null
		and ppc.id is not null
		and ppp.filter_order = "filter"
		group by pa.product_id
	</select>


	<!--匹配系列同分类产品数据-->
	<select id="getSeriesProductData" resultMap="CategoryProductResultMap"
			parameterType="com.nork.product.model.search.BaseProductSearch">
		SELECT DISTINCT bp.id as product_id,bp.`product_code`,bp.`product_name`,
			bp.`product_length`,bp.`product_width`,bp.`product_height`,
			bp.`split_textures_info`,rm.model_path AS u3d_model_path,bp.series_id,
			bp.`product_type_value`,
			sdbig.name as product_type_name,
			sdbig.valuekey as product_type_code,
			bp.product_small_type_value,
			sdsmall.name as product_small_type_name,
			sdsmall.valuekey as product_small_type_code,
			<!-- 单材质信息->start -->
			rt.id as res_texture_id,
			rtrp.pic_path as res_texture_path,
			rt.texture_attr_value as texture_attr_value,
			rt.file_width as texture_width,
			rt.file_height as texture_height,
			rt.lay_modes as lay_modes,
			<!-- 单材质信息->end -->
			case when bp.id is null then 1
			when bp.product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}
			then 2 else 3 end as orderType
		FROM (
			select DISTINCT(pcr.product_id) from pro_category pc
			right join product_category_rel pcr on pcr.category_id = pc.id
			where pc.third_stage_code = #{productTypeCode,jdbcType=VARCHAR} and pc.is_deleted = 0
			) t1
		LEFT JOIN base_product bp  ON t1.product_id = bp.id AND bp.is_deleted = 0
		LEFT JOIN res_model rm ON rm.`id` = bp.`windows_u3dmodel_id` AND rm.`is_deleted`=0
		LEFT JOIN res_texture rt on rt.id = bp.material_pic_ids
		LEFT JOIN res_pic rtrp on rtrp.id = rt.pic_id
		left join sys_dictionary sdbig on sdbig.type = "productType" and sdbig.value = bp.product_type_value
		left join sys_dictionary sdsmall on sdsmall.type = sdbig.valuekey and sdsmall.value = bp.product_small_type_value
		LEFT JOIN product_attribute pa ON  pa.product_id = bp.id AND  pa.is_deleted = 0
		<!-- 产品属性过滤 -->
		<if test="attributeConditionList !=  null and  attributeConditionList.size > 0 ">
			RIGHT JOIN (
			SELECT id AS product_id FROM (
			<foreach collection="attributeConditionList" index="index" item="item" open="" separator="UNION ALL" close="">
				select pa.product_id AS id from product_attribute pa
				LEFT JOIN product_props pp ON pp.id = pa.attribute_value_id
				WHERE 1=1
				and ${item}
			</foreach>
			) products group by products.id having count(products.id) &gt;= #{attributeConditionSize,jdbcType=INTEGER}
			) t4 ON t4.product_id = bp.id
		</if>
		WHERE bp.id IS NOT NULL
		AND   bp.is_deleted = 0
		AND  LOCATE('baimo',bp.product_code)=0
		<!--diy分类搜索过滤同类型新增产品只显示主产品-->
		AND ( bp.parent_id IS NULL OR bp.parent_id = bp.id)
		<if test="putawayStateList != null  and  putawayStateList.size > 0  ">
			AND
			<foreach collection="putawayStateList" index="index" item="item" open="(" separator="or" close=")">
				bp.putaway_state = #{item}
			</foreach>
		</if>
		<if test="productTypeValue != null and productTypeValue != ''" >
			AND bp.product_type_value = #{productTypeValue,jdbcType=VARCHAR}
		</if>
		<if test="seriesId != null" >
			AND bp.series_id = #{seriesId,jdbcType=INTEGER}
		</if>
		<if test="isStretch == true">
			<!-- 过滤产品长度 -->
			<if test="startLength != null and endLength != null">
				AND  bp.product_length between #{startLength,jdbcType=INTEGER} and #{endLength,jdbcType=INTEGER}
			</if>
			<!-- 过滤产品高度 -->
			<if test="stretchHeight != null and stretchHeight != ''">
				AND  bp.product_height = #{stretchHeight,jdbcType=INTEGER}
			</if>
		</if>
		<choose>
			<when test="productSmallValueList != null and productSmallValueList.size != 0">
				and bp.product_small_type_value in
				<foreach collection="productSmallValueList" open="(" close=")" separator="," item="smallTypeValueListItem">
					#{smallTypeValueListItem}
				</foreach>
			</when>
			<otherwise>
				<if test="productSmallTypeValue != null" >
					AND bp.product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER}
				</if>
			</otherwise>
		</choose>
		order by orderType asc
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>
	
	<!-- getProductPropsSimpleByProductIdAndAttrCode -->
	<select id="getProductPropsSimpleByProductIdAndAttrCode" resultMap="ProductPropsSimpleMap">
		select 
		ppp.code as "key",
		case 
		when ppp.filter_order = "filter" then 1
		else 0 end as is_sort,
		case
		when ppp.sequence_number is null then 99
		else ppp.sequence_number end as sort_value,
		ppc.prop_value as value
		from product_attribute pa
		left join product_props ppp on ppp.id = pa.attribute_id
		left join product_props ppc on ppc.id = pa.attribute_value_id
		where pa.product_id = #{productId, jdbcType=INTEGER}
		and ppp.code = #{productAttrCode, jdbcType = VARCHAR}
		and ppp.id is not null
		and ppc.id is not null
	</select>
	
	<!-- **结果定义** -->
	<resultMap id="ProductSimpleResultMap" type="com.nork.product.model.ProductSimpleModel">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result  column="productCode" property="productCode" jdbcType="VARCHAR" />
		<result  column="windowsU3dModelPath" property="windowsU3dModelPath" jdbcType="VARCHAR" />
		<result  column="product_type_value" property="bigTypeValue" jdbcType="VARCHAR" />
		<result  column="product_small_type_value" property="smallTypeValue" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="getProductListByStructureId" resultMap="ProductSimpleResultMap"
		parameterType="java.lang.Integer">
		select  bp.id,bp.product_code as 'productCode',rm.model_path as 'windowsU3dModelPath',
		bp.product_type_value,bp.product_small_type_value
		  from  structure_product_details as spd
		LEFT JOIN base_product  as bp on (spd.product_id = bp.id)
		LEFT JOIN res_model  as rm on(bp.windows_u3dmodel_id = rm.id)
		where 1 = 1
		AND spd.is_deleted = 0
		AND bp.is_deleted = 0
		AND spd.structure_id = #{structureProductId,jdbcType=INTEGER}
	</select>
	
	
	<select id="getProductIdentification" resultType="java.lang.String"
		parameterType="java.lang.Integer">
		select pp.code from base_product bp 
		left join product_attribute pa on pa.product_id = bp.id 
		left join product_props pp on pp.id = pa.attribute_value_id
		left join product_props ppp on ppp.id = pp.pid
		where bp.id = #{productId}
	</select>
	
	<!-- 通过idList查询产品详情 -->
	<select id="getDetailByIds" resultMap="CategoryProductResultMap">
		SELECT DISTINCT
			bp.id AS product_id,
			bp.product_code AS product_code,
			bp.product_name AS product_name,
			bp.product_spec AS product_spec,
			bp.sale_price AS sale_price,
			bp.product_desc AS product_desc,
			bp.brand_id AS brand_id,
			bp.product_type_value AS product_type_value,
			bp.product_small_type_value AS product_small_type_value,
			bp.product_length AS product_length,
			bp.product_width AS product_width,
			bp.product_height AS product_height,
			bp.product_smallpox_identify_str AS product_smallpox_identify_str,
			bp.split_textures_info AS split_textures_info,
			bp.series_id,
			CASE
			WHEN bp.bm_ids IS NULL
			THEN 0
			ELSE 1
			END AS is_customized,
			bp.gmt_modified,
			bp.min_height AS min_height,
			sdbig.name AS product_type_name,
			sdbig.valuekey AS product_type_code,
			sdsmall.name AS product_small_type_name,
			sdsmall.valuekey AS product_small_type_code,
			sdsmall.att1 AS small_type_att1,
			bb2.brand_name AS brand_name,
			rm.model_path AS u3d_model_path,
			rm.min_height AS model_min_height,
			rp.pic_path AS pic_path,
			rt.id AS res_texture_id,
			rtrp.pic_path AS res_texture_path,
			rt.texture_attr_value AS texture_attr_value,
			rt.file_width AS texture_width,
			rt.file_height AS texture_height,
			rt.lay_modes AS lay_modes,
			<if test="userId != null and userId > 0">
				CASE
				WHEN upc.id IS NULL
				THEN 0
				ELSE 1
				END AS collect_state,
			</if>
			
			CASE
			WHEN G.product_id IS NULL
			THEN 0
			ELSE 1
			END AS is_main_product
		FROM base_product bp
		LEFT JOIN base_brand bb2 ON bb2.id = bp.brand_id
		LEFT JOIN res_pic rp ON bp.pic_id = rp.id
		LEFT JOIN sys_dictionary sdbig ON sdbig.type = "productType" AND sdbig.value = bp.product_type_value
		LEFT JOIN sys_dictionary sdsmall ON sdsmall.type = sdbig.valuekey AND sdsmall.value = bp.product_small_type_value
		LEFT JOIN res_texture rt ON rt.id = bp.material_pic_ids
		LEFT JOIN res_pic rtrp ON rtrp.id = rt.pic_id
		<if test="userId != null and userId > 0">
			LEFT JOIN user_product_collect upc ON upc.user_id = #{userId} AND upc.product_id = bp.id
		</if>
		LEFT JOIN res_model rm ON rm.id = bp.windows_u3dmodel_id
		LEFT JOIN
			(	
				SELECT gpd.product_id
				FROM group_product_details gpd
				LEFT JOIN group_product gp
				ON gp.id = gpd.group_id
				WHERE gpd.is_main = 1
			) G ON G.product_id = bp.id
		WHERE 
		bp.id IN
		<foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>


	<resultMap id="searchCeilingResult" type="com.nork.product.model.vo.ProductCeilingVO">

		<result  column="id" property="productId" jdbcType="INTEGER" />
		<result  column="ceiling_cross_section_data" property="ceilingCrossSectionData" jdbcType="VARCHAR" />
		<result  column="distance_ceiling_top_height" property="distanceCeilingTopHeight" jdbcType="VARCHAR" />
		<result  column="min_height" property="minHeight" jdbcType="VARCHAR" />
		<result  column="style_code" property="styleCode" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getCeilingInfoByProductIds" resultMap="searchCeilingResult">

		SELECT bp.id,bp.ceiling_cross_section_data,bp.distance_ceiling_top_height,bp.min_height,ps.style_code FROM base_product bp
		LEFT JOIN product_style ps ON ps.id= bp.`style_id`
		WHERE bp.id in
		<foreach collection="productIdsList" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>

	</select>
</mapper>
