<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sandu.service.product.dao.ProductDao">
    <!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>-->
    <!-- **插入定义** -->
    <insert id="saveProduct" parameterType="com.sandu.api.product.model.Product" useGeneratedKeys="true"
            keyProperty="id">
        insert into base_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="productCode != null">
                product_code,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="brandId != null">
                brand_id,
            </if>
            <if test="proStyleId != null">
                pro_style_id,
            </if>
            <if test="productSpec != null">
                product_spec,
            </if>
            <if test="colorId != null">
                color_id,
            </if>
            <if test="productLength != null">
                product_length,
            </if>
            <if test="productWidth != null">
                product_width,
            </if>
            <if test="productHeight != null">
                product_height,
            </if>
            <if test="salePrice != null">
                sale_price,
            </if>
            <if test="advicePrice != null">
                advice_price,
            </if>
            <if test="picId != null">
                pic_id,
            </if>
            <if test="modelId != null">
                model_id,
            </if>
            <if test="productDesc != null">
                product_desc,
            </if>
            <if test="sysCode != null">
                sys_code,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="modifier != null">
                modifier,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="picIds != null">
                pic_ids,
            </if>
            <if test="materialPicIds != null">
                material_pic_ids,
            </if>
            <if test="houseTypeValues != null">
                house_type_values,
            </if>
            <if test="productTypeValue != null">
                product_type_value,
            </if>
            <if test="u3dmodelId != null">
                u3dmodel_Id,
            </if>
            <if test="mergeProductIds != null">
                merge_product_ids,
            </if>
            <if test="putawayModified != null">
                putaway_modified,
            </if>
            <if test="dateAtt2 != null">
                date_att2,
            </if>
            <if test="productSmallTypeValue != null">
                product_small_type_value,
            </if>
            <if test="putawayState != null">
                putaway_state,
            </if>
            <if test="numAtt3 != null">
                num_att3,
            </if>
            <if test="numAtt4 != null">
                num_att4,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="ipadU3dmodelId != null">
                ipad_u3dmodel_id,
            </if>
            <if test="iosU3dmodelId != null">
                ios_u3dmodel_id,
            </if>
            <if test="androidU3dmodelId != null">
                android_u3dmodel_id,
            </if>
            <if test="macbookU3dmodelId != null">
                macbook_u3dmodel_id,
            </if>
            <if test="windowsU3dmodelId != null">
                windows_u3dmodel_id,
            </if>
            <if test="webU3dmodelId != null">
                web_u3dmodel_id,
            </if>
            <if test="decorationId != null">
                decoration_id,
            </if>
            <if test="designerId != null">
                designer_id,
            </if>
            <if test="modelingId != null">
                modeling_id,
            </if>
            <if test="renderingId != null">
                rendering_id,
            </if>
            <if test="productTypeMark != null">
                product_type_mark,
            </if>
            <if test="productSmallTypeMark != null">
                product_small_type_mark,
            </if>
            <if test="originalProductCode != null">
                original_product_code,
            </if>
            <if test="spacecomonId != null">
                spaceComon_id,
            </if>
            <if test="productShortCode != null">
                product_short_code,
            </if>
            <if test="bmIds != null">
                bm_ids,
            </if>
            <if test="codeNumber != null">
                code_number,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="designtempletId != null">
                designTemplet_id,
            </if>
            <if test="materialFileId != null">
                material_file_id,
            </if>
            <if test="material3dPicIds != null">
                material3d_pic_ids,
            </if>
            <if test="syncStatus != null">
                sync_status,
            </if>
            <if test="codeIsEmploy != null">
                code_is_employ,
            </if>
            <if test="codeBatch != null">
                code_batch,
            </if>
            <if test="productModelNumber != null">
                product_model_number,
            </if>
            <if test="fullPaveLength != null">
                full_pave_length,
            </if>
            <if test="testModified != null">
                test_modified,
            </if>
            <if test="salePriceValue != null">
                sale_price_value,
            </if>
            <if test="minHeight != null">
                min_height,
            </if>
            <if test="productMaterialDesc != null">
                product_material_desc,
            </if>
            <if test="colorsLongCode != null">
                colors_long_code,
            </if>
            <if test="configId != null">
                config_id,
            </if>
            <if test="fbxFileId != null">
                fbx_file_id,
            </if>
            <if test="fbxTexture != null">
                fbx_texture,
            </if>
            <if test="fbxState != null">
                fbx_state,
            </if>
            <if test="productStyleIdInfo != null">
                product_style_id_info,
            </if>
            <if test="styleId != null">
                style_id,
            </if>
            <if test="regionMark != null">
                region_mark,
            </if>
            <if test="measureCode != null">
                measure_code,
            </if>
            <if test="wallType != null">
                wall_type,
            </if>
            <if test="productSmallpoxIdentify != null">
                product_smallpox_identify,
            </if>
            <if test="productGroundIdentify != null">
                product_ground_identify,
            </if>
            <if test="seriesId != null">
                series_id,
            </if>
            <if test="spellingFlowerFileId != null">
                spelling_flower_file_id,
            </if>
            <if test="appPicTextureIds != null">
                app_pic_texture_ids,
            </if>
            <if test="productSmallpoxIdentifyStr != null">
                product_smallpox_identify_str,
            </if>
            <if test="splitTexturesInfo != null">
                split_textures_info,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="originId != null">
                origin_id,
            </if>
            <if test="goodsSpuId != null">
                goods_spu_id,
            </if>
            <if test="secrecyFlag != null">
                secrecy_Flag,
            </if>
            <if test="productBatchId != null">
                product_batch_id,
            </if>
            <if test="productBatchType != null">
                product_batch_type,
            </if>
            <if test="isCreatedTexture != null">
                is_created_texture,
            </if>
            <if test="isComplexParquet != null">
                is_complex_parquet,
            </if>
            <if test="bedsideDimensions != null">
                bedside_dimensions,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="productCode != null">
                #{productCode,jdbcType=VARCHAR},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="brandId != null">
                #{brandId,jdbcType=INTEGER},
            </if>
            <if test="proStyleId != null">
                #{proStyleId,jdbcType=INTEGER},
            </if>
            <if test="productSpec != null">
                #{productSpec,jdbcType=VARCHAR},
            </if>
            <if test="colorId != null">
                #{colorId,jdbcType=INTEGER},
            </if>
            <if test="productLength != null">
                #{productLength,jdbcType=VARCHAR},
            </if>
            <if test="productWidth != null">
                #{productWidth,jdbcType=VARCHAR},
            </if>
            <if test="productHeight != null">
                #{productHeight,jdbcType=VARCHAR},
            </if>
            <if test="salePrice != null">
                #{salePrice,jdbcType=DECIMAL},
            </if>
            <if test="advicePrice != null">
                #{advicePrice,jdbcType=DECIMAL},
            </if>
            <if test="picId != null">
                #{picId,jdbcType=INTEGER},
            </if>
            <if test="modelId != null">
                #{modelId,jdbcType=INTEGER},
            </if>
            <if test="productDesc != null">
                #{productDesc,jdbcType=VARCHAR},
            </if>
            <if test="sysCode != null">
                #{sysCode,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifier != null">
                #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="picIds != null">
                #{picIds,jdbcType=VARCHAR},
            </if>
            <if test="materialPicIds != null">
                #{materialPicIds,jdbcType=VARCHAR},
            </if>
            <if test="houseTypeValues != null">
                #{houseTypeValues,jdbcType=VARCHAR},
            </if>
            <if test="productTypeValue != null">
                #{productTypeValue,jdbcType=VARCHAR},
            </if>
            <if test="u3dmodelId != null">
                #{u3dmodelId,jdbcType=VARCHAR},
            </if>
            <if test="mergeProductIds != null">
                #{mergeProductIds,jdbcType=VARCHAR},
            </if>
            <if test="putawayModified != null">
                #{putawayModified,jdbcType=TIMESTAMP},
            </if>
            <if test="dateAtt2 != null">
                #{dateAtt2,jdbcType=TIMESTAMP},
            </if>
            <if test="productSmallTypeValue != null">
                #{productSmallTypeValue,jdbcType=INTEGER},
            </if>
            <if test="putawayState != null">
                #{putawayState,jdbcType=INTEGER},
            </if>
            <if test="numAtt3 != null">
                #{numAtt3,jdbcType=DECIMAL},
            </if>
            <if test="numAtt4 != null">
                #{numAtt4,jdbcType=DECIMAL},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="ipadU3dmodelId != null">
                #{ipadU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="iosU3dmodelId != null">
                #{iosU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="androidU3dmodelId != null">
                #{androidU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="macbookU3dmodelId != null">
                #{macbookU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="windowsU3dmodelId != null">
                #{windowsU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="webU3dmodelId != null">
                #{webU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="decorationId != null">
                #{decorationId,jdbcType=VARCHAR},
            </if>
            <if test="designerId != null">
                #{designerId,jdbcType=INTEGER},
            </if>
            <if test="modelingId != null">
                #{modelingId,jdbcType=INTEGER},
            </if>
            <if test="renderingId != null">
                #{renderingId,jdbcType=INTEGER},
            </if>
            <if test="productTypeMark != null">
                #{productTypeMark,jdbcType=VARCHAR},
            </if>
            <if test="productSmallTypeMark != null">
                #{productSmallTypeMark,jdbcType=VARCHAR},
            </if>
            <if test="originalProductCode != null">
                #{originalProductCode,jdbcType=VARCHAR},
            </if>
            <if test="spacecomonId != null">
                #{spacecomonId,jdbcType=INTEGER},
            </if>
            <if test="productShortCode != null">
                #{productShortCode,jdbcType=VARCHAR},
            </if>
            <if test="bmIds != null">
                #{bmIds,jdbcType=VARCHAR},
            </if>
            <if test="codeNumber != null">
                #{codeNumber,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="designtempletId != null">
                #{designtempletId,jdbcType=INTEGER},
            </if>
            <if test="materialFileId != null">
                #{materialFileId,jdbcType=INTEGER},
            </if>
            <if test="material3dPicIds != null">
                #{material3dPicIds,jdbcType=VARCHAR},
            </if>
            <if test="syncStatus != null">
                #{syncStatus,jdbcType=VARCHAR},
            </if>
            <if test="codeIsEmploy != null">
                #{codeIsEmploy,jdbcType=INTEGER},
            </if>
            <if test="codeBatch != null">
                #{codeBatch,jdbcType=VARCHAR},
            </if>
            <if test="productModelNumber != null">
                #{productModelNumber,jdbcType=VARCHAR},
            </if>
            <if test="fullPaveLength != null">
                #{fullPaveLength,jdbcType=VARCHAR},
            </if>
            <if test="testModified != null">
                #{testModified,jdbcType=TIMESTAMP},
            </if>
            <if test="salePriceValue != null">
                #{salePriceValue,jdbcType=INTEGER},
            </if>
            <if test="minHeight != null">
                #{minHeight,jdbcType=VARCHAR},
            </if>
            <if test="productMaterialDesc != null">
                #{productMaterialDesc,jdbcType=VARCHAR},
            </if>
            <if test="colorsLongCode != null">
                #{colorsLongCode,jdbcType=VARCHAR},
            </if>
            <if test="configId != null">
                #{configId,jdbcType=INTEGER},
            </if>
            <if test="fbxFileId != null">
                #{fbxFileId,jdbcType=INTEGER},
            </if>
            <if test="fbxTexture != null">
                #{fbxTexture,jdbcType=VARCHAR},
            </if>
            <if test="fbxState != null">
                #{fbxState,jdbcType=INTEGER},
            </if>
            <if test="productStyleIdInfo != null">
                #{productStyleIdInfo,jdbcType=VARCHAR},
            </if>
            <if test="styleId != null">
                #{styleId,jdbcType=BIGINT},
            </if>
            <if test="regionMark != null">
                #{regionMark,jdbcType=VARCHAR},
            </if>
            <if test="measureCode != null">
                #{measureCode,jdbcType=VARCHAR},
            </if>
            <if test="wallType != null">
                #{wallType,jdbcType=VARCHAR},
            </if>
            <if test="productSmallpoxIdentify != null">
                #{productSmallpoxIdentify,jdbcType=INTEGER},
            </if>
            <if test="productGroundIdentify != null">
                #{productGroundIdentify,jdbcType=INTEGER},
            </if>
            <if test="seriesId != null">
                #{seriesId,jdbcType=INTEGER},
            </if>
            <if test="spellingFlowerFileId != null">
                #{spellingFlowerFileId,jdbcType=INTEGER},
            </if>
            <if test="appPicTextureIds != null">
                #{appPicTextureIds,jdbcType=VARCHAR},
            </if>
            <if test="productSmallpoxIdentifyStr != null">
                #{productSmallpoxIdentifyStr,jdbcType=VARCHAR},
            </if>
            <if test="splitTexturesInfo != null">
                #{splitTexturesInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="companyId != null">
                #{companyId},
            </if>
            <if test="originId != null">
                #{originId},
            </if>
            <if test="goodsSpuId != null">
                #{goodsSpuId},
            </if>
            <if test="secrecyFlag != null">
                #{secrecyFlag},
            </if>
            <if test="productBatchId != null">
                #{productBatchId},
            </if>
            <if test="productBatchType != null">
                #{productBatchType},
            </if>
            <if test="isCreatedTexture != null">
                #{isCreatedTexture},
            </if>
            <if test="isComplexParquet != null">
                #{isComplexParquet},
            </if>
            <if test="bedsideDimensions != null">
                #{bedsideDimensions},
            </if>
        </trim>
    </insert>

    <!-- **更新定义** -->
    <update id="updateProduct" parameterType="com.sandu.api.product.model.Product">
        update base_product
        <set>
            <if test="productCode != null">
                product_code = #{productCode,jdbcType=VARCHAR},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="brandId != null">
                brand_id = #{brandId,jdbcType=INTEGER},
            </if>
            <if test="proStyleId != null">
                pro_style_id = #{proStyleId,jdbcType=INTEGER},
            </if>
            <if test="productSpec != null">
                product_spec = #{productSpec,jdbcType=VARCHAR},
            </if>
            <if test="colorId != null">
                color_id = #{colorId,jdbcType=INTEGER},
            </if>
            <if test="productLength != null">
                product_length = #{productLength,jdbcType=VARCHAR},
            </if>
            <if test="productWidth != null">
                product_width = #{productWidth,jdbcType=VARCHAR},
            </if>
            <if test="productHeight != null">
                product_height = #{productHeight,jdbcType=VARCHAR},
            </if>
            <if test="salePrice != null">
                sale_price = #{salePrice,jdbcType=DECIMAL},
            </if>
            <if test="advicePrice != null">
                advice_price = #{advicePrice,jdbcType=DECIMAL},
            </if>
            <if test="picId != null">
                pic_id = #{picId,jdbcType=INTEGER},
            </if>
            <if test="modelId != null">
                model_id = #{modelId,jdbcType=INTEGER},
            </if>
            <if test="productDesc != null">
                product_desc = #{productDesc,jdbcType=VARCHAR},
            </if>
            <if test="sysCode != null">
                sys_code = #{sysCode,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="picIds != null">
                pic_ids = #{picIds,jdbcType=VARCHAR},
            </if>
            <if test="materialPicIds != null">
                material_pic_ids = #{materialPicIds,jdbcType=VARCHAR},
            </if>
            <if test="houseTypeValues != null">
                house_type_values = #{houseTypeValues,jdbcType=VARCHAR},
            </if>
            <if test="productTypeValue != null">
                product_type_value = #{productTypeValue,jdbcType=VARCHAR},
            </if>
            <if test="u3dmodelId != null">
                u3dmodel_Id = #{u3dmodelId,jdbcType=VARCHAR},
            </if>
            <if test="mergeProductIds != null">
                merge_product_ids = #{mergeProductIds,jdbcType=VARCHAR},
            </if>
            <if test="putawayModified != null">
                putaway_modified = #{putawayModified,jdbcType=TIMESTAMP},
            </if>
            <if test="dateAtt2 != null">
                date_att2 = #{dateAtt2,jdbcType=TIMESTAMP},
            </if>
            <if test="productSmallTypeValue != null">
                product_small_type_value = #{productSmallTypeValue,jdbcType=INTEGER},
            </if>
            <if test="putawayState != null">
                putaway_state = #{putawayState,jdbcType=INTEGER},
            </if>
            <if test="numAtt3 != null">
                num_att3 = #{numAtt3,jdbcType=DECIMAL},
            </if>
            <if test="numAtt4 != null">
                num_att4 = #{numAtt4,jdbcType=DECIMAL},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="ipadU3dmodelId != null">
                ipad_u3dmodel_id = #{ipadU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="iosU3dmodelId != null">
                ios_u3dmodel_id = #{iosU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="androidU3dmodelId != null">
                android_u3dmodel_id = #{androidU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="macbookU3dmodelId != null">
                macbook_u3dmodel_id = #{macbookU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="windowsU3dmodelId != null">
                windows_u3dmodel_id = #{windowsU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="webU3dmodelId != null">
                web_u3dmodel_id = #{webU3dmodelId,jdbcType=INTEGER},
            </if>
            <if test="decorationId != null">
                decoration_id = #{decorationId,jdbcType=VARCHAR},
            </if>
            <if test="designerId != null">
                designer_id = #{designerId,jdbcType=INTEGER},
            </if>
            <if test="modelingId != null">
                modeling_id = #{modelingId,jdbcType=INTEGER},
            </if>
            <if test="renderingId != null">
                rendering_id = #{renderingId,jdbcType=INTEGER},
            </if>
            <if test="productTypeMark != null">
                product_type_mark = #{productTypeMark,jdbcType=VARCHAR},
            </if>
            <if test="productSmallTypeMark != null">
                product_small_type_mark = #{productSmallTypeMark,jdbcType=VARCHAR},
            </if>
            <if test="originalProductCode != null">
                original_product_code = #{originalProductCode,jdbcType=VARCHAR},
            </if>
            <if test="spacecomonId != null">
                spaceComon_id = #{spacecomonId,jdbcType=INTEGER},
            </if>
            <if test="productShortCode != null">
                product_short_code = #{productShortCode,jdbcType=VARCHAR},
            </if>
            <if test="bmIds != null">
                bm_ids = #{bmIds,jdbcType=VARCHAR},
            </if>
            <if test="codeNumber != null">
                code_number = #{codeNumber,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="designtempletId != null">
                designTemplet_id = #{designtempletId,jdbcType=INTEGER},
            </if>
            <if test="materialFileId != null">
                material_file_id = #{materialFileId,jdbcType=INTEGER},
            </if>
            <if test="material3dPicIds != null">
                material3d_pic_ids = #{material3dPicIds,jdbcType=VARCHAR},
            </if>
            <if test="syncStatus != null">
                sync_status = #{syncStatus,jdbcType=VARCHAR},
            </if>
            <if test="codeIsEmploy != null">
                code_is_employ = #{codeIsEmploy,jdbcType=INTEGER},
            </if>
            <if test="codeBatch != null">
                code_batch = #{codeBatch,jdbcType=VARCHAR},
            </if>
            <if test="productModelNumber != null">
                product_model_number = #{productModelNumber,jdbcType=VARCHAR},
            </if>
            <if test="fullPaveLength != null">
                full_pave_length = #{fullPaveLength,jdbcType=VARCHAR},
            </if>
            <if test="testModified != null">
                test_modified = #{testModified,jdbcType=TIMESTAMP},
            </if>
            <if test="salePriceValue != null">
                sale_price_value = #{salePriceValue,jdbcType=INTEGER},
            </if>
            <if test="minHeight != null">
                min_height = #{minHeight,jdbcType=VARCHAR},
            </if>
            <if test="productMaterialDesc != null">
                product_material_desc = #{productMaterialDesc,jdbcType=VARCHAR},
            </if>
            <if test="colorsLongCode != null">
                colors_long_code = #{colorsLongCode,jdbcType=VARCHAR},
            </if>
            <if test="configId != null">
                config_id = #{configId,jdbcType=INTEGER},
            </if>
            <if test="fbxFileId != null">
                fbx_file_id = #{fbxFileId,jdbcType=INTEGER},
            </if>
            <if test="fbxTexture != null">
                fbx_texture = #{fbxTexture,jdbcType=VARCHAR},
            </if>
            <if test="fbxState != null">
                fbx_state = #{fbxState,jdbcType=INTEGER},
            </if>
            <if test="productStyleIdInfo != null">
                product_style_id_info = #{productStyleIdInfo,jdbcType=VARCHAR},
            </if>
            <if test="styleId != null">
                style_id = #{styleId,jdbcType=BIGINT},
            </if>
            <if test="regionMark != null">
                region_mark = #{regionMark,jdbcType=VARCHAR},
            </if>
            <if test="measureCode != null">
                measure_code = #{measureCode,jdbcType=VARCHAR},
            </if>
            <if test="wallType != null">
                wall_type = #{wallType,jdbcType=VARCHAR},
            </if>
            <if test="productSmallpoxIdentify != null">
                product_smallpox_identify = #{productSmallpoxIdentify,jdbcType=INTEGER},
            </if>
            <if test="productGroundIdentify != null">
                product_ground_identify = #{productGroundIdentify,jdbcType=INTEGER},
            </if>
            <if test="seriesId != null">
                series_id = #{seriesId,jdbcType=INTEGER},
            </if>
            <if test="spellingFlowerFileId != null">
                spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER},
            </if>
            <if test="appPicTextureIds != null">
                app_pic_texture_ids = #{appPicTextureIds,jdbcType=VARCHAR},
            </if>
            <if test="productSmallpoxIdentifyStr != null">
                product_smallpox_identify_str = #{productSmallpoxIdentifyStr,jdbcType=VARCHAR},
            </if>
            <if test="splitTexturesInfo != null">
                split_textures_info = #{splitTexturesInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="secrecyFlag != null">
                secrecy_flag = #{secrecyFlag},
            </if>
            <if test="productBatchId != null">
                product_batch_id = #{productBatchId},
            </if>
            <if test="productBatchType != null">
                product_batch_type= #{productBatchType},
            </if>
            <if test="isCreatedTexture != null">
                is_created_texture = #{isCreatedTexture},
            </if>
            <if test="isComplexParquet != null">
                is_complex_parquet = #{isComplexParquet},
            </if>
            <if test="bedsideDimensions != null">
                bedside_dimensions = #{bedsideDimensions},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- **删除定义** -->
    <update id="deleteProductById">
		UPDATE   base_product SET  is_deleted = 1, gmt_modified = now()
		where id = #{id,jdbcType=INTEGER}
	</update>

    <update id="deleteProductByCode" parameterType="java.lang.String">
		UPDATE  base_product SET is_deleted = 1
		where product_code = #{productCode,jdbcType=VARCHAR}
	</update>

    <!-- **常量定义** -->
    <sql id="Base_Column_List">
		id, product_code, product_name, brand_id, pro_style_id, product_spec, color_id, product_length,
		product_width, product_height, sale_price, advice_price, pic_id, model_id, product_desc, sys_code,
		creator, gmt_create, modifier, gmt_modified, is_deleted, pic_ids, material_pic_ids,
		house_type_values, product_type_value, u3dmodel_Id, merge_product_ids, putaway_modified,
		date_att2, product_small_type_value, putaway_state, num_att3, num_att4, remark, ipad_u3dmodel_id,
		ios_u3dmodel_id, android_u3dmodel_id, macbook_u3dmodel_id, windows_u3dmodel_id, web_u3dmodel_id,
		decoration_id, designer_id, modeling_id, rendering_id, product_type_mark, product_small_type_mark,
		original_product_code, spaceComon_id, product_short_code, bm_ids, code_number, parent_id,
		designTemplet_id, material_file_id, material3d_pic_ids, sync_status, code_is_employ,
		code_batch, product_model_number, full_pave_length, test_modified, sale_price_value,
		min_height, product_material_desc, colors_long_code, config_id, fbx_file_id, fbx_texture,
		fbx_state, product_style_id_info, style_id, region_mark, measure_code, wall_type,
		product_smallpox_identify, product_ground_identify, series_id, spelling_flower_file_id,
		app_pic_texture_ids, product_smallpox_identify_str, secrecy_flag , product_batch_id, product_batch_type,is_created_texture,
		is_complex_parquet,bedside_dimensions
	</sql>

    <!-- **结果定义** -->
    <resultMap id="AllResultMap" type="com.sandu.api.product.model.Product">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="product_code" property="productCode" jdbcType="VARCHAR"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="brand_id" property="brandId" jdbcType="INTEGER"/>
        <result column="pro_style_id" property="proStyleId" jdbcType="INTEGER"/>
        <result column="product_spec" property="productSpec" jdbcType="VARCHAR"/>
        <result column="color_id" property="colorId" jdbcType="INTEGER"/>
        <result column="product_length" property="productLength" jdbcType="VARCHAR"/>
        <result column="product_width" property="productWidth" jdbcType="VARCHAR"/>
        <result column="product_height" property="productHeight" jdbcType="VARCHAR"/>
        <result column="sale_price" property="salePrice" jdbcType="DECIMAL"/>
        <result column="advice_price" property="advicePrice" jdbcType="DECIMAL"/>
        <result column="pic_id" property="picId" jdbcType="INTEGER"/>
        <result column="model_id" property="modelId" jdbcType="INTEGER"/>
        <result column="product_desc" property="productDesc" jdbcType="VARCHAR"/>
        <result column="sys_code" property="sysCode" jdbcType="VARCHAR"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="modifier" property="modifier" jdbcType="VARCHAR"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER"/>
        <result column="pic_ids" property="picIds" jdbcType="VARCHAR"/>
        <result column="material_pic_ids" property="materialPicIds" jdbcType="VARCHAR"/>
        <result column="house_type_values" property="houseTypeValues" jdbcType="VARCHAR"/>
        <result column="product_type_value" property="productTypeValue" jdbcType="VARCHAR"/>
        <result column="u3dmodel_Id" property="u3dmodelId" jdbcType="VARCHAR"/>
        <result column="merge_product_ids" property="mergeProductIds" jdbcType="VARCHAR"/>
        <result column="putaway_modified" property="putawayModified" jdbcType="TIMESTAMP"/>
        <result column="date_att2" property="dateAtt2" jdbcType="TIMESTAMP"/>
        <result column="product_small_type_value" property="productSmallTypeValue" jdbcType="INTEGER"/>
        <result column="putaway_state" property="putawayState" jdbcType="INTEGER"/>
        <result column="num_att3" property="numAtt3" jdbcType="DECIMAL"/>
        <result column="num_att4" property="numAtt4" jdbcType="DECIMAL"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="ipad_u3dmodel_id" property="ipadU3dmodelId" jdbcType="INTEGER"/>
        <result column="ios_u3dmodel_id" property="iosU3dmodelId" jdbcType="INTEGER"/>
        <result column="android_u3dmodel_id" property="androidU3dmodelId" jdbcType="INTEGER"/>
        <result column="macbook_u3dmodel_id" property="macbookU3dmodelId" jdbcType="INTEGER"/>
        <result column="windows_u3dmodel_id" property="windowsU3dmodelId" jdbcType="INTEGER"/>
        <result column="web_u3dmodel_id" property="webU3dmodelId" jdbcType="INTEGER"/>
        <result column="decoration_id" property="decorationId" jdbcType="VARCHAR"/>
        <result column="designer_id" property="designerId" jdbcType="INTEGER"/>
        <result column="modeling_id" property="modelingId" jdbcType="INTEGER"/>
        <result column="rendering_id" property="renderingId" jdbcType="INTEGER"/>
        <result column="product_type_mark" property="productTypeMark" jdbcType="VARCHAR"/>
        <result column="product_small_type_mark" property="productSmallTypeMark" jdbcType="VARCHAR"/>
        <result column="original_product_code" property="originalProductCode" jdbcType="VARCHAR"/>
        <result column="spaceComon_id" property="spacecomonId" jdbcType="INTEGER"/>
        <result column="product_short_code" property="productShortCode" jdbcType="VARCHAR"/>
        <result column="bm_ids" property="bmIds" jdbcType="VARCHAR"/>
        <result column="code_number" property="codeNumber" jdbcType="INTEGER"/>
        <result column="parent_id" property="parentId" jdbcType="INTEGER"/>
        <result column="designTemplet_id" property="designtempletId" jdbcType="INTEGER"/>
        <result column="material_file_id" property="materialFileId" jdbcType="INTEGER"/>
        <result column="material3d_pic_ids" property="material3dPicIds" jdbcType="VARCHAR"/>
        <result column="sync_status" property="syncStatus" jdbcType="VARCHAR"/>
        <result column="code_is_employ" property="codeIsEmploy" jdbcType="INTEGER"/>
        <result column="code_batch" property="codeBatch" jdbcType="VARCHAR"/>
        <result column="product_model_number" property="productModelNumber" jdbcType="VARCHAR"/>
        <result column="full_pave_length" property="fullPaveLength" jdbcType="VARCHAR"/>
        <result column="test_modified" property="testModified" jdbcType="TIMESTAMP"/>
        <result column="sale_price_value" property="salePriceValue" jdbcType="INTEGER"/>
        <result column="min_height" property="minHeight" jdbcType="VARCHAR"/>
        <result column="product_material_desc" property="productMaterialDesc" jdbcType="VARCHAR"/>
        <result column="colors_long_code" property="colorsLongCode" jdbcType="VARCHAR"/>
        <result column="config_id" property="configId" jdbcType="INTEGER"/>
        <result column="fbx_file_id" property="fbxFileId" jdbcType="INTEGER"/>
        <result column="fbx_texture" property="fbxTexture" jdbcType="VARCHAR"/>
        <result column="fbx_state" property="fbxState" jdbcType="INTEGER"/>
        <result column="product_style_id_info" property="productStyleIdInfo" jdbcType="VARCHAR"/>
        <result column="style_id" property="styleId" jdbcType="BIGINT"/>
        <result column="region_mark" property="regionMark" jdbcType="VARCHAR"/>
        <result column="measure_code" property="measureCode" jdbcType="VARCHAR"/>
        <result column="wall_type" property="wallType" jdbcType="VARCHAR"/>
        <result column="product_smallpox_identify" property="productSmallpoxIdentify" jdbcType="INTEGER"/>
        <result column="product_ground_identify" property="productGroundIdentify" jdbcType="INTEGER"/>
        <result column="series_id" property="seriesId" jdbcType="INTEGER"/>
        <result column="spelling_flower_file_id" property="spellingFlowerFileId" jdbcType="INTEGER"/>
        <result column="app_pic_texture_ids" property="appPicTextureIds" jdbcType="VARCHAR"/>
        <result column="product_smallpox_identify_str" property="productSmallpoxIdentifyStr" jdbcType="VARCHAR"/>
        <result column="is_created_texture" property="isCreatedTexture" jdbcType="INTEGER"/>
        <result column="is_complex_parquet" property="isComplexParquet" jdbcType="INTEGER"/>
        <result column="bedside_dimensions" property="bedsideDimensions" jdbcType="INTEGER"/>
    </resultMap>

    <!-- **查询定义** -->
    <!-- 根据code查询 -->
    <select id="getProductByCode" resultMap="AllResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_product where product_code = #{code,jdbcType=VARCHAR}
    </select>
    <!-- 按主键查询-->
    <select id="getProductInfoById" resultType="com.sandu.api.product.model.Product">
        select
        <include refid="Base_Column_List"/>
        from base_product
        where id = #{id,jdbcType=INTEGER} and is_deleted = 0
    </select>

    <!-- 按分类主键批量查询产品 -->
    <select id="getProductIdsByCategoryIds" resultType="java.lang.Integer">
        select
        bp.id, bp.product_name, bp.product_code, bp.brand_id, bp.pic_id
        from base_product bp
        left join product_category_rel pcr
        on bp.id = pcr.product_id
        WHERE pcr.category_id in
        <foreach collection="categoryIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 根据品牌ID查询产品 -->
    <select id="getProductByBrandId" resultMap="AllResultMap">
		select
		bp.id, bp.product_name, bp.product_code, bp.brand_id, bp.pic_id
		from base_product WHERE brand_id = #{brandId}
	</select>

    <!-- 根据类目ID查询产品 -->
    <select id="getProductByCategoryId" resultMap="AllResultMap">
		select
		bp.id, bp.product_name, bp.product_code, bp.brand_id, bp.pic_id
		from base_product bp
		left join product_category_rel pcr
		on bp.id = pcr.product_id
		where pcr.category_id = #{categoryId}
	</select>

    <!-- 根据产品组ID查询产品 -->
    <select id="getProductByGroupProductId" resultMap="AllResultMap">
		select
		bp.id, bp.product_name, bp.product_code, bp.brand_id, bp.pic_id
		FROM
		base_product bp
		LEFT JOIN group_product_details gpd ON gpd.product_id = bp.id
		WHERE
		gpd.group_id = #{groupProductId}
	</select>
    <!--查询产品列表(商家后台) -->
    <select id="queryProducts" parameterType="com.sandu.api.product.model.po.ProductQueryPO"
            resultType="com.sandu.api.product.model.bo.ProductListBO">
        select
        bp.id,bp.product_code,bp.product_name,bp.brand_id,bp.pic_id,bp.windows_u3dmodel_id as model_id,
        bp.gmt_create,bp.material_pic_ids as textureId, bp.product_small_type_mark as smallType,bp.product_type_mark as
        type, bp.product_batch_type,
        bp.secrecy_flag as secrecy,
        bp.product_model_number as modelNumber,
        bp.is_created_texture as isCreatedTexture
        from base_product bp FORCE INDEX (idx_pic)
        where product_batch_type in (1,2)
        and bp.is_deleted = 0
        <if test="brandIds!=null and brandIds.size > 0">
            and bp.brand_id in
            <foreach collection="brandIds" open="(" separator="," close=")" item="bid">
                #{bid}
            </foreach>
        </if>
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="platformId!= null">
            <choose>
                <when test="platformId != 0">
                    AND EXISTS
                    (SELECT
                    1
                    FROM
                    platform2b_product_rel p2b
                    WHERE bp.id = p2b.product_id
                    AND p2b.allot_state = 1
                    AND p2b.putaway_state = 1
                    AND p2b.is_deleted = 0
                    AND p2b.platform_id = #{platformId}
                    UNION
                    ALL
                    SELECT
                    1
                    FROM
                    platform2c_product_rel p2c
                    WHERE bp.id = p2c.product_id
                    AND p2c.allot_state = 1
                    AND p2c.putaway_state = 1
                    AND p2c.is_deleted = 0
                    AND p2c.platform_id = #{platformId})
                </when>
                <otherwise>
                    AND NOT EXISTS
                    (
                    SELECT
                    1
                    FROM
                    platform2b_product_rel p2b
                    WHERE bp.id = p2b.product_id
                    AND p2b.allot_state = 1
                    AND p2b.putaway_state = 1
                    AND p2b.is_deleted = 0
                    UNION
                    ALL
                    SELECT
                    1
                    FROM
                    platform2c_product_rel p2c
                    WHERE bp.id = p2c.product_id
                    AND p2c.allot_state = 1
                    AND p2c.putaway_state = 1
                    AND p2c.is_deleted = 0
                    )
                </otherwise>
            </choose>
        </if>
        <if test="modelNumber != null and modelNumber != ''">
            and bp.product_model_number like concat(#{modelNumber},'%')
        </if>
        <if test="productType != null and productType != ''">
            and product_small_type_mark = #{productType}
        </if>
        <if test="bigProductType != null and bigProductType != ''">
            and product_type_mark = #{bigProductType}
        </if>

        <if test="productCode != null and productCode!=''">
            and bp.product_code like concat(#{productCode},'%')
        </if>
        <if test="productName != null and productName!=''">
            and bp.product_name like concat(#{productName},'%')
        </if>
        <if test="allotState != null and allotState == 'nonAllot'">
            and (( p2b.id is null and p2c.id is null) or (p2c.allot_State = 0 and p2b.allot_State = 0))
        </if>
        <if test="allotState != null and allotState == 'channel'">
            and p2b.allot_State = 1 and p2b.platform_id = #{platform2bId}
        </if>
        <if test="allotState != null and allotState == 'online'">
            and p2c.allot_State = 1 and p2c.platform_id = #{platform2cId}
        </if>
        <if test="secrecy != null and secrecy != -1">
            <if test="secrecy == 1">
                and bp.secrecy_flag = #{secrecy}
            </if>
            <if test="secrecy == 0">
                and (bp.secrecy_flag = #{secrecy} or bp.secrecy_flag is null)
            </if>
        </if>
        and bp.id &lt;= (
        select distinct bp.id
        from base_product bp FORCE INDEX (idx_pic)
        where product_batch_type in (1,2)
        and bp.is_deleted = 0
        <if test="brandIds!=null and brandIds.size > 0">
            and bp.brand_id in
            <foreach collection="brandIds" open="(" separator="," close=")" item="bid">
                #{bid}
            </foreach>
        </if>
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="platformId!= null">
            <choose>
                <when test="platformId != 0">
                    AND EXISTS
                    (SELECT
                    1
                    FROM
                    platform2b_product_rel p2b
                    WHERE bp.id = p2b.product_id
                    AND p2b.allot_state = 1
                    AND p2b.putaway_state = 1
                    AND p2b.is_deleted = 0
                    AND p2b.platform_id = #{platformId}
                    UNION
                    ALL
                    SELECT
                    1
                    FROM
                    platform2c_product_rel p2c
                    WHERE bp.id = p2c.product_id
                    AND p2c.allot_state = 1
                    AND p2c.putaway_state = 1
                    AND p2c.is_deleted = 0
                    AND p2c.platform_id = #{platformId})
                </when>
                <otherwise>
                    AND NOT EXISTS
                    (
                    SELECT
                    1
                    FROM
                    platform2b_product_rel p2b
                    WHERE bp.id = p2b.product_id
                    AND p2b.allot_state = 1
                    AND p2b.putaway_state = 1
                    AND p2b.is_deleted = 0
                    UNION
                    ALL
                    SELECT
                    1
                    FROM
                    platform2c_product_rel p2c
                    WHERE bp.id = p2c.product_id
                    AND p2c.allot_state = 1
                    AND p2c.putaway_state = 1
                    AND p2c.is_deleted = 0
                    )
                </otherwise>
            </choose>
        </if>
        <if test="modelNumber != null and modelNumber != ''">
            and bp.product_model_number like concat(#{modelNumber},'%')
        </if>
        <if test="productType != null and productType != ''">
            and product_small_type_mark = #{productType}
        </if>
        <if test="bigProductType != null and bigProductType != ''">
            and product_type_mark = #{bigProductType}
        </if>

        <if test="productCode != null and productCode!=''">
            and bp.product_code like concat(#{productCode},'%')
        </if>
        <if test="productName != null and productName!=''">
            and bp.product_name like concat(#{productName},'%')
        </if>
        <if test="allotState != null and allotState == 'nonAllot'">
            and (( p2b.id is null and p2c.id is null) or (p2c.allot_State = 0 and p2b.allot_State = 0))
        </if>
        <if test="allotState != null and allotState == 'channel'">
            and p2b.allot_State = 1 and p2b.platform_id = #{platform2bId}
        </if>
        <if test="allotState != null and allotState == 'online'">
            and p2c.allot_State = 1 and p2c.platform_id = #{platform2cId}
        </if>
        <if test="secrecy != null and secrecy != -1">
            <if test="secrecy == 1">
                and bp.secrecy_flag = #{secrecy}
            </if>
            <if test="secrecy == 0">
                and (bp.secrecy_flag = #{secrecy} or bp.secrecy_flag is null)
            </if>
        </if>
        order by bp.id desc
        limit #{offsetNum},1
        )
        group by bp.id
        <if test="orderField!=null and orderField!=''">
            order by bp.${orderField}
            <if test="orderMethod!=null and orderMethod!=''">
                ${orderMethod}
            </if>
        </if>
        limit #{limit}
    </select>
    <select id="queryProductsCount" parameterType="com.sandu.api.product.model.po.ProductQueryPO"
            resultType="java.lang.Integer">
        select
        DISTINCT bp.id
        from base_product bp FORCE INDEX (idx_pic)
        where product_batch_type in (1,2)
        and bp.is_deleted = 0
        <if test="brandIds!=null and brandIds.size > 0">
            and bp.brand_id in
            <foreach collection="brandIds" open="(" separator="," close=")" item="bid">
                #{bid}
            </foreach>
        </if>
        <if test="productType != null and productType != ''">
            and product_small_type_mark = #{productType}
        </if>
        <if test="bigProductType != null and bigProductType != ''">
            and product_type_mark = #{bigProductType}
        </if>
        <if test="modelNumber != null and modelNumber != ''">
            and bp.product_model_number like concat(#{modelNumber},'%')
        </if>
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="platformId != null">
            <choose>
                <when test="platformId != 0">
                    AND EXISTS
                    (SELECT
                    1
                    FROM
                    platform2b_product_rel p2b
                    WHERE bp.id = p2b.product_id
                    AND p2b.allot_state = 1
                    AND p2b.putaway_state = 1
                    AND p2b.is_deleted = 0
                    AND p2b.platform_id = #{platformId}
                    UNION
                    ALL
                    SELECT
                    1
                    FROM
                    platform2c_product_rel p2c
                    WHERE bp.id = p2c.product_id
                    AND p2c.allot_state = 1
                    AND p2c.putaway_state = 1
                    AND p2c.is_deleted = 0
                    AND p2c.platform_id = #{platformId})
                </when>
                <otherwise>
                    AND NOT EXISTS
                    (
                    SELECT
                    1
                    FROM
                    platform2b_product_rel p2b
                    WHERE bp.id = p2b.product_id
                    AND p2b.allot_state = 1
                    AND p2b.putaway_state = 1
                    AND p2b.is_deleted = 0
                    UNION
                    ALL
                    SELECT
                    1
                    FROM
                    platform2c_product_rel p2c
                    WHERE bp.id = p2c.product_id
                    AND p2c.allot_state = 1
                    AND p2c.putaway_state = 1
                    AND p2c.is_deleted = 0
                    )
                </otherwise>
            </choose>
        </if>
        <if test="productCode != null and productCode!=''">
            and bp.product_code like concat(#{productCode},'%')
        </if>
        <if test="productName != null and productName!=''">
            and bp.product_name like concat(#{productName},'%')
        </if>
        <if test="allotState != null and allotState == 'nonAllot'">
            and (( p2b.id is null and p2c.id is null) or (p2c.allot_State = 0 and p2b.allot_State = 0))
        </if>
        <if test="allotState != null and allotState == 'channel'">
            and p2b.allot_State = 1 and p2b.platform_id = #{platform2bId}
        </if>
        <if test="allotState != null and allotState == 'online'">
            and p2c.allot_State = 1 and p2c.platform_id = #{platform2cId}
        </if>
        <if test="secrecy != null and secrecy != -1">
            <if test="secrecy == 1">
                and bp.secrecy_flag = #{secrecy}
            </if>
            <if test="secrecy == 0">
                and (bp.secrecy_flag = #{secrecy} or bp.secrecy_flag is null)
            </if>
        </if>
    </select>

    <!-- 获取产品已上架列表 -->
    <select id="queryUpPlatForm" resultType="java.util.Map">
        SELECT
        t.productId,
        GROUP_CONCAT(t.platformId) AS platformId
        FROM
        (SELECT
        product_id AS productId,
        GROUP_CONCAT(p2b.platform_id) AS platformId
        FROM
        platform2b_product_rel p2b
        WHERE p2b.allot_state = 1
        AND p2b.putaway_state = 1
        AND p2b.is_deleted = 0
        <if test="productIds!=null and productIds.size > 0">
            and  p2b.product_id in
            <foreach collection="productIds" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP BY product_id
        UNION
        SELECT
        product_id AS productId,
        GROUP_CONCAT(p2c.platform_id) AS platformId
        FROM
        platform2c_product_rel p2c
        WHERE p2c.allot_state = 1
        AND p2c.putaway_state = 1
        AND p2c.`is_deleted` = 0
        <if test="productIds!=null and productIds.size > 0">
            and p2c.product_id in
            <foreach collection="productIds" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP BY product_id) t
        GROUP BY t.productId
        ORDER BY t.productId
    </select>

    <!--查询产品列表(渠道)-->
    <select id="query2bProducts" parameterType="com.sandu.api.product.model.po.ProductQueryPO"
            resultType="com.sandu.api.product.model.bo.ProductListBO">

        SELECT
        bp.id,
        bp.product_code,
        bp.product_name,
        bp.brand_id,
        bp.pic_id,
        bp.windows_u3dmodel_id     AS model_id,
        bp.gmt_create,
        bp.material_pic_ids        AS textureId,
        bp.product_small_type_mark AS smallType,
        bp.product_type_mark       AS type,
        bp.secrecy_flag            AS secrecy,
        bp.product_model_number    AS modelNumber,
        max(p2b.putaway_state) AS putAwayStatus2b,
        max(p2b.pic_id)        AS pic2b_id,
        max(p2b.gmt_create)    AS gmtCreate2b
        FROM base_product bp LEFT JOIN platform2b_product_rel p2b ON bp.id = p2b.product_id
        where bp.is_deleted = 0 and bp.brand_id != -1
        and p2b.allot_State = 1
        <if test="brandIds!=null and brandIds.size > 0">
            and bp.brand_id in
            <foreach collection="brandIds" open="(" separator="," close=")" item="bid">
                #{bid}
            </foreach>
        </if>
        <if test="productType != null and productType != ''">
            and (product_type_mark = #{productType} or product_small_type_mark = #{productType})
        </if>
        <if test="modelNumber != null and modelNumber != ''">
            and bp.product_model_number like concat('%',#{modelNumber},'%')
        </if>
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>

        <if test="productCode != null and productCode !='' ">
            and bp.product_code like concat('%',#{productCode},'%')
        </if>
        <if test="productName != null and productName !=''">
            and bp.product_name like concat('%',#{productName},'%')
        </if>
        <if test="putawayState!=null and putawayState >= 0">
            and p2b.putaway_state = #{putawayState} and p2b.platform_id = #{platform2bId}
        </if>
        <if test="secrecy != null and secrecy != -1">
            <if test="secrecy == 1">
                and bp.secrecy_flag = #{secrecy}
            </if>
            <if test="secrecy == 0">
                and (bp.secrecy_flag = #{secrecy} or bp.secrecy_flag is null)
            </if>
        </if>
        GROUP BY bp.id
        <if test="orderField!=null and orderField!=''">
            order by bp.${orderField}
            <if test="orderMethod!=null and orderMethod!=''">
                ${orderMethod}
            </if>
        </if>
        limit #{page},#{limit}
    </select>
    <select id="query2bProductsCount" parameterType="com.sandu.api.product.model.po.ProductQueryPO"
            resultType="java.lang.Integer">
        select count(1) from (
        SELECT
        distinct bp.id
        FROM
        base_product bp
        LEFT JOIN platform2b_product_rel p2b FORCE INDEX (idx_product_id) ON bp.id = p2b.product_id
        where bp.is_deleted = 0 and bp.brand_id != -1
        and p2b.allot_State = 1
        <if test="brandIds!=null and brandIds.size > 0">
            and bp.brand_id in
            <foreach collection="brandIds" open="(" separator="," close=")" item="bid">
                #{bid}
            </foreach>
        </if>
        <if test="modelNumber != null and modelNumber != ''">
            and bp.product_model_number like concat('%',#{modelNumber},'%')
        </if>
        <if test="productType != null and productType != ''">
            and (product_type_mark = #{productType} or product_small_type_mark = #{productType})
        </if>
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>

        <if test="productCode != null and productCode !='' ">
            and bp.product_code like concat('%',#{productCode},'%')
        </if>
        <if test="productName != null and productName !=''">
            and bp.product_name like concat('%',#{productName},'%')
        </if>
        <if test="putawayState!=null and putawayState >= 0">
            and p2b.putaway_state = #{putawayState} and p2b.platform_id = #{platform2bId}
        </if>
        <if test="secrecy != null and secrecy != -1">
            <if test="secrecy == 1">
                and bp.secrecy_flag = #{secrecy}
            </if>
            <if test="secrecy == 0">
                and (bp.secrecy_flag = #{secrecy} or bp.secrecy_flag is null)
            </if>
        </if>
        ) as t
    </select>
    <!--查询产品列表(线上)-->
    <select id="query2cProducts" parameterType="com.sandu.api.product.model.po.ProductQueryPO"
            resultType="com.sandu.api.product.model.bo.ProductListBO">
        select
        bp.id,bp.product_code,bp.product_name,bp.brand_id,bp.pic_id,bp.windows_u3dmodel_id as model_id,
        bp.gmt_create,bp.material_pic_ids as textureId, bp.product_small_type_mark as smallType,bp.product_type_mark as
        type,
        p2c.allot_State as status2c,
        p2c.gmt_create as gmtCreate2c,
        p2c.pic_id as pic2c_id,
        bp.secrecy_flag as secrecy,
        bp.product_model_number as modelNumber,
        GROUP_CONCAT(p2c.putaway_state) as putStatus,
        GROUP_CONCAT(p2c.platform_id) as platformIds
        from base_product bp
        left join platform2c_product_rel p2c on bp.id = p2c.product_id
        where bp.is_deleted = 0 and bp.brand_id != -1
        and p2c.allot_State = 1
        <if test="brandIds!=null and brandIds.size > 0">
            and bp.brand_id in
            <foreach collection="brandIds" open="(" separator="," close=")" item="bid">
                #{bid}
            </foreach>
        </if>
        <if test="modelNumber != null and modelNumber != ''">
            and bp.product_model_number like concat('%',#{modelNumber},'%')
        </if>
        <if test="productType != null and productType != ''">
            and (product_type_mark = #{productType} or product_small_type_mark = #{productType})
        </if>
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>

        <if test="productCode != null and productCode !=''">
            and bp.product_code like concat('%',#{productCode},'%')
        </if>
        <if test="productName != null and productName !=''">
            and bp.product_name like concat('%',#{productName},'%')
        </if>
        <if test="platformId != null and platformId>0">
            and p2c.putaway_state = 1 and p2c.platform_id = #{platformId}
        </if>
        <if test="platformId != null and platformId == -1">
            and (p2c.putaway_state = 0 or p2c.putaway_state is null)
        </if>
        <if test="secrecy != null and secrecy != -1">
            <if test="secrecy == 1">
                and bp.secrecy_flag = #{secrecy}
            </if>
            <if test="secrecy == 0">
                and (bp.secrecy_flag = #{secrecy} or bp.secrecy_flag is null)
            </if>
        </if>
        GROUP BY bp.id
        <if test="orderField!=null and orderField!=''">
            order by bp.${orderField}
            <if test="orderMethod!=null and orderMethod!=''">
                ${orderMethod}
            </if>
        </if>
        limit #{page},#{limit}
    </select>
    <select id="query2cProductsCount" parameterType="com.sandu.api.product.model.po.ProductQueryPO"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        DISTINCT bp.id
        from base_product bp
        left join platform2c_product_rel p2c FORCE INDEX (idx_product_id) on bp.id = p2c.product_id

        where bp.is_deleted = 0 and bp.brand_id != -1
        and p2c.allot_State = 1
        <if test="brandIds!=null and brandIds.size > 0">
            and bp.brand_id in
            <foreach collection="brandIds" open="(" separator="," close=")" item="bid">
                #{bid}
            </foreach>
        </if>
        <if test="modelNumber != null and modelNumber != ''">
            and bp.product_model_number like concat('%',#{modelNumber},'%')
        </if>
        <if test="companyId != null">
            and company_id = #{companyId}
        </if>
        <if test="productType != null and productType != ''">
            and (product_type_mark = #{productType} or product_small_type_mark = #{productType})
        </if>

        <if test="productCode != null and productCode !=''">
            and bp.product_code like concat('%',#{productCode},'%')
        </if>
        <if test="productName != null and productName !=''">
            and bp.product_name like concat('%',#{productName},'%')
        </if>
        <if test="platformId != null and platformId>0">
            and p2c.putaway_state = 1 and p2c.platform_id = #{platformId}
        </if>
        <if test="platformId != null and platformId == -1">
            and (p2c.putaway_state = 0 or p2c.putaway_state is null)
        </if>
        <if test="secrecy != null and secrecy != -1">
            <if test="secrecy == 1">
                and bp.secrecy_flag = #{secrecy}
            </if>
            <if test="secrecy == 0">
                and (bp.secrecy_flag = #{secrecy} or bp.secrecy_flag is null)
            </if>
        </if>
        ) as t
    </select>
    <!-- 设计方案产品列表(根据产品ID集合查询) -->
    <select id="querySolutionProducts" parameterType="com.sandu.api.product.model.po.ProductQueryPO"
            resultType="com.sandu.api.product.model.bo.ProductListBO">
        select
        bp.id,bp.product_code,bp.product_name,bp.brand_id,bp.pic_id,bp.windows_u3dmodel_id as model_id,
        bp.gmt_create,bp.material_pic_ids as textureId, bp.product_small_type_mark as smallType,bp.product_type_mark as
        type,
        p2b.putaway_state as putAwayStatus2b,
        p2b.gmt_create as gmtCreate2b,
        p2c.gmt_create as gmtCreate2c,
        bp.secrecy_flag as secrecy,
        bp.product_model_number as modelNumber
        from base_product bp
        left join platform2b_product_rel p2b on bp.id = p2b.product_id
        left join platform2c_product_rel p2c on bp.id = p2c.product_id
        where bp.is_deleted = 0 and bp.product_code not like 'baimo_%'
        <if test="productIds!=null and productIds.size > 0">
            and bp.id in
            <foreach collection="productIds" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="productType != null and productType != ''">
            and (bp.product_type_mark = #{productType} or bp.product_small_type_mark = #{productType})
        </if>
        <if test="categoryCode != null and categoryCode != ''">
            and (product_type_mark = #{categoryCode} or product_small_type_mark = #{categoryCode})
        </if>
        <if test="productCode != null and productCode!=''">
            and bp.product_code like concat('%',#{productCode},'%')
        </if>
        <if test="productName != null and productName!=''">
            and bp.product_name like concat('%',#{productName},'%')
        </if>
        <if test="allotState != null and allotState == 'nonAllot'">
            and (( p2b.id is null and p2c.id is null) or (p2c.allot_State = 0 and p2b.allot_State = 0))
        </if>
        <if test="allotState != null and allotState == 'channel'">
            and p2b.allot_State = 1 and p2b.platform_id = #{platform2bId}
        </if>
        <if test="allotState != null and allotState == 'online'">
            and p2c.allot_State = 1 and p2c.platform_id = #{platform2cId}
        </if>
        <if test="secrecy != null and secrecy == 0">
            and ( bp.secrecy_flag = #{secrecy} or bp.secrecy_flag is null)
        </if>
        <if test="secrecy != null and secrecy == 1">
            and bp.secrecy_flag = #{secrecy}
        </if>
        group by bp.id
        <if test="orderField!=null and orderField!=''">
            order by bp.${orderField}
            <if test="orderMethod!=null and orderMethod!=''">
                ${orderMethod}
            </if>
        </if>
    </select>

    <update id="deleteBussinessyProduct">
        update base_product SET
        is_deleted = 1,
        gmt_modified = now()
        where id in
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </update>

    <select id="getListByIds" resultMap="AllResultMap">
        select id,pro_style_id,sale_price,advice_price,pic_id,pic_ids,product_desc,product_style_id_info from
        base_product
        where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="getListByModelIds" resultMap="AllResultMap">
        select id,product_name
        from base_product
        where model_id in
        <foreach collection="list" open="(" separator="," close=")" item="modelId">
            #{modelId}
        </foreach>
    </select>

    <select id="getProductByModelIds" resultType="com.sandu.api.product.model.Product">
        select id,product_code,windows_u3dmodel_id as modelId
        from base_product
        where 1 =1
        and base_product.windows_u3dmodel_id in
        <foreach collection="modelIds" item="id" separator="," close=")" open="(">
            #{id}
        </foreach>

    </select>

    <select id="getProductByIds" resultMap="AllResultMap">
        select id,product_code,product_name,windows_u3dmodel_id as model_id , pic_id
        from base_product
        where id in
        <foreach collection="list" separator="," close=")" open="(" item="id">
            #{id}
        </foreach>
    </select>

    <select id="mapProductId2PutStatus" resultType="com.sandu.api.platform.model.PlatformProductRel">
        select product_id,group_concat(putaway_state) as att1 from platform2c_product_rel
        where product_id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        GROUP BY product_id
    </select>

    <select id="queryProductsInEditor" parameterType="com.sandu.api.product.input.EditorProductQuery"
            resultType="com.sandu.api.product.model.bo.EditorProductListBO">
        SELECT DISTINCT bp.id,bp.product_name,bp.product_code,rm.id as modelId,
        bp.product_model_number as modelNumber,bp.pic_id,
        rm.model_code,rm.category_names
        from base_product bp
        INNER JOIN res_model rm on bp.windows_u3dmodel_id = rm.id
        LEFT join product_category_rel pcr on bp.id = pcr.product_id
        where 1 =1 and bp.is_deleted = 0
        and bp.windows_u3dmodel_id is not null and windows_u3dmodel_id != 0
        <if test="companyId != null">
            and bp.company_id = #{companyId}
        </if>
        <if test="brandIds!=null and brandIds.size > 0">
            and bp.brand_id in
            <foreach collection="brandIds" open="(" separator="," close=")" item="bid">
                #{bid}
            </foreach>
        </if>
        <if test="categoryIds != null and categoryIds.size > 0">
            and pcr.category_id in
            <foreach collection="categoryIds" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="productCode != null and productCode!=''">
            and bp.product_code like concat('%',#{productCode},'%')
        </if>
        <if test="productName != null and productName!=''">
            and bp.product_name like concat('%',#{productName},'%')
        </if>
        <if test="modelCode != null and modelCode!=''">
            and bp.model_code like concat('%',#{modelCode},'%')
        </if>
        <if test="modelNumber != null and modelNumber!=''">
            and bp.product_model_number like concat('%',#{modelNumber},'%')
        </if>

    </select>

    <select id="getNotBeSInitProductIds" resultType="java.lang.Integer">
        select id from base_product
        where is_deleted = 0 and brand_id != -1
        and num_att3 is null and putaway_state = 3
    </select>

    <update id="updateProductInitStatus" parameterType="java.lang.Integer">
        update base_product set num_att3 = 1 where id in
        <foreach collection="list" item="id" separator="," close=")" open="(">
            #{id}
        </foreach>
    </update>

    <update id="synProductCompanyInfoWithBrandId">
        UPDATE
        base_product bp,
        base_brand bb
        SET
        bp.company_id = IFNULL(bb.company_id, 0),
        bp.remark = '根据品牌同步产品公司ID'
        WHERE bp.brand_id = bb.id
        and bp.id in
        <foreach collection="needSynProductIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <update id="synProductPutawayState">
        update base_product set putaway_state = 3,remark='商家后台同步产品状态(1->3)' where
        id in
        <foreach collection="needSynProductIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
    <update id="updateProductTypeInfo" parameterType="com.sandu.api.product.model.Product">
        <foreach collection="list" item="item" separator=";" close=";">
            update base_product set product_type_mark = #{item.productTypeMark},product_small_type_mark =
            #{item.productSmallTypeMark}
            where id = #{item.id}
        </foreach>
    </update>
    <update id="updateGroupActivity">
        update group_purchase_activity
				set activity_status = 4,remark = #{remark}
				where spu_id in
						(
						select spu_id from base_goods_sku
						where product_id IN
                        <foreach collection="ids" item="id" separator="," close=")" open="(">
                            #{id}
                        </foreach>
						)
              and (activity_status = 0 or activity_status =1)
    </update>
    <update id="updateGroupActivityBySpuId">
        update group_purchase_activity
        set activity_status = 4,remark = "活动产品下架导致活动失效"
        where spu_id in
        <foreach collection="ids" item="id" separator="," close=")" open="(">
            #{id}
        </foreach>
    </update>

    <select id="getAutoSynProductIds" resultType="java.lang.Integer">
        select id from base_product
        where is_deleted = 0 and brand_id != -1
        and num_att3 is null and putaway_state = 3 and pic_id != 0 and pic_id is not null
        limit 3000
    </select>

    <select id="getSoftHardProduct" resultType="java.lang.String">
        select GROUP_CONCAT(id)  from base_product where
        product_batch_id in
        <foreach collection="productIds" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        AND id !=product_batch_id
    </select>

    <select id="getBePutAwayProduct" resultType="java.lang.Integer">
        select * from base_product where
        id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        <!-- and putaway_state = 3 and (windows_u3dmodel_id != -1 or material_pic_ids != '-1') -->
    </select>

    <select id="getProductDeliveredInfo" resultType="java.lang.String">
        SELECT group_concat(bp.company_id)  from base_product bp, base_company  bc
        where  bp.company_id = bc.id and  bp.origin_id = #{productId} GROUP BY bp.company_id
    </select>
    <select id="getMaxId" resultType="java.lang.String">
       SELECT max(id)
        FROM base_product
    </select>
    <select id="getNeedBeSyncProductInfo" resultType="com.sandu.api.product.model.Product">
        SELECT bp.id, bp.product_name, sc.type as product_type_mark, sc.valuekey as product_small_type_mark
FROM sys_dictionary s ,sys_dictionary sc , base_product bp where s.valuekey = sc.type and s.value = bp.product_type_value
 and s.type = 'productType' and sc.value = bp.product_small_type_value and product_type_mark is null limit 1500
    </select>
    <select id="getProductNumberWordRecommends" resultType="java.lang.String">
        select distinct product_model_number from base_product where is_deleted = 0
        and company_id = #{companyId}
        <if test="wordStart !=null and wordStart != ''">
            and product_model_number like Concat(#{wordStart},'%')
        </if>
        <if test="brandId != null ">
            and brand_id = #{brandId}
        </if>
        AND product_model_number IS NOT NULL AND product_model_number!=''
        order by product_model_number
    </select>

    <!-- 获取商家后台创建并且有效的非白膜产品 -->
    <select id="selectMerchantProductList" resultType="com.sandu.api.product.model.Product">
    	SELECT * FROM base_product a
    	WHERE a.`product_code` LIKE 'P%'
    	AND a.`is_deleted` = 0
    	AND a.`product_code` NOT LIKE 'baimo%'
    </select>
    <select id="getNeedSynProductIds" resultType="java.lang.Integer">
        select id from base_product where putaway_state = 1 and is_deleted = 0
        and (windows_u3dmodel_id != -1 or material_pic_ids != '-1') limit 500
    </select>

    <select id="getNeedUpdateProductIds" resultType="java.lang.Integer">
		 select bp.id from base_product bp , base_brand b where bp.brand_id = b.id and bp.brand_id > 0 and bp.company_id = 0 limit 500
    </select>
    <select id="listSecondProductId2ModelIdWithMainId" resultType="com.sandu.api.product.model.Product">
        select id , windows_u3dmodel_id  from base_product where is_deleted = 0  and product_batch_id = #{id}
    </select>
    <select id="getHardProductIds" resultType="java.lang.String">
        select group_concat(id) from base_product where product_batch_id in
        <foreach collection="ids" item="id" separator="," close=")" open="(">
            #{id}
        </foreach>
        and product_batch_type != 1
    </select>

    <delete id="fixedProductToSku" statementType="CALLABLE">
        {call resolve_sandu_product()}
    </delete>

    <delete id="hardDeleteProductByIds">
        delete from base_product where id in
        <foreach collection="productIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="removeGroupActivity">
        delete from group_purchase_goods
        where spu_id in
        (
            select spu_id from base_goods_sku
            where product_id IN
            <foreach collection="ids" item="id" separator="," close=")" open="(">
                #{id}
            </foreach>
        )
    </delete>

    <select id="getGoodsIdsByProductIds" parameterType="java.util.List" resultType="java.lang.Integer">
        <if test="productIds != null and productIds.size > 0">
            select
                distinct goods_spu_id
            from
                base_product
            where
                id in
                <foreach collection="productIds" index="index" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
        </if>
    </select>
    <select id="validGroupActivity" resultType="java.lang.Integer">
        select count(1) from group_purchase_activity where id in
				(
					SELECT purchase_activity_id from group_purchase_goods
					where spu_id in
						(
						select spu_id from base_goods_sku
						where product_id IN
						  <foreach collection="ids" item="id" separator="," close=")" open="(">
                              #{id}
                          </foreach>
						)
				)
		and activity_status = 2
    </select>
    <select id="validGroupActivityBySpuId" resultType="java.lang.Integer">
        select count(1) from group_purchase_activity where id in
				(
					SELECT purchase_activity_id from group_purchase_goods
					where spu_id in
                    <foreach collection="ids" item="id" separator="," close=")" open="(">
                        #{id}
                    </foreach>
				)
				and activity_status = 2
    </select>
    <select id="getProductPutInfo" resultType="java.lang.Integer">
        select putaway_state from platform2c_product_rel
        where is_deleted = 0 and platform_id =14
        and product_id in
        <foreach collection="ids" item="id" separator="," close=")" open="(">
            #{id}
        </foreach>
    </select>
    
    <!-- 查询有异常的模型区域信息 -->
    <select id="getSplitTexturesInfo" resultMap="AllResultMap">
       SELECT 
		 *
		FROM
		  base_product0123 where is_deleted = 0
    </select>
    
    <update id="updateProductBak">
    	update base_product0123 set is_deleted = #{isDeleted} where id = #{productId}
    </update>
    
</mapper>