<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nork.product.dao.StructureProductMapper">
	<!-- **插入定义** -->
	<insert id="insertSelective" parameterType="com.nork.product.model.StructureProduct"  useGeneratedKeys="true" keyProperty="id">
		insert into structure_product
		<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="structureCode!= null">structure_code, </if>
		<if test="structureName!= null">structure_name, </if>
		<if test="templetId!= null">templet_id, </if>
		<if test="status!= null">status, </if>
		<if test="picId!= null">pic_id, </if>
		<if test="descPicId!= null">desc_pic_id, </if>
		<if test="configFileId!= null">config_file_id, </if>
		<if test="groupFlag!= null">group_flag, </if>
		<if test="sysCode!= null">sys_code, </if>
		<if test="creator!= null">creator, </if>
		<if test="gmtCreate!= null">gmt_create, </if>
		<if test="modifier!= null">modifier, </if>
		<if test="gmtModified!= null">gmt_modified, </if>
		<if test="isDeleted!= null">is_deleted, </if>
		<if test="att1!= null">att1, </if>
		<if test="att2!= null">att2, </if>
		<if test="numa1!= null">numa1, </if>
		<if test="numa2!= null">numa2, </if>
		<if test="remark!= null">remark, </if>
		<if test="structureType!= null">structure_type, </if>
		<if test="structureNumber!= null">structure_number, </if>
		<if test="styleId!= null">style_id, </if>
		<if test="regionMark!= null">region_mark, </if>
		<if test="measureCode!= null">measure_code, </if>
		<if test="describeInfo!= null">describe_info, </if>
		<if test="isCommon!= null">is_common, </if>
		<if test="structureSmallType!= null">structure_small_type, </if>
		<if test="spellingFlowerFileId!= null">spelling_flower_file_id, </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="structureCode!= null">  #{structureCode,jdbcType=VARCHAR}, </if>
		<if test="structureName!= null">  #{structureName,jdbcType=VARCHAR}, </if>
		<if test="templetId!= null">  #{templetId,jdbcType=INTEGER}, </if>
		<if test="status!= null">  #{status,jdbcType=INTEGER}, </if>
		<if test="picId!= null">  #{picId,jdbcType=INTEGER}, </if>
		<if test="descPicId!= null">  #{descPicId,jdbcType=INTEGER}, </if>
		<if test="configFileId!= null">  #{configFileId,jdbcType=INTEGER}, </if>
		<if test="groupFlag!= null">  #{groupFlag,jdbcType=VARCHAR}, </if>
		<if test="sysCode!= null">  #{sysCode,jdbcType=VARCHAR}, </if>
		<if test="creator!= null">  #{creator,jdbcType=VARCHAR}, </if>
		<if test="gmtCreate!= null">  #{gmtCreate,jdbcType=TIMESTAMP}, </if>
		<if test="modifier!= null">  #{modifier,jdbcType=VARCHAR}, </if>
		<if test="gmtModified!= null">  #{gmtModified,jdbcType=TIMESTAMP}, </if>
		<if test="isDeleted!= null">  #{isDeleted,jdbcType=INTEGER}, </if>
		<if test="att1!= null">  #{att1,jdbcType=VARCHAR}, </if>
		<if test="att2!= null">  #{att2,jdbcType=VARCHAR}, </if>
		<if test="numa1!= null">  #{numa1,jdbcType=INTEGER}, </if>
		<if test="numa2!= null">  #{numa2,jdbcType=INTEGER}, </if>
		<if test="remark!= null">  #{remark,jdbcType=VARCHAR}, </if>	
		<if test="structureType!= null">  #{structureType,jdbcType=VARCHAR}, </if>
		<if test="structureNumber!= null">  #{structureNumber,jdbcType=INTEGER}, </if>
		<if test="styleId!= null">  #{styleId,jdbcType=INTEGER}, </if>
		<if test="regionMark!= null">  #{regionMark,jdbcType=VARCHAR}, </if>
		<if test="measureCode!= null">  #{measureCode,jdbcType=VARCHAR}, </if>
		<if test="describeInfo!= null">  #{describeInfo,jdbcType=VARCHAR}, </if>
		<if test="isCommon!= null">  #{isCommon,jdbcType=INTEGER}, </if>
		<if test="structureSmallType!= null">  #{structureSmallType,jdbcType=INTEGER}, </if>
		<if test="spellingFlowerFileId!= null">#{spellingFlowerFileId,jdbcType=INTEGER}, </if>
		</trim>
	</insert>

	<!-- **更新定义** -->
	<update id="updateByPrimaryKeySelective" parameterType="com.nork.product.model.StructureProduct">
		update structure_product
		<set>
		<if test="spellingFlowerFileId!= null">spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}, </if>
		<if test="structureCode!= null">  structure_code = #{structureCode,jdbcType=VARCHAR}, </if>
		<if test="structureName!= null">  structure_name = #{structureName,jdbcType=VARCHAR}, </if>
		<if test="templetId!= null">  templet_id = #{templetId,jdbcType=INTEGER}, </if>
		<if test="status!= null">  status = #{status,jdbcType=INTEGER}, </if>
		<if test="picId!= null">  pic_id = #{picId,jdbcType=INTEGER}, </if>
		<if test="descPicId!= null">  desc_pic_id = #{descPicId,jdbcType=INTEGER}, </if>
		<if test="configFileId!= null">  config_file_id = #{configFileId,jdbcType=INTEGER}, </if>
		<if test="groupFlag!= null">  group_flag = #{groupFlag,jdbcType=VARCHAR}, </if>
		<if test="sysCode!= null">  sys_code = #{sysCode,jdbcType=VARCHAR}, </if>
		<if test="creator!= null">  creator = #{creator,jdbcType=VARCHAR}, </if>
		<if test="gmtCreate!= null">  gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}, </if>
		<if test="modifier!= null">  modifier = #{modifier,jdbcType=VARCHAR}, </if>
		<if test="gmtModified!= null">  gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}, </if>
		<if test="isDeleted!= null">  is_deleted = #{isDeleted,jdbcType=INTEGER}, </if>
		<if test="att1!= null">  att1 = #{att1,jdbcType=VARCHAR}, </if>
		<if test="att2!= null">  att2 = #{att2,jdbcType=VARCHAR}, </if>
		<if test="numa1!= null">  numa1 = #{numa1,jdbcType=INTEGER}, </if>
		<if test="numa2!= null">  numa2 = #{numa2,jdbcType=INTEGER}, </if>
		<if test="remark!= null">  remark = #{remark,jdbcType=VARCHAR}, </if>
		<if test="structureType!= null">  structure_type = #{structureType,jdbcType=VARCHAR}, </if>
		<if test="structureNumber!= null">  structure_number = #{structureNumber,jdbcType=INTEGER}, </if>
		<if test="styleId!= null">  style_id = #{styleId,jdbcType=INTEGER}, </if>
		<if test="regionMark!= null">  region_mark = #{regionMark,jdbcType=VARCHAR}, </if>
		<if test="measureCode!= null">  measure_code = #{measureCode,jdbcType=VARCHAR}, </if>
		<if test="describeInfo!= null">  describe_info = #{describeInfo,jdbcType=VARCHAR}, </if>
		<if test="isCommon!= null">  is_common = #{isCommon,jdbcType=INTEGER}, </if>
		<if test="structureSmallType!= null">  structure_small_type = #{structureSmallType,jdbcType=INTEGER}, </if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- **删除定义** -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from structure_product
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<!-- **常量定义** -->
	<sql id="All_Column_List">
		id,structure_code,spelling_flower_file_id,structure_name,templet_id,status,pic_id,desc_pic_id,config_file_id,group_flag,sys_code,creator,gmt_create,modifier,gmt_modified,is_deleted,att1,att2,numa1,numa2,remark,structure_type,structure_number,style_id,region_mark,measure_code,describe_info,is_common,structure_ground_identify_str
	</sql>
	
	<!-- **结果定义** -->
	<resultMap id="AllResultMap" type="com.nork.product.model.StructureProduct">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result  column="spelling_flower_file_id" property="spellingFlowerFileId" jdbcType="INTEGER" />
		<result  column="space_code" property="spaceCode" jdbcType="VARCHAR" />
		<result  column="structure_code" property="structureCode" jdbcType="VARCHAR" />
		<result  column="structure_name" property="structureName" jdbcType="VARCHAR" />
		<result  column="templet_id" property="templetId" jdbcType="INTEGER" />
		<result  column="status" property="status" jdbcType="INTEGER" />
		<result  column="pic_id" property="picId" jdbcType="INTEGER" />
		<result  column="desc_pic_id" property="descPicId" jdbcType="INTEGER" />
		<result  column="config_file_id" property="configFileId" jdbcType="INTEGER" />
		<result  column="group_flag" property="groupFlag" jdbcType="VARCHAR" />
		<result  column="sys_code" property="sysCode" jdbcType="VARCHAR" />
		<result  column="creator" property="creator" jdbcType="VARCHAR" />
		<result  column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result  column="modifier" property="modifier" jdbcType="VARCHAR" />
		<result  column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
		<result  column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
		<result  column="att1" property="att1" jdbcType="VARCHAR" />
		<result  column="att2" property="att2" jdbcType="VARCHAR" />
		<result  column="numa1" property="numa1" jdbcType="INTEGER" />
		<result  column="numa2" property="numa2" jdbcType="INTEGER" />
		<result  column="remark" property="remark" jdbcType="VARCHAR" />
		<result  column="structure_type" property="structureType" jdbcType="VARCHAR" />
		<result  column="structure_number" property="structureNumber" jdbcType="INTEGER" />
		<result  column="style_id" property="styleId" jdbcType="INTEGER" />
		<result  column="region_mark" property="regionMark" jdbcType="VARCHAR" />
		<result  column="measure_code" property="measureCode" jdbcType="VARCHAR" />
		<result  column="describe_info" property="describeInfo" jdbcType="VARCHAR" />
		<result  column="is_common" property="isCommon" jdbcType="INTEGER" />
		<result  column="planStructureRegionMark" property="planStructureRegionMark" jdbcType="VARCHAR" />
		<result  column="structure_ground_identify_str" property="structureGroundIdentify" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- **查询定义** -->
	<!-- 按主键查询 -->
	<select id="selectByPrimaryKey" resultMap="AllResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="All_Column_List" />
		from structure_product
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- 查询所有，可排序 -->
    <select id="selectList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.StructureProduct">
		select
		<include refid="All_Column_List" />
		from structure_product
        where 1=1
         <if test="spellingFlowerFileId!= null">and spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}  </if>
		<if test="structureCode!= null">  and structure_code = #{structureCode,jdbcType=VARCHAR} </if>
		<if test="structureName!= null">  and structure_name = #{structureName,jdbcType=VARCHAR} </if>
		<if test="templetId!= null">  and templet_id = #{templetId,jdbcType=INTEGER} </if>
		<if test="status!= null">  and status = #{status,jdbcType=INTEGER} </if>
		<if test="picId!= null">  and pic_id = #{picId,jdbcType=INTEGER} </if>
		<if test="descPicId!= null">  and desc_pic_id = #{descPicId,jdbcType=INTEGER} </if>
		<if test="configFileId!= null">  and config_file_id = #{configFileId,jdbcType=INTEGER} </if>
		<if test="groupFlag!= null">  and group_flag = #{groupFlag,jdbcType=VARCHAR} </if>
		<if test="sysCode!= null">  and sys_code = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="creator!= null">  and creator = #{creator,jdbcType=VARCHAR} </if>
		<if test="gmtCreate!= null">  and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP} </if>
		<if test="modifier!= null">  and modifier = #{modifier,jdbcType=VARCHAR} </if>
		<if test="gmtModified!= null">  and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP} </if>
		<if test="isDeleted!= null">  and is_deleted = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="att1!= null">  and att1 = #{att1,jdbcType=VARCHAR} </if>
		<if test="att2!= null">  and att2 = #{att2,jdbcType=VARCHAR} </if>
		<if test="numa1!= null">  and numa1 = #{numa1,jdbcType=INTEGER} </if>
		<if test="numa2!= null">  and numa2 = #{numa2,jdbcType=INTEGER} </if>
		<if test="remark!= null">  and remark = #{remark,jdbcType=VARCHAR} </if>
		<if test="order != null and  order !=''  ">
			order by ${order}
			<if test="orderNum != null and  orderNum !='' ">
				${orderNum}
			</if>
		</if>
		<if test="orders != null and  orders !=''  ">
		   order by ${orders}
		</if>
	</select>
	
	<!-- 分页汇总 -->
	<select id="selectCount" resultType="int"
		parameterType="com.nork.product.model.search.StructureProductSearch">
		select count(*)
		from structure_product
		where 1=1
		 <if test="spellingFlowerFileId!= null">and spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}  </if>
		<if test="structureSmallTypeList !=  null and  structureSmallTypeList.size > 0  ">
			and structure_small_type in
			<foreach collection="structureSmallTypeList" index="index" item="item" open="(" separator="," close=")">
					#{item}
			</foreach>
		</if>
		<if test="structureCode !=  null and structureCode !=  ''   "> and structure_code  = #{structureCode,jdbcType=VARCHAR} </if>
		<if test="sch_StructureCode_ !=  null and sch_StructureCode_ !=  ''   ">
			and structure_code  like CONCAT(CONCAT('%',#{sch_StructureCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_StructureCode !=  null and sch_StructureCode !=  ''   ">
			and structure_code  like CONCAT('%',#{sch_StructureCode,jdbcType=VARCHAR})
		 </if>
		<if test="schStructureCode_ !=  null and schStructureCode_ !=  ''   ">
			and structure_code  like CONCAT(#{schStructureCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="structureCodeStart !=  null and structureCodeEnd!= null  ">
			and structure_code between #{structureCodeStart,jdbcType=VARCHAR} and #{structureCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="structureName !=  null and structureName !=  ''   "> and structure_name  = #{structureName,jdbcType=VARCHAR} </if>
		<if test="sch_StructureName_ !=  null and sch_StructureName_ !=  ''   ">
			and structure_name  like CONCAT(CONCAT('%',#{sch_StructureName_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_StructureName !=  null and sch_StructureName !=  ''   ">
			and structure_name  like CONCAT('%',#{sch_StructureName,jdbcType=VARCHAR})
		 </if>
		<if test="schStructureName_ !=  null and schStructureName_ !=  ''   ">
			and structure_name  like CONCAT(#{schStructureName_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="structureNameStart !=  null and structureNameEnd!= null  ">
			and structure_name between #{structureNameStart,jdbcType=VARCHAR} and #{structureNameEnd,jdbcType=VARCHAR}
		 </if>
		<if test="templetId !=  null  ">			and templet_id  = #{templetId,jdbcType=INTEGER} </if>
		<if test="status !=  null">			and status  = #{status,jdbcType=INTEGER} </if>
		<if test="picId !=  null  ">			and pic_id  = #{picId,jdbcType=INTEGER} </if>
		<if test="configFileId !=  null  ">			and config_file_id  = #{configFileId,jdbcType=INTEGER} </if>
		<if test="groupFlag !=  null and groupFlag !=  ''   "> and group_flag  = #{groupFlag,jdbcType=VARCHAR} </if>
		<if test="sch_GroupFlag_ !=  null and sch_GroupFlag_ !=  ''   ">
			and group_flag  like CONCAT(CONCAT('%',#{sch_GroupFlag_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_GroupFlag !=  null and sch_GroupFlag !=  ''   ">
			and group_flag  like CONCAT('%',#{sch_GroupFlag,jdbcType=VARCHAR})
		 </if>
		<if test="schGroupFlag_ !=  null and schGroupFlag_ !=  ''   ">
			and group_flag  like CONCAT(#{schGroupFlag_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="groupFlagStart !=  null and groupFlagEnd!= null  ">
			and group_flag between #{groupFlagStart,jdbcType=VARCHAR} and #{groupFlagEnd,jdbcType=VARCHAR}
		 </if>
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code  = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code  like CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code  like CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		 </if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code  like CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and #{sysCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="creator !=  null and creator !=  ''   "> and creator  = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator  like CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator  like CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		 </if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator  like CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and #{creatorEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtCreate !=  null  ">
			and gmt_create  = #{gmtCreate,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between #{gmtCreateStart,jdbcType=TIMESTAMP} and #{gmtCreateEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier  = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier  like CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier  like CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		 </if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier  like CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and #{modifierEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtModified !=  null  ">
			and gmt_modified  = #{gmtModified,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between #{gmtModifiedStart,jdbcType=TIMESTAMP} and #{gmtModifiedEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="isDeleted !=  null  ">			and is_deleted  = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="att1 !=  null and att1 !=  ''   "> and att1  = #{att1,jdbcType=VARCHAR} </if>
		<if test="sch_Att1_ !=  null and sch_Att1_ !=  ''   ">
			and att1  like CONCAT(CONCAT('%',#{sch_Att1_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Att1 !=  null and sch_Att1 !=  ''   ">
			and att1  like CONCAT('%',#{sch_Att1,jdbcType=VARCHAR})
		 </if>
		<if test="schAtt1_ !=  null and schAtt1_ !=  ''   ">
			and att1  like CONCAT(#{schAtt1_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="att1Start !=  null and att1End!= null  ">
			and att1 between #{att1Start,jdbcType=VARCHAR} and #{att1End,jdbcType=VARCHAR}
		 </if>
		<if test="att2 !=  null and att2 !=  ''   "> and att2  = #{att2,jdbcType=VARCHAR} </if>
		<if test="sch_Att2_ !=  null and sch_Att2_ !=  ''   ">
			and att2  like CONCAT(CONCAT('%',#{sch_Att2_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Att2 !=  null and sch_Att2 !=  ''   ">
			and att2  like CONCAT('%',#{sch_Att2,jdbcType=VARCHAR})
		 </if>
		<if test="schAtt2_ !=  null and schAtt2_ !=  ''   ">
			and att2  like CONCAT(#{schAtt2_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="att2Start !=  null and att2End!= null  ">
			and att2 between #{att2Start,jdbcType=VARCHAR} and #{att2End,jdbcType=VARCHAR}
		 </if>
		<if test="numa1 !=  null  ">			and numa1  = #{numa1,jdbcType=INTEGER} </if>
		<if test="numa2 !=  null  ">			and numa2  = #{numa2,jdbcType=INTEGER} </if>
		<if test="statusList !=  null and  statusList.size > 0  ">
			and status in 
			<foreach collection="statusList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="remark !=  null and remark !=  ''   "> and remark  = #{remark,jdbcType=VARCHAR} </if>		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark  like CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		 </if>		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark  like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		 </if>		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark  like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		 </if>		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and #{remarkEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="structureGroundIdentify != null"> and structure_ground_identify_str  = #{structureGroundIdentify,jdbcType=VARCHAR} </if>
	</select>
	
	<!-- 分页查询 ,可在StructureProductSearch中自定义查询条件-->
	<select id="selectPaginatedList" resultMap="AllResultMap"
		parameterType="com.nork.product.model.search.StructureProductSearch">
		select
		<include refid="All_Column_List" />
	    from structure_product
		where 1=1	
		 <if test="spellingFlowerFileId!= null">and spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}  </if>
		<if test="structureSmallTypeList !=  null and  structureSmallTypeList.size > 0  ">
			and structure_small_type in
			<foreach collection="structureSmallTypeList" index="index" item="item" open="(" separator="," close=")">
					#{item}
			</foreach>
		</if>
		<if test="structureCode !=  null and structureCode !=  ''   "> and structure_code  = #{structureCode,jdbcType=VARCHAR} </if>
		<if test="sch_StructureCode_ !=  null and sch_StructureCode_ !=  ''   ">
			and structure_code  like CONCAT(CONCAT('%',#{sch_StructureCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_StructureCode !=  null and sch_StructureCode !=  ''   ">
			and structure_code  like CONCAT('%',#{sch_StructureCode,jdbcType=VARCHAR})
		 </if>
		<if test="schStructureCode_ !=  null and schStructureCode_ !=  ''   ">
			and structure_code  like CONCAT(#{schStructureCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="structureCodeStart !=  null and structureCodeEnd!= null  ">
			and structure_code between #{structureCodeStart,jdbcType=VARCHAR} and #{structureCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="structureName !=  null and structureName !=  ''   "> and structure_name  = #{structureName,jdbcType=VARCHAR} </if>
		<if test="sch_StructureName_ !=  null and sch_StructureName_ !=  ''   ">
			and structure_name  like CONCAT(CONCAT('%',#{sch_StructureName_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_StructureName !=  null and sch_StructureName !=  ''   ">
			and structure_name  like CONCAT('%',#{sch_StructureName,jdbcType=VARCHAR})
		 </if>
		<if test="schStructureName_ !=  null and schStructureName_ !=  ''   ">
			and structure_name  like CONCAT(#{schStructureName_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="structureNameStart !=  null and structureNameEnd!= null  ">
			and structure_name between #{structureNameStart,jdbcType=VARCHAR} and #{structureNameEnd,jdbcType=VARCHAR}
		 </if>
		<if test="templetId !=  null  ">			and templet_id  = #{templetId,jdbcType=INTEGER} </if>
		<if test="status !=  null">			and status  = #{status,jdbcType=INTEGER} </if>
		<!-- <if test="status !=  null and  status == 3 "> 			and status in (1,2) </if> -->
		<if test="picId !=  null  ">			and pic_id  = #{picId,jdbcType=INTEGER} </if>
		<if test="configFileId !=  null  ">			and config_file_id  = #{configFileId,jdbcType=INTEGER} </if>
		<if test="groupFlag !=  null and groupFlag !=  ''   "> and group_flag  = #{groupFlag,jdbcType=VARCHAR} </if>
		<if test="sch_GroupFlag_ !=  null and sch_GroupFlag_ !=  ''   ">
			and group_flag  like CONCAT(CONCAT('%',#{sch_GroupFlag_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_GroupFlag !=  null and sch_GroupFlag !=  ''   ">
			and group_flag  like CONCAT('%',#{sch_GroupFlag,jdbcType=VARCHAR})
		 </if>
		<if test="schGroupFlag_ !=  null and schGroupFlag_ !=  ''   ">
			and group_flag  like CONCAT(#{schGroupFlag_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="groupFlagStart !=  null and groupFlagEnd!= null  ">
			and group_flag between #{groupFlagStart,jdbcType=VARCHAR} and #{groupFlagEnd,jdbcType=VARCHAR}
		 </if>
		<if test="sysCode !=  null and sysCode !=  ''   "> and sys_code  = #{sysCode,jdbcType=VARCHAR} </if>
		<if test="sch_SysCode_ !=  null and sch_SysCode_ !=  ''   ">
			and sys_code  like CONCAT(CONCAT('%',#{sch_SysCode_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_SysCode !=  null and sch_SysCode !=  ''   ">
			and sys_code  like CONCAT('%',#{sch_SysCode,jdbcType=VARCHAR})
		 </if>
		<if test="schSysCode_ !=  null and schSysCode_ !=  ''   ">
			and sys_code  like CONCAT(#{schSysCode_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="sysCodeStart !=  null and sysCodeEnd!= null  ">
			and sys_code between #{sysCodeStart,jdbcType=VARCHAR} and #{sysCodeEnd,jdbcType=VARCHAR}
		 </if>
		<if test="creator !=  null and creator !=  ''   "> and creator  = #{creator,jdbcType=VARCHAR} </if>
		<if test="sch_Creator_ !=  null and sch_Creator_ !=  ''   ">
			and creator  like CONCAT(CONCAT('%',#{sch_Creator_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Creator !=  null and sch_Creator !=  ''   ">
			and creator  like CONCAT('%',#{sch_Creator,jdbcType=VARCHAR})
		 </if>
		<if test="schCreator_ !=  null and schCreator_ !=  ''   ">
			and creator  like CONCAT(#{schCreator_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="creatorStart !=  null and creatorEnd!= null  ">
			and creator between #{creatorStart,jdbcType=VARCHAR} and #{creatorEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtCreate !=  null  ">
			and gmt_create  = #{gmtCreate,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and gmt_create between #{gmtCreateStart,jdbcType=TIMESTAMP} and #{gmtCreateEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="modifier !=  null and modifier !=  ''   "> and modifier  = #{modifier,jdbcType=VARCHAR} </if>
		<if test="sch_Modifier_ !=  null and sch_Modifier_ !=  ''   ">
			and modifier  like CONCAT(CONCAT('%',#{sch_Modifier_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Modifier !=  null and sch_Modifier !=  ''   ">
			and modifier  like CONCAT('%',#{sch_Modifier,jdbcType=VARCHAR})
		 </if>
		<if test="schModifier_ !=  null and schModifier_ !=  ''   ">
			and modifier  like CONCAT(#{schModifier_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="modifierStart !=  null and modifierEnd!= null  ">
			and modifier between #{modifierStart,jdbcType=VARCHAR} and #{modifierEnd,jdbcType=VARCHAR}
		 </if>
		<if test="gmtModified !=  null  ">
			and gmt_modified  = #{gmtModified,jdbcType=TIMESTAMP}
		 </if>
		<if test="gmtModifiedStart !=  null and gmtModifiedEnd!= null  ">
			and gmt_modified between #{gmtModifiedStart,jdbcType=TIMESTAMP} and #{gmtModifiedEnd,jdbcType=TIMESTAMP}
		 </if>
		<if test="isDeleted !=  null  ">			and is_deleted  = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="att1 !=  null and att1 !=  ''   "> and att1  = #{att1,jdbcType=VARCHAR} </if>
		<if test="sch_Att1_ !=  null and sch_Att1_ !=  ''   ">
			and att1  like CONCAT(CONCAT('%',#{sch_Att1_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Att1 !=  null and sch_Att1 !=  ''   ">
			and att1  like CONCAT('%',#{sch_Att1,jdbcType=VARCHAR})
		 </if>
		<if test="schAtt1_ !=  null and schAtt1_ !=  ''   ">
			and att1  like CONCAT(#{schAtt1_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="att1Start !=  null and att1End!= null  ">
			and att1 between #{att1Start,jdbcType=VARCHAR} and #{att1End,jdbcType=VARCHAR}
		 </if>
		<if test="att2 !=  null and att2 !=  ''   "> and att2  = #{att2,jdbcType=VARCHAR} </if>
		<if test="sch_Att2_ !=  null and sch_Att2_ !=  ''   ">
			and att2  like CONCAT(CONCAT('%',#{sch_Att2_,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="sch_Att2 !=  null and sch_Att2 !=  ''   ">
			and att2  like CONCAT('%',#{sch_Att2,jdbcType=VARCHAR})
		 </if>
		<if test="schAtt2_ !=  null and schAtt2_ !=  ''   ">
			and att2  like CONCAT(#{schAtt2_,jdbcType=VARCHAR},'%')
		 </if>
		<if test="att2Start !=  null and att2End!= null  ">
			and att2 between #{att2Start,jdbcType=VARCHAR} and #{att2End,jdbcType=VARCHAR}
		 </if>
		<if test="numa1 !=  null  ">			and numa1  = #{numa1,jdbcType=INTEGER} </if>
		<if test="numa2 !=  null  ">			and numa2  = #{numa2,jdbcType=INTEGER} </if>
		<if test="statusList !=  null and  statusList.size > 0  ">
			and status in 
			<foreach collection="statusList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="remark !=  null and remark !=  ''   "> and remark  = #{remark,jdbcType=VARCHAR} </if>		<if test="sch_Remark_ !=  null and sch_Remark_ !=  ''   ">
			and remark  like CONCAT(CONCAT('%',#{sch_Remark_,jdbcType=VARCHAR}),'%')
		 </if>		<if test="sch_Remark !=  null and sch_Remark !=  ''   ">
			and remark  like CONCAT('%',#{sch_Remark,jdbcType=VARCHAR})
		 </if>		<if test="schRemark_ !=  null and schRemark_ !=  ''   ">
			and remark  like CONCAT(#{schRemark_,jdbcType=VARCHAR},'%')
		 </if>		<if test="remarkStart !=  null and remarkEnd!= null  ">
			and remark between #{remarkStart,jdbcType=VARCHAR} and #{remarkEnd,jdbcType=VARCHAR}
		 </if>
		 <if test="structureGroundIdentify != null"> and structure_ground_identify_str  = #{structureGroundIdentify,jdbcType=VARCHAR} </if>
		<if test="order != null and  order !=''  ">
			order by ${order} <if test="orderNum != null and  orderNum !='' ">${orderNum}</if>
		</if>
		<if test="orders != null and  orders !=''  ">  order by #{orders}</if>
		<if test="order == null and  orders == null ">  order by id desc</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>

    <!-- updateDesignTempletStructureRelationByStructureId -->    
	<update id="updateDesignTempletStructureRelationByStructureId">
		update design_templet_product set product_group_id = 0,plan_group_id = 0,group_type = 0 
		where product_group_id = #{structureId,jdbcType=INTEGER} and group_type = 1;
	</update>

	<!-- 根据条件查询结构列表-->
	<select id="getStructureObject" resultMap="AllResultMap"
			parameterType="com.nork.product.model.search.StructureProductSearch">
		select
			<include refid="All_Column_List" />
		from structure_product
		where 1=1
		 <if test="spellingFlowerFileId!= null">and spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}  </if>
		<if test="templetId !=  null  "> and templet_id  = #{templetId,jdbcType=INTEGER} </if>
		<if test="structureType !=  null and structureType !=  ''   "> and structure_type  = #{structureType,jdbcType=VARCHAR} </if>
		<if test="styleId !=  null and styleId !=  ''   "> and style_id  = #{styleId,jdbcType=INTEGER} </if>
		<if test="measureCode !=  null and measureCode !=  ''   "> and measure_code  = #{measureCode,jdbcType=INTEGER} </if>
		<if test="statusList !=  null and  statusList.size > 0  ">
			and status in
			<foreach collection="statusList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="structureNumber !=  null  "> and structure_number  &lt;= #{structureNumber,jdbcType=INTEGER} </if>
		<if test="isDeleted !=  null  "> and is_deleted  = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="structureNumber != null">  order by structure_number desc</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>


	<select id="">
		SELECT bp.`id`,bp.`product_code`,sp.`structure_code` FROM
		structure_product sp,(SELECT product_id,structure_id FROM structure_product_details) AS spd,
		base_product bp WHERE
		 sp.id = spd.structure_id
		 AND spd.product_id=bp.id
		 AND sp.`structure_code` = "E03_0135_001_qiangm_st_01"
	</select>
	
	 <!-- updateStatus -->
     <update id="updateStatus">
		update structure_product set status = #{newStatus,jdbcType=INTEGER}
		where status = #{oldStatus,jdbcType=INTEGER}
	</update>

	<!-- 通用结构条件查询汇总 -->
	<select id="getCommonStructureCount" resultType="int"
			parameterType="com.nork.product.model.search.StructureProductSearch">
		select count(*)
		from structure_product
		where 1=1
		 <if test="spellingFlowerFileId!= null">and spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}  </if>
		<if test="structureCode != null and structureCode != ''"> and structure_code  = #{structureCode,jdbcType=VARCHAR} </if>
		<if test="groupFlag != null and groupFlag != ''"> and group_flag  = #{groupFlag,jdbcType=VARCHAR} </if>
		<if test="structureType !=  null and structureType !=  ''"> and structure_type  = #{structureType,jdbcType=VARCHAR} </if>
		<if test="isDeleted != null"> and is_deleted  = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="styleId!= null ">  and style_id = #{styleId,jdbcType=INTEGER} </if>
		<if test="measureCode!= null and measureCode != ''" > and measure_code = #{measureCode,jdbcType=VARCHAR} </if>
		<if test="isCommon!= null and isCommon != ''" >
			and
			(is_common = #{isCommon,jdbcType=INTEGER}

			<if test="templetId != null"> or templet_id  = #{templetId,jdbcType=INTEGER} </if>
			)
		</if>
		<if test="statusList != null and statusList.size > 0 ">
			and status in
			<foreach collection="statusList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="id != null">
			and id != #{id,jdbcType=INTEGER}
		</if>
		<!-- 地面结构布局标识 -->
		<if test="structureGroundIdentify != null"> and structure_ground_identify_str  = #{structureGroundIdentify,jdbcType=VARCHAR} </if>
		<!-- 地面结构布局标识list -->
		<if test="identifyList != null and identifyList.size != 0">
			and structure_ground_identify_str in
			<foreach collection="identifyList" item="identifyListItem" open="(" close=")" separator=",">
				#{identifyListItem, jdbcType = VARCHAR}
			</foreach>
		</if>
	</select>
	<!-- 通用结构条件查询 -->
	<select id="getCommonStructureList" resultMap="AllResultMap"
			parameterType="com.nork.product.model.search.StructureProductSearch">
		select
		<include refid="All_Column_List" />
		from structure_product
		where 1=1
		 <if test="spellingFlowerFileId!= null">and spelling_flower_file_id = #{spellingFlowerFileId,jdbcType=INTEGER}  </if>
		<if test="structureCode != null and structureCode != ''"> and structure_code  = #{structureCode,jdbcType=VARCHAR} </if>
		<if test="groupFlag != null and groupFlag != ''"> and group_flag  = #{groupFlag,jdbcType=VARCHAR} </if>
		<if test="structureType !=  null and structureType !=  ''"> and structure_type  = #{structureType,jdbcType=VARCHAR} </if>
		<if test="isDeleted != null"> and is_deleted  = #{isDeleted,jdbcType=INTEGER} </if>
		<if test="styleId!= null ">  and style_id = #{styleId,jdbcType=INTEGER} </if>
		<if test="measureCode!= null and measureCode != ''" > and measure_code = #{measureCode,jdbcType=VARCHAR} </if>
		<if test="isCommon!= null and isCommon != ''" >
			and
			(is_common = #{isCommon,jdbcType=INTEGER}

			<if test="templetId != null"> or templet_id  = #{templetId,jdbcType=INTEGER} </if>
			)
		</if>
		<if test="statusList != null and statusList.size > 0 ">
			and status in
			<foreach collection="statusList" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="id != null">
			and id != #{id,jdbcType=INTEGER}
		</if>
		<!-- 地面布局标识搜索 -->
		<if test="structureGroundIdentify != null"> and structure_ground_identify_str  = #{structureGroundIdentify,jdbcType=VARCHAR} </if>
		<!-- 地面布局标识List搜索 -->
		<if test="identifyList != null and identifyList.size != 0">
			and structure_ground_identify_str in
			<foreach collection="identifyList" item="identifyListItem" open="(" close=")" separator=",">
				#{identifyListItem, jdbcType = VARCHAR}
			</foreach>
		</if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>

	<!-- 批量删除 -->
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from structure_product where id in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 根据结构编码查询数据 -->
	<select id="getStructuresByDesignPlanId" resultMap="AllResultMap">
		select
		sp.*,dpp.region_mark AS planStructureRegionMark
		from structure_product sp
		LEFT JOIN design_plan_product dpp ON dpp.product_group_id = sp.id and dpp.is_deleted = 0 and dpp.plan_id = #{designPlanId,jdbcType=INTEGER}
		where dpp.group_type  = 1 and sp.structure_type != 'BJQ'
		group by sp.structure_code
		order by dpp.region_mark ASC
	</select>
	
	<!-- getStructuresByRecommendedPlanId -->
		<select id="getStructuresByRecommendedPlanId" resultMap="AllResultMap">
		select
		sp.*,dpp.region_mark AS planStructureRegionMark
		from structure_product sp
		LEFT JOIN design_plan_recommended_product dpp ON dpp.product_group_id = sp.id and dpp.is_deleted = 0 and dpp.plan_recommended_id = #{recommendedPlanId,jdbcType=INTEGER}
		where dpp.group_type  = 1 and sp.structure_type != 'BJQ'
		group by sp.structure_code
		order by dpp.region_mark ASC
	</select>

	<!-- easySearch -->
	<select id="easySearch" resultType="java.lang.Integer">
		select id
		from structure_product 
		where 
		1=1 
		and is_deleted = 0
		<if test="measureCode != null">
			and measure_code = #{measureCode}
		</if>
		
		<if test="designTempletId != null">
			and (is_common = 1 or templet_id = #{designTempletId})
		</if>
		
		<if test="structureNumber != null">
			<!-- and structure_number = #{structureNumber} -->
			and structure_number &lt;= #{structureNumber}
		</if>
		<!-- <if test="structureProductSmallpoxIdentify != null">
			and structure_ground_identify_str = #{structureProductSmallpoxIdentify}
		</if> -->
		<if test="identifyList != null and identifyList.size != 0">
			and structure_ground_identify_str in
			<foreach collection="identifyList" item="identifyListItem" open="(" close=")" separator=",">
				#{identifyListItem, jdbcType = VARCHAR}
			</foreach>
		</if>
		order by 
		<if test="structureNumber != null">
			structure_number desc,
		</if>
		<if test="styleId != null">
			case
			when style_id = #{styleId} then 1
			else 0 end desc,
		</if>
		<if test="orderGroundIdentify != null">
			case
			when structure_ground_identify_str = #{orderGroundIdentify, jdbcType = VARCHAR} then 1
			else 0
			end desc,
		</if>
		id desc
		limit 0,1;
	</select>

	<resultMap type="com.nork.design.model.ProductListByTypeInfo$PlanProductInfo" id="PlanProductInfoMap">
		<result  column="product_id" property="productId" jdbcType="INTEGER" />
		<result  column="big_type_valuekey" property="bigTypeValuekey" jdbcType="VARCHAR" />
		<result  column="small_type_valuekey" property="smallTypeValuekey" jdbcType="VARCHAR" />
		<result  column="product_code" property="productCode" jdbcType="VARCHAR" />
		<result  column="full_pave_length" property="fullPaveLength" jdbcType="VARCHAR" />
	</resultMap>

	<!-- getPlanProductInfoListByStructureId -->
	<select id="getPlanProductInfoListByStructureId" resultMap="PlanProductInfoMap">
		select 
		bp.id as product_id,
		bigsd.valuekey as big_type_valuekey,
		smallsd.valuekey as small_type_valuekey,
		bp.product_code as product_code,
		bp.full_pave_length as full_pave_length
		from structure_product_details spd
		right join base_product bp on bp.id = spd.product_id
		left join sys_dictionary bigsd on bigsd.type = "productType" and bigsd.value = bp.product_type_value
		left join sys_dictionary smallsd on smallsd.type = bigsd.valuekey and smallsd.value = bp.product_small_type_value
		where spd.structure_id = #{structureId};
	</select>

	<!-- easySearchV2 -->
	<select id="easySearchV2" resultType="java.lang.Integer" parameterType="com.nork.product.model.search.StructureProductSearch">
		select id
		from structure_product 
		where 
		1=1 
		<if test="measureCode != null">
			and measure_code = #{measureCode}
		</if>
		<if test="structureNumber != null">
			and structure_number = #{structureNumber}
		</if>
		<if test="templetId != null">
			and templet_id = #{templetId}
		</if>
		<if test="structureType != null">
			and structure_type = #{structureType}
		</if>
		<if test="structureNumber != null">
			and structure_number = #{structureNumber}
		</if>
		<if test="styleId != null">
			order by 
			case
			when style_id = #{styleId} then 1
			else 0 end desc
		</if>
		limit 0,1;
	</select>




	<select id="getCountV2" resultType="int"
		parameterType="com.nork.product.model.search.StructureProductSearch">
				select count(DISTINCT sp.id) from  structure_product as sp 
			LEFT JOIN structure_product_details  as spd on(sp.id = spd.structure_id)
			LEFT JOIN base_product  as bp on(spd.product_id = bp.id)
			LEFT JOIN  design_templet  as dt on(sp.templet_id = dt.id)
			LEFT JOIN space_common  as sc on(dt.space_common_id = sc.id)
			LEFT JOIN house_space as hs ON (hs.standard_space_id = sc.id)
			LEFT JOIN base_house  AS bh ON (hs.house_id = bh.id)
			LEFT JOIN base_living  as bl ON (bl.id = bh.living_id)
			where 1 = 1 
			and sp.is_deleted = 0
<!-- 		and dt.is_deleted = 0 -->
<!-- 		and sc.is_deleted = 0 -->
<!-- 		and bp.putaway_state in (1,3) -->
<!-- 		and dt.putaway_state in (1,3) -->
		and sp.`status`  in (1,3,5)
		<if test="designTempletCode !=  null and designTempletCode !=  ''   ">
			and dt.design_code = #{designTempletCode,jdbcType=VARCHAR}
		</if>
		<if test="areaLongCode !=  null and areaLongCode !=  ''   ">
			and bl.area_long_code  like CONCAT(CONCAT('%',#{areaLongCode,jdbcType=VARCHAR}),'%')
		</if>
		<if test="structureSmallTypeList !=  null and  structureSmallTypeList.size > 0  ">
			and sp.structure_small_type in
			<foreach collection="structureSmallTypeList" index="index" item="item" open="(" separator="," close=")">
					#{item}
			</foreach>
		</if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and sp.gmt_create between #{gmtCreateStart,jdbcType=TIMESTAMP} and #{gmtCreateEnd,jdbcType=TIMESTAMP}
		 </if>
		 <if test="gmtCreateStartStr !=  null and gmtCreateEndStr!= null  ">
			and sp.gmt_create between #{gmtCreateStartStr,jdbcType=VARCHAR} and #{gmtCreateEndStr,jdbcType=VARCHAR}
		 </if>
	</select>
	
	
	<select id="getListV2" resultMap="AllResultMap"
		parameterType="com.nork.product.model.search.StructureProductSearch">
		select DISTINCT sp.*,sc.space_code 
			FROM  structure_product as sp 
			LEFT JOIN structure_product_details  as spd on(sp.id = spd.structure_id)
			LEFT JOIN base_product  as bp on(spd.product_id = bp.id)
			LEFT JOIN  design_templet  as dt on(sp.templet_id = dt.id)
			LEFT JOIN space_common  as sc on(dt.space_common_id = sc.id)
			LEFT JOIN house_space as hs ON (hs.standard_space_id = sc.id)
			LEFT JOIN base_house  AS bh ON (hs.house_id = bh.id)
			LEFT JOIN base_living  as bl ON (bl.id = bh.living_id)
			where 1 = 1 
		and sp.is_deleted = 0
<!-- 		and dt.is_deleted = 0 -->
<!-- 		and sc.is_deleted = 0 -->
<!-- 		and bp.putaway_state in (1,3) -->
<!-- 		and dt.putaway_state in (1,3) -->
		and sp.`status`  in (1,3,5)
		<!--  and hs.is_deleted = 0
		and bh.is_deleted = 0
		and bl.is_deleted = 0-->
		<if test="designTempletCode !=  null and designTempletCode !=  ''   ">
			and dt.design_code = #{designTempletCode,jdbcType=VARCHAR}
		</if>
		<if test="areaLongCode !=  null and areaLongCode !=  ''   ">
			and bl.area_long_code  like CONCAT(CONCAT('%',#{areaLongCode,jdbcType=VARCHAR}),'%')
		 </if>
		<if test="structureSmallTypeList !=  null and  structureSmallTypeList.size > 0  ">
			and sp.structure_small_type in
			<foreach collection="structureSmallTypeList" index="index" item="item" open="(" separator="," close=")">
					#{item}
			</foreach>
		</if>
		<if test="gmtCreateStart !=  null and gmtCreateEnd!= null  ">
			and sp.gmt_create between #{gmtCreateStart,jdbcType=TIMESTAMP} and #{gmtCreateEnd,jdbcType=TIMESTAMP}
		 </if>
		  <if test="gmtCreateStartStr !=  null and gmtCreateEndStr!= null  ">
			and sp.gmt_create between #{gmtCreateStartStr,jdbcType=VARCHAR} and #{gmtCreateEndStr,jdbcType=VARCHAR}
		 </if>
		<if test="start !=-1 and limit !=-1"> LIMIT #{start}, #{limit}</if>
	</select>
 
	
	
	<select id="getListByids" resultMap="AllResultMap" >
		select
		<include refid="All_Column_List" />
		from structure_product
		where id in
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
				#{item}
		</foreach>
	</select>
</mapper>
