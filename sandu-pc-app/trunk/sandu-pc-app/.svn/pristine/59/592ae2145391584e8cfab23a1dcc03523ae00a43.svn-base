package com.sandu.design.service.impl;

import com.sandu.design.dao.DesignPlanRecommendedMapper;
import com.sandu.design.model.DesignPlanRecommended;
import com.sandu.design.model.input.DesignPlanRecommendedSearch;
import com.sandu.design.model.output.DesignPlanRecommendedVo;
import com.sandu.design.model.output.DesignPlanStyleVo;
import com.sandu.design.service.DesignPlanRecommendedServiceV2;
import com.sandu.panorama.dao.DesignPlanStoreReleaseDetailsMapper;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

@Slf4j
@Transactional
@Service("designPlanRecommendedServiceV2")
public class DesignPlanRecommendedServiceImpl implements DesignPlanRecommendedServiceV2 {

    @Autowired
    private DesignPlanRecommendedMapper designPlanRecommendedMapper;
    @Autowired
    private DesignPlanStoreReleaseDetailsMapper designPlanStoreReleaseDetailsMapper;

    /**
     * 查询方案数量
     * @param designPlanRecommendedSearch
     * @return
     */
    @Override
    public int selectCount(DesignPlanRecommendedSearch designPlanRecommendedSearch) {
        if( designPlanRecommendedSearch == null || designPlanRecommendedSearch.getUserId() == null ){
            return 0;
        }
        String userType = designPlanStoreReleaseDetailsMapper.getColumnValueFromTableById("sys_user", "user_type", designPlanRecommendedSearch.getUserId());// TEMP
        String companyId = designPlanStoreReleaseDetailsMapper.getColumnValueFromTableById("sys_user", "business_administration_id", designPlanRecommendedSearch.getUserId());// TEMP
        designPlanRecommendedSearch.setCompanyId(Integer.valueOf(companyId));
        // 如果用户类型为经销商则需要去经销商所属企业ID
        if( "3".equals(userType) ){
            companyId = designPlanStoreReleaseDetailsMapper.getColumnValueFromTableById("base_company", "pid", Integer.valueOf(companyId));// TEMP
            designPlanRecommendedSearch.setCompanyId(Integer.valueOf(companyId));
        }
        // 品牌过滤，暂时不加

        designPlanRecommendedSearch.setRecommendedType(DesignPlanRecommended.RecommendedType.RECOMMENDED_TYPE_DECORATE);
        designPlanRecommendedSearch.setReleaseStatus(DesignPlanRecommended.ReleaseStatus.IS_RELEASEING);

        Integer count = designPlanRecommendedMapper.selectCount(designPlanRecommendedSearch);
        return count == null ? 0 : count;
    }

    /**
     * 查询方案列表
     * @param designPlanRecommendedSearch
     * @return
     */
    @Override
    public List<DesignPlanRecommendedVo> selectList(DesignPlanRecommendedSearch designPlanRecommendedSearch) {
        if( designPlanRecommendedSearch == null || designPlanRecommendedSearch.getUserId() == null ){
            return null;
        }
        String userType = designPlanStoreReleaseDetailsMapper.getColumnValueFromTableById("sys_user", "user_type", designPlanRecommendedSearch.getUserId());// TEMP
        String companyId = designPlanStoreReleaseDetailsMapper.getColumnValueFromTableById("sys_user", "business_administration_id", designPlanRecommendedSearch.getUserId());// TEMP
        designPlanRecommendedSearch.setCompanyId(Integer.valueOf(companyId));
        // 如果用户类型为经销商则需要去经销商所属企业ID
        if( "3".equals(userType) ){
            companyId = designPlanStoreReleaseDetailsMapper.getColumnValueFromTableById("base_company", "pid", Integer.valueOf(companyId));// TEMP
            designPlanRecommendedSearch.setCompanyId(Integer.valueOf(companyId));
        }
        // 品牌过滤，暂时不加

        designPlanRecommendedSearch.setRecommendedType(DesignPlanRecommended.RecommendedType.RECOMMENDED_TYPE_DECORATE);
        designPlanRecommendedSearch.setReleaseStatus(DesignPlanRecommended.ReleaseStatus.IS_RELEASEING);

        List<DesignPlanRecommendedVo> list = designPlanRecommendedMapper.selectList(designPlanRecommendedSearch);

        if( list != null && list.size() > 0 ) {
            for( DesignPlanRecommendedVo recommendedVo : list ){
                String picPath = designPlanRecommendedMapper.getCoverPicPath(recommendedVo.getPlanRecommendedId());
                recommendedVo.setPicPath(picPath);
            }
        }

        return designPlanRecommendedMapper.selectList(designPlanRecommendedSearch);
    }

    /**
     * 通过方案类型获取对应的方案风格 TEMP
     * @param designPlanType
     * @return
     */
    @Override
    public List<DesignPlanStyleVo> getPlanStyleList(Integer designPlanType) {
        if( designPlanType == null ){
            return null;
        }
        return designPlanRecommendedMapper.getPlanStyleList(designPlanType);
    }
}
