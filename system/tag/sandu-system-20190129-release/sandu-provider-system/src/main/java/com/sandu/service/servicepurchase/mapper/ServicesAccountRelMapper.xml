<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.sandu.service.servicepurchase.dao.ServicesAccountRelMapper">
    <resultMap id="BaseResultMap" type="com.sandu.api.servicepurchase.model.ServicesAccountRel">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="company_id" property="companyId" jdbcType="VARCHAR"/>
        <result column="services_id" property="servicesId" jdbcType="BIGINT"/>
        <result column="purchase_record_id" property="purchaseRecordId" jdbcType="BIGINT"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="modifier" property="modifier" jdbcType="VARCHAR"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER"/>
        <result column="effective_begin" property="effectiveBegin" jdbcType="TIMESTAMP"/>
        <result column="effective_end" property="effectiveEnd" jdbcType="TIMESTAMP"/>
        <result column="business_type" property="businessType" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, company_id, services_id,purchase_record_id,user_id,account, password, status, creator, gmt_create, modifier, 
    gmt_modified, is_deleted,effective_begin,effective_end,business_type,user_id
  </sql>

    <sql id="where_list">
        <if test="id != null">
            AND id = #{id,jdbcType=BIGINT}
        </if>
        <if test="userId != null">
            AND user_id = #{userId,jdbcType=INTEGER}
        </if>
        <if test="companyId != null">
            AND company_id = #{companyId,jdbcType=VARCHAR}
        </if>
        <if test="servicesId != null">
            AND services_id = #{servicesId,jdbcType=BIGINT}
        </if>
        <if test="purchaseRecordId != null">
            AND purchase_record_id = #{purchaseRecordId,jdbcType=BIGINT}
        </if>
        <if test="account != null">
            AND account = #{account,jdbcType=VARCHAR}
        </if>
        <if test="password != null">
            AND password = #{password,jdbcType=VARCHAR}
        </if>
        <if test="status != null">
            AND status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="effectiveBegin != null">
            AND effective_begin = #{effectiveBegin,jdbcType=TIMESTAMP}
        </if>
        <if test="effectiveEnd != null">
            AND effective_end = #{effectiveEnd,jdbcType=TIMESTAMP}
        </if>
        <if test="businessType != null">
            AND business_type = #{businessType,jdbcType=VARCHAR}
        </if>
        <if test="isDeleted != null">
            AND is_deleted = #{isDeleted,jdbcType=INTEGER}
        </if>
    </sql>
    <select id="queryByOption" resultMap="BaseResultMap"
            parameterType="com.sandu.api.servicepurchase.input.query.ServicesAccountRelQuery">
        select
        <include refid="Base_Column_List"/>
        from services_account_rel
        <where>
            <include refid="where_list"/>
        </where>
        order BY id desc
        <if test="start != null and limit != null">
            limit ${(start-1)*limit},${start*limit}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from services_account_rel
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAccountListByAccount" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from services_account_rel
        where account = #{account,jdbcType=VARCHAR}
        order by id asc
    </select>

    <select id="getAccountByUserId" resultType="com.sandu.api.servicepurchase.model.ServicesAccountRel">
      select * from services_account_rel where user_id = #{userId} and is_deleted = 0 order by id desc limit 1;
    </select>
    <select id="listRemainingAccounts" resultType="com.sandu.api.servicepurchase.model.ServicesAccountRel">
        select * from services_account_rel where effective_end  &lt;=  date_add(now(), interval #{topDays} day) AND now() &lt;= effective_end;
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from services_account_rel
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insertSelective" parameterType="com.sandu.api.servicepurchase.model.ServicesAccountRel"
            useGeneratedKeys="true"
            keyProperty="id">
        insert into services_account_rel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="servicesId != null">
                services_id,
            </if>
            <if test="purchaseRecordId != null">
                purchase_record_id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="effectiveBegin != null">
                effective_begin,
            </if>
            <if test="effectiveEnd != null">
                effective_end,
            </if>
            <if test="businessType != null">
                business_type,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="modifier != null">
                modifier,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=VARCHAR},
            </if>
            <if test="servicesId != null">
                #{servicesId,jdbcType=BIGINT},
            </if>
            <if test="purchaseRecordId != null">
                #{purchaseRecordId,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="effectiveBegin != null">
                #{effectiveBegin,jdbcType=TIMESTAMP},
            </if>
            <if test="effectiveEnd != null">
                #{effectiveEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="businessType != null">
                #{businessType,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifier != null">
                #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sandu.api.servicepurchase.model.ServicesAccountRel">
        update services_account_rel
        <set>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=VARCHAR},
            </if>
            <if test="servicesId != null">
                services_id = #{servicesId,jdbcType=BIGINT},
            </if>
            <if test="purchaseRecordId != null">
                purchase_record_id = #{purchaseRecordId,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="effectiveBegin != null">
                effective_begin = #{effectiveBegin,jdbcType=TIMESTAMP},
            </if>
            <if test="effectiveEnd != null">
                effective_end = #{effectiveEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="businessType != null">
                business_type = #{businessType,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <insert id="batchInsertServiceAccount">
        insert into services_account_rel (
        company_id, services_id, purchase_record_id,
        user_id,account, password, status,
        creator, gmt_create, modifier,
        gmt_modified, is_deleted,effective_begin,effective_end,business_type)
        values
        <foreach collection="accountList" item="item" separator=",">
            (
            #{item.companyId,jdbcType=VARCHAR},
            #{item.servicesId,jdbcType=BIGINT},#{item.purchaseRecordId,jdbcType=BIGINT},
            #{item.userId,jdbcType=BIGINT},#{item.account,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR},
            #{item.status,jdbcType=VARCHAR},
            #{item.creator,jdbcType=VARCHAR}, #{item.gmtCreate,jdbcType=TIMESTAMP}, #{item.modifier,jdbcType=VARCHAR},
            #{item.gmtModified,jdbcType=TIMESTAMP}, #{item.isDeleted,jdbcType=INTEGER},
            #{item.effectiveBegin,jdbcType=TIMESTAMP},
            #{item.effectiveEnd,jdbcType=TIMESTAMP}, #{item.businessType,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

</mapper>